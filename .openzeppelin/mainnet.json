{
  "contracts": {
    "Pool": {
      "address": "0xd9f4F9b14A230a982acC1814402Fc37144e96Bbe",
      "constructorCode": "6080604052611e9f806100136000396000f3fe",
      "bodyBytecodeHash": "2a2ec6424771ea860ab7fa2fd379d2b0ac8060372deba791994a077a87aeef7f",
      "localBytecodeHash": "49b331413c46da1ad0ed1eb58d223e215ab5829375e0b6445872cbdf4bc8edc7",
      "deployedBytecodeHash": "49b331413c46da1ad0ed1eb58d223e215ab5829375e0b6445872cbdf4bc8edc7",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_string": {
          "id": "t_string",
          "kind": "elementary",
          "label": "string"
        },
        "t_struct<AddressMap.Data>": {
          "id": "t_struct<AddressMap.Data>",
          "kind": "struct",
          "label": "AddressMap.Data",
          "members": [
            {
              "label": "valueOf",
              "astId": 16050,
              "type": "t_mapping<t_address>",
              "src": "278:35:63"
            },
            {
              "label": "keyOf",
              "astId": 16054,
              "type": "t_mapping<t_string>",
              "src": "323:33:63"
            },
            {
              "label": "items",
              "astId": 16056,
              "type": "t_struct<AddressList.Data>",
              "src": "366:33:63"
            }
          ]
        },
        "t_mapping<t_address>": {
          "id": "t_mapping<t_address>",
          "valueType": "t_address",
          "label": "mapping(key => address)",
          "kind": "mapping"
        },
        "t_mapping<t_string>": {
          "id": "t_mapping<t_string>",
          "valueType": "t_string",
          "label": "mapping(key => string)",
          "kind": "mapping"
        },
        "t_struct<AddressList.Data>": {
          "id": "t_struct<AddressList.Data>",
          "kind": "struct",
          "label": "AddressList.Data",
          "members": [
            {
              "label": "head",
              "astId": 15447,
              "type": "t_address",
              "src": "178:12:62"
            },
            {
              "label": "tail",
              "astId": 15449,
              "type": "t_address",
              "src": "200:12:62"
            },
            {
              "label": "length",
              "astId": 15451,
              "type": "t_uint256",
              "src": "222:14:62"
            },
            {
              "label": "isContain",
              "astId": 15455,
              "type": "t_mapping<t_bool>",
              "src": "246:37:62"
            },
            {
              "label": "nextOf",
              "astId": 15459,
              "type": "t_mapping<t_address>",
              "src": "293:34:62"
            },
            {
              "label": "prevOf",
              "astId": 15463,
              "type": "t_mapping<t_address>",
              "src": "337:34:62"
            }
          ]
        },
        "t_mapping<t_bool>": {
          "id": "t_mapping<t_bool>",
          "valueType": "t_bool",
          "label": "mapping(key => bool)",
          "kind": "mapping"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initialized",
          "astId": 18319,
          "type": "t_bool",
          "src": "757:24:82"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initializing",
          "astId": 18321,
          "type": "t_bool",
          "src": "876:25:82"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "______gap",
          "astId": 18383,
          "type": "t_array:50<t_uint256>",
          "src": "1982:29:82"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "_owner",
          "astId": 17252,
          "type": "t_address",
          "src": "526:22:73"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "______gap",
          "astId": 17365,
          "type": "t_array:50<t_uint256>",
          "src": "2471:29:73"
        },
        {
          "contract": "Pool",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\core\\Pool.sol",
          "label": "name",
          "astId": 166,
          "type": "t_string",
          "src": "209:19:3"
        },
        {
          "contract": "Pool",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\core\\Pool.sol",
          "label": "description",
          "astId": 168,
          "type": "t_string",
          "src": "234:26:3"
        },
        {
          "contract": "Pool",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\core\\Pool.sol",
          "label": "founder",
          "astId": 170,
          "type": "t_address",
          "src": "266:22:3"
        },
        {
          "contract": "Pool",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\core\\Pool.sol",
          "label": "modules",
          "astId": 172,
          "type": "t_struct<AddressMap.Data>",
          "src": "317:23:3"
        },
        {
          "contract": "Pool",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\core\\Pool.sol",
          "label": "is_constant",
          "astId": 182,
          "type": "t_mapping<t_bool>",
          "src": "468:43:3"
        },
        {
          "contract": "Pool",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\core\\Pool.sol",
          "label": "abiOf",
          "astId": 186,
          "type": "t_mapping<t_string>",
          "src": "622:39:3"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": []
      }
    },
    "AccessModule": {
      "address": "0x35233753A7d304460D59d4F7a23e5fE0C492E8F6",
      "constructorCode": "6080604052611b32806100136000396000f3fe",
      "bodyBytecodeHash": "23a570a3093c879d72021f8764069c5484693923866e12a39dc23d3b74df54f2",
      "localBytecodeHash": "b1edfc08df025471eaf034f533afb855d6968167378a1d496b7f0863cd299c24",
      "deployedBytecodeHash": "b1edfc08df025471eaf034f533afb855d6968167378a1d496b7f0863cd299c24",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_struct<Roles.Role>": {
          "id": "t_struct<Roles.Role>",
          "kind": "struct",
          "label": "Roles.Role",
          "members": [
            {
              "label": "bearer",
              "astId": 16249,
              "type": "t_mapping<t_bool>",
              "src": "150:32:65"
            }
          ]
        },
        "t_mapping<t_bool>": {
          "id": "t_mapping<t_bool>",
          "valueType": "t_bool",
          "label": "mapping(key => bool)",
          "kind": "mapping"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initialized",
          "astId": 18319,
          "type": "t_bool",
          "src": "757:24:82"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initializing",
          "astId": 18321,
          "type": "t_bool",
          "src": "876:25:82"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "______gap",
          "astId": 18383,
          "type": "t_array:50<t_uint256>",
          "src": "1982:29:82"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "_owner",
          "astId": 17252,
          "type": "t_address",
          "src": "526:22:73"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "______gap",
          "astId": 17365,
          "type": "t_array:50<t_uint256>",
          "src": "2471:29:73"
        },
        {
          "contract": "Module",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\common\\Module.sol",
          "label": "pool",
          "astId": 43,
          "type": "t_address",
          "src": "214:19:1"
        },
        {
          "contract": "PauserRole",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\PauserRole.sol",
          "label": "_pausers",
          "astId": 16592,
          "type": "t_struct<Roles.Role>",
          "src": "327:27:68"
        },
        {
          "contract": "PauserRole",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\PauserRole.sol",
          "label": "______gap",
          "astId": 16692,
          "type": "t_array:50<t_uint256>",
          "src": "1193:29:68"
        },
        {
          "contract": "Pausable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\lifecycle\\Pausable.sol",
          "label": "_paused",
          "astId": 16971,
          "type": "t_bool",
          "src": "909:20:71"
        },
        {
          "contract": "Pausable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\lifecycle\\Pausable.sol",
          "label": "______gap",
          "astId": 17054,
          "type": "t_array:50<t_uint256>",
          "src": "2163:29:71"
        },
        {
          "contract": "WhitelistAdminRole",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\WhitelistAdminRole.sol",
          "label": "_whitelistAdmins",
          "astId": 16715,
          "type": "t_struct<Roles.Role>",
          "src": "477:35:69"
        },
        {
          "contract": "WhitelistAdminRole",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\WhitelistAdminRole.sol",
          "label": "______gap",
          "astId": 16815,
          "type": "t_array:50<t_uint256>",
          "src": "1503:29:69"
        },
        {
          "contract": "WhitelistedRole",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\WhitelistedRole.sol",
          "label": "_whitelisteds",
          "astId": 16841,
          "type": "t_struct<Roles.Role>",
          "src": "709:32:70"
        },
        {
          "contract": "WhitelistedRole",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\WhitelistedRole.sol",
          "label": "______gap",
          "astId": 16949,
          "type": "t_array:50<t_uint256>",
          "src": "1760:29:70"
        },
        {
          "contract": "AccessModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\access\\AccessModule.sol",
          "label": "whitelistEnabled",
          "astId": 1700,
          "type": "t_bool",
          "src": "433:28:36"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": []
      }
    },
    "SavingsModule": {
      "address": "0x4B2464D5FfaB717ab0Bd26E5E30cB432B47E1EEd",
      "constructorCode": "6080604052615f1f806100136000396000f3fe",
      "bodyBytecodeHash": "fde47d1a08385627b8caf2997b245c68ec40d23519e2e5f953d4a71db565189d",
      "localBytecodeHash": "5e055dd4324ef5999f272530ea71b581c1df3c732b1633dff159947159270f75",
      "deployedBytecodeHash": "5e055dd4324ef5999f272530ea71b581c1df3c732b1633dff159947159270f75",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_struct<RewardDistributions.RewardTokenDistribution>": {
          "id": "t_struct<RewardDistributions.RewardTokenDistribution>",
          "kind": "struct",
          "label": "RewardDistributions.RewardTokenDistribution",
          "members": [
            {
              "label": "poolToken",
              "astId": 9869,
              "type": "t_address",
              "src": "915:17:74"
            },
            {
              "label": "totalShares",
              "astId": 9871,
              "type": "t_uint256",
              "src": "1006:19:74"
            },
            {
              "label": "rewardTokens",
              "astId": 9874,
              "type": "t_array:dyn<t_address>",
              "src": "1114:22:74"
            },
            {
              "label": "amounts",
              "astId": 9878,
              "type": "t_mapping<t_uint256>",
              "src": "1202:33:74"
            }
          ]
        },
        "t_array:dyn<t_address>": {
          "id": "t_array:dyn<t_address>",
          "valueType": "t_address",
          "length": "dyn",
          "kind": "array",
          "label": "address[]"
        },
        "t_mapping<t_uint256>": {
          "id": "t_mapping<t_uint256>",
          "valueType": "t_uint256",
          "label": "mapping(key => uint256)",
          "kind": "mapping"
        },
        "t_array:dyn<t_struct<RewardDistributions.RewardTokenDistribution>>": {
          "id": "t_array:dyn<t_struct<RewardDistributions.RewardTokenDistribution>>",
          "valueType": "t_struct<RewardDistributions.RewardTokenDistribution>",
          "length": "dyn",
          "kind": "array",
          "label": "RewardDistributions.RewardTokenDistribution[]"
        },
        "t_struct<RewardDistributions.RewardBalance>": {
          "id": "t_struct<RewardDistributions.RewardBalance>",
          "kind": "struct",
          "label": "RewardDistributions.RewardBalance",
          "members": [
            {
              "label": "nextDistribution",
              "astId": 9886,
              "type": "t_uint256",
              "src": "1424:24:74"
            },
            {
              "label": "shares",
              "astId": 9890,
              "type": "t_mapping<t_uint256>",
              "src": "1458:34:74"
            },
            {
              "label": "rewardsByProtocol",
              "astId": 9894,
              "type": "t_mapping<t_struct<RewardDistributions.UserProtocolRewards>>",
              "src": "1580:57:74"
            }
          ]
        },
        "t_struct<RewardDistributions.UserProtocolRewards>": {
          "id": "t_struct<RewardDistributions.UserProtocolRewards>",
          "kind": "struct",
          "label": "RewardDistributions.UserProtocolRewards",
          "members": [
            {
              "label": "amounts",
              "astId": 9883,
              "type": "t_mapping<t_uint256>",
              "src": "1286:33:74"
            }
          ]
        },
        "t_mapping<t_struct<RewardDistributions.UserProtocolRewards>>": {
          "id": "t_mapping<t_struct<RewardDistributions.UserProtocolRewards>>",
          "valueType": "t_struct<RewardDistributions.UserProtocolRewards>",
          "label": "mapping(key => RewardDistributions.UserProtocolRewards)",
          "kind": "mapping"
        },
        "t_mapping<t_struct<RewardDistributions.RewardBalance>>": {
          "id": "t_mapping<t_struct<RewardDistributions.RewardBalance>>",
          "valueType": "t_struct<RewardDistributions.RewardBalance>",
          "label": "mapping(key => RewardDistributions.RewardBalance)",
          "kind": "mapping"
        },
        "t_struct<Roles.Role>": {
          "id": "t_struct<Roles.Role>",
          "kind": "struct",
          "label": "Roles.Role",
          "members": [
            {
              "label": "bearer",
              "astId": 20611,
              "type": "t_mapping<t_bool>",
              "src": "150:32:94"
            }
          ]
        },
        "t_mapping<t_bool>": {
          "id": "t_mapping<t_bool>",
          "valueType": "t_bool",
          "label": "mapping(key => bool)",
          "kind": "mapping"
        },
        "t_struct<SavingsModule.TokenData>": {
          "id": "t_struct<SavingsModule.TokenData>",
          "kind": "struct",
          "label": "SavingsModule.TokenData",
          "members": [
            {
              "label": "decimals",
              "astId": 10945,
              "type": "t_uint8",
              "src": "2368:14:75"
            }
          ]
        },
        "t_uint8": {
          "id": "t_uint8",
          "kind": "elementary",
          "label": "uint8"
        },
        "t_mapping<t_struct<SavingsModule.TokenData>>": {
          "id": "t_mapping<t_struct<SavingsModule.TokenData>>",
          "valueType": "t_struct<SavingsModule.TokenData>",
          "label": "mapping(key => SavingsModule.TokenData)",
          "kind": "mapping"
        },
        "t_struct<SavingsModule.ProtocolInfo>": {
          "id": "t_struct<SavingsModule.ProtocolInfo>",
          "kind": "struct",
          "label": "SavingsModule.ProtocolInfo",
          "members": [
            {
              "label": "poolToken",
              "astId": 10925,
              "type": "t_address",
              "src": "1936:19:75"
            },
            {
              "label": "previousBalance",
              "astId": 10927,
              "type": "t_uint256",
              "src": "1965:23:75"
            },
            {
              "label": "lastRewardDistribution",
              "astId": 10929,
              "type": "t_uint256",
              "src": "1998:30:75"
            },
            {
              "label": "supportedRewardTokens",
              "astId": 10932,
              "type": "t_array:dyn<t_address>",
              "src": "2038:31:75"
            },
            {
              "label": "userCap",
              "astId": 10936,
              "type": "t_mapping<t_uint256>",
              "src": "2079:35:75"
            },
            {
              "label": "withdrawAllSlippage",
              "astId": 10938,
              "type": "t_uint256",
              "src": "2193:27:75"
            },
            {
              "label": "isVipUser",
              "astId": 10942,
              "type": "t_mapping<t_bool>",
              "src": "2289:32:75"
            }
          ]
        },
        "t_mapping<t_struct<SavingsModule.ProtocolInfo>>": {
          "id": "t_mapping<t_struct<SavingsModule.ProtocolInfo>>",
          "valueType": "t_struct<SavingsModule.ProtocolInfo>",
          "label": "mapping(key => SavingsModule.ProtocolInfo)",
          "kind": "mapping"
        },
        "t_mapping<t_address>": {
          "id": "t_mapping<t_address>",
          "valueType": "t_address",
          "label": "mapping(key => address)",
          "kind": "mapping"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initialized",
          "astId": 22681,
          "type": "t_bool",
          "src": "757:24:111"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initializing",
          "astId": 22683,
          "type": "t_bool",
          "src": "876:25:111"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "______gap",
          "astId": 22745,
          "type": "t_array:50<t_uint256>",
          "src": "1982:29:111"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "_owner",
          "astId": 21614,
          "type": "t_address",
          "src": "526:22:102"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "______gap",
          "astId": 21727,
          "type": "t_array:50<t_uint256>",
          "src": "2471:29:102"
        },
        {
          "contract": "Module",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\common\\Module.sol",
          "label": "pool",
          "astId": 43,
          "type": "t_address",
          "src": "214:19:1"
        },
        {
          "contract": "RewardDistributions",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\savings\\RewardDistributions.sol",
          "label": "rewardDistributions",
          "astId": 9898,
          "type": "t_array:dyn<t_struct<RewardDistributions.RewardTokenDistribution>>",
          "src": "1735:45:74"
        },
        {
          "contract": "RewardDistributions",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\savings\\RewardDistributions.sol",
          "label": "rewardBalances",
          "astId": 9902,
          "type": "t_mapping<t_struct<RewardDistributions.RewardBalance>>",
          "src": "1786:46:74"
        },
        {
          "contract": "CapperRole",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\CapperRole.sol",
          "label": "_cappers",
          "astId": 20708,
          "type": "t_struct<Roles.Role>",
          "src": "327:27:95"
        },
        {
          "contract": "CapperRole",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\CapperRole.sol",
          "label": "______gap",
          "astId": 20808,
          "type": "t_array:50<t_uint256>",
          "src": "1193:29:95"
        },
        {
          "contract": "SavingsModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\savings\\SavingsModule.sol",
          "label": "registeredTokens",
          "astId": 10949,
          "type": "t_array:dyn<t_address>",
          "src": "2395:26:75"
        },
        {
          "contract": "SavingsModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\savings\\SavingsModule.sol",
          "label": "registeredProtocols",
          "astId": 10952,
          "type": "t_array:dyn<t_address>",
          "src": "2427:35:75"
        },
        {
          "contract": "SavingsModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\savings\\SavingsModule.sol",
          "label": "registeredRewardTokens",
          "astId": 10955,
          "type": "t_array:dyn<t_address>",
          "src": "2468:32:75"
        },
        {
          "contract": "SavingsModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\savings\\SavingsModule.sol",
          "label": "tokens",
          "astId": 10959,
          "type": "t_mapping<t_struct<SavingsModule.TokenData>>",
          "src": "2506:36:75"
        },
        {
          "contract": "SavingsModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\savings\\SavingsModule.sol",
          "label": "protocols",
          "astId": 10963,
          "type": "t_mapping<t_struct<SavingsModule.ProtocolInfo>>",
          "src": "2548:42:75"
        },
        {
          "contract": "SavingsModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\savings\\SavingsModule.sol",
          "label": "poolTokenToProtocol",
          "astId": 10967,
          "type": "t_mapping<t_address>",
          "src": "2672:47:75"
        },
        {
          "contract": "SavingsModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\savings\\SavingsModule.sol",
          "label": "rewardTokenRegistered",
          "astId": 10971,
          "type": "t_mapping<t_bool>",
          "src": "2766:54:75"
        },
        {
          "contract": "SavingsModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\savings\\SavingsModule.sol",
          "label": "userCapEnabled",
          "astId": 10973,
          "type": "t_bool",
          "src": "2863:26:75"
        },
        {
          "contract": "SavingsModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\savings\\SavingsModule.sol",
          "label": "protocolCapEnabled",
          "astId": 10975,
          "type": "t_bool",
          "src": "2895:30:75"
        },
        {
          "contract": "SavingsModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\savings\\SavingsModule.sol",
          "label": "defaultUserCap",
          "astId": 10979,
          "type": "t_mapping<t_uint256>",
          "src": "2931:47:75"
        },
        {
          "contract": "SavingsModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\savings\\SavingsModule.sol",
          "label": "protocolCap",
          "astId": 10983,
          "type": "t_mapping<t_uint256>",
          "src": "2984:44:75"
        },
        {
          "contract": "SavingsModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\savings\\SavingsModule.sol",
          "label": "vipUserEnabled",
          "astId": 10985,
          "type": "t_bool",
          "src": "3034:26:75"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": [],
        "storageUncheckedVars": [
          {
            "contract": "RewardDistributions",
            "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\savings\\RewardDistributions.sol",
            "label": "rewardDistributions",
            "astId": 9898,
            "type": "t_array:dyn<t_struct<RewardDistributions.RewardTokenDistribution>>",
            "src": "1735:45:74"
          },
          {
            "contract": "RewardDistributions",
            "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\savings\\RewardDistributions.sol",
            "label": "rewardBalances",
            "astId": 9902,
            "type": "t_mapping<t_struct<RewardDistributions.RewardBalance>>",
            "src": "1786:46:74"
          },
          {
            "contract": "CapperRole",
            "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\CapperRole.sol",
            "label": "_cappers",
            "astId": 20708,
            "type": "t_struct<Roles.Role>",
            "src": "327:27:95"
          },
          {
            "contract": "SavingsModule",
            "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\savings\\SavingsModule.sol",
            "label": "tokens",
            "astId": 10959,
            "type": "t_mapping<t_struct<SavingsModule.TokenData>>",
            "src": "2506:36:75"
          },
          {
            "contract": "SavingsModule",
            "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\savings\\SavingsModule.sol",
            "label": "protocols",
            "astId": 10963,
            "type": "t_mapping<t_struct<SavingsModule.ProtocolInfo>>",
            "src": "2548:42:75"
          }
        ],
        "storageDiff": []
      }
    },
    "StakingPool": {
      "address": "0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3",
      "constructorCode": "6080604052613c60806100136000396000f3fe",
      "bodyBytecodeHash": "60965f9d49cef418d279f85723bfadf4617846dfc49f07eec8e11245d9d14fae",
      "localBytecodeHash": "cdad1b94a3e7938fed0f562d4ebbcce257d2d57e0d5beb94c5a5a27cf7132766",
      "deployedBytecodeHash": "cdad1b94a3e7938fed0f562d4ebbcce257d2d57e0d5beb94c5a5a27cf7132766",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_struct<Roles.Role>": {
          "id": "t_struct<Roles.Role>",
          "kind": "struct",
          "label": "Roles.Role",
          "members": [
            {
              "label": "bearer",
              "astId": 20669,
              "type": "t_mapping<t_bool>",
              "src": "150:32:94"
            }
          ]
        },
        "t_mapping<t_bool>": {
          "id": "t_mapping<t_bool>",
          "valueType": "t_bool",
          "label": "mapping(key => bool)",
          "kind": "mapping"
        },
        "t_struct<StakingPoolBase.StakeContract>": {
          "id": "t_struct<StakingPoolBase.StakeContract>",
          "kind": "struct",
          "label": "StakingPoolBase.StakeContract",
          "members": [
            {
              "label": "totalStakedFor",
              "astId": 13447,
              "type": "t_uint256",
              "src": "1932:22:78"
            },
            {
              "label": "personalStakeIndex",
              "astId": 13449,
              "type": "t_uint256",
              "src": "1961:26:78"
            },
            {
              "label": "personalStakes",
              "astId": 13452,
              "type": "t_array:dyn<t_struct<StakingPoolBase.Stake>>",
              "src": "1994:22:78"
            },
            {
              "label": "exists",
              "astId": 13454,
              "type": "t_bool",
              "src": "2023:11:78"
            }
          ]
        },
        "t_struct<StakingPoolBase.Stake>": {
          "id": "t_struct<StakingPoolBase.Stake>",
          "kind": "struct",
          "label": "StakingPoolBase.Stake",
          "members": [
            {
              "label": "unlockedTimestamp",
              "astId": 13440,
              "type": "t_uint256",
              "src": "1488:25:78"
            },
            {
              "label": "actualAmount",
              "astId": 13442,
              "type": "t_uint256",
              "src": "1519:20:78"
            },
            {
              "label": "stakedFor",
              "astId": 13444,
              "type": "t_address",
              "src": "1545:17:78"
            }
          ]
        },
        "t_array:dyn<t_struct<StakingPoolBase.Stake>>": {
          "id": "t_array:dyn<t_struct<StakingPoolBase.Stake>>",
          "valueType": "t_struct<StakingPoolBase.Stake>",
          "length": "dyn",
          "kind": "array",
          "label": "StakingPoolBase.Stake[]"
        },
        "t_mapping<t_struct<StakingPoolBase.StakeContract>>": {
          "id": "t_mapping<t_struct<StakingPoolBase.StakeContract>>",
          "valueType": "t_struct<StakingPoolBase.StakeContract>",
          "label": "mapping(key => StakingPoolBase.StakeContract)",
          "kind": "mapping"
        },
        "t_mapping<t_uint256>": {
          "id": "t_mapping<t_uint256>",
          "valueType": "t_uint256",
          "label": "mapping(key => uint256)",
          "kind": "mapping"
        },
        "t_array:dyn<t_address>": {
          "id": "t_array:dyn<t_address>",
          "valueType": "t_address",
          "length": "dyn",
          "kind": "array",
          "label": "address[]"
        },
        "t_struct<StakingPool.RewardData>": {
          "id": "t_struct<StakingPool.RewardData>",
          "kind": "struct",
          "label": "StakingPool.RewardData",
          "members": [
            {
              "label": "distributions",
              "astId": 12928,
              "type": "t_array:dyn<t_struct<StakingPool.RewardDistribution>>",
              "src": "845:34:77"
            },
            {
              "label": "unclaimed",
              "astId": 12930,
              "type": "t_uint256",
              "src": "889:17:77"
            }
          ]
        },
        "t_struct<StakingPool.RewardDistribution>": {
          "id": "t_struct<StakingPool.RewardDistribution>",
          "kind": "struct",
          "label": "StakingPool.RewardDistribution",
          "members": [
            {
              "label": "totalShares",
              "astId": 12917,
              "type": "t_uint256",
              "src": "644:19:77"
            },
            {
              "label": "amount",
              "astId": 12919,
              "type": "t_uint256",
              "src": "673:14:77"
            }
          ]
        },
        "t_array:dyn<t_struct<StakingPool.RewardDistribution>>": {
          "id": "t_array:dyn<t_struct<StakingPool.RewardDistribution>>",
          "valueType": "t_struct<StakingPool.RewardDistribution>",
          "length": "dyn",
          "kind": "array",
          "label": "StakingPool.RewardDistribution[]"
        },
        "t_mapping<t_struct<StakingPool.RewardData>>": {
          "id": "t_mapping<t_struct<StakingPool.RewardData>>",
          "valueType": "t_struct<StakingPool.RewardData>",
          "label": "mapping(key => StakingPool.RewardData)",
          "kind": "mapping"
        },
        "t_struct<StakingPool.UserRewardInfo>": {
          "id": "t_struct<StakingPool.UserRewardInfo>",
          "kind": "struct",
          "label": "StakingPool.UserRewardInfo",
          "members": [
            {
              "label": "nextDistribution",
              "astId": 12924,
              "type": "t_mapping<t_uint256>",
              "src": "732:42:77"
            }
          ]
        },
        "t_mapping<t_struct<StakingPool.UserRewardInfo>>": {
          "id": "t_mapping<t_struct<StakingPool.UserRewardInfo>>",
          "valueType": "t_struct<StakingPool.UserRewardInfo>",
          "label": "mapping(key => StakingPool.UserRewardInfo)",
          "kind": "mapping"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initialized",
          "astId": 22739,
          "type": "t_bool",
          "src": "757:24:111"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initializing",
          "astId": 22741,
          "type": "t_bool",
          "src": "876:25:111"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "______gap",
          "astId": 22803,
          "type": "t_array:50<t_uint256>",
          "src": "1982:29:111"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "_owner",
          "astId": 21672,
          "type": "t_address",
          "src": "526:22:102"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "______gap",
          "astId": 21785,
          "type": "t_array:50<t_uint256>",
          "src": "2471:29:102"
        },
        {
          "contract": "Module",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\common\\Module.sol",
          "label": "pool",
          "astId": 43,
          "type": "t_address",
          "src": "214:19:1"
        },
        {
          "contract": "CapperRole",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\CapperRole.sol",
          "label": "_cappers",
          "astId": 20766,
          "type": "t_struct<Roles.Role>",
          "src": "327:27:95"
        },
        {
          "contract": "CapperRole",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\CapperRole.sol",
          "label": "______gap",
          "astId": 20866,
          "type": "t_array:50<t_uint256>",
          "src": "1193:29:95"
        },
        {
          "contract": "StakingPoolBase",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\staking\\StakingPoolBase.sol",
          "label": "stakingToken",
          "astId": 13432,
          "type": "t_address",
          "src": "699:18:78"
        },
        {
          "contract": "StakingPoolBase",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\staking\\StakingPoolBase.sol",
          "label": "defaultLockInDuration",
          "astId": 13434,
          "type": "t_uint256",
          "src": "778:36:78"
        },
        {
          "contract": "StakingPoolBase",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\staking\\StakingPoolBase.sol",
          "label": "stakeHolders",
          "astId": 13438,
          "type": "t_mapping<t_struct<StakingPoolBase.StakeContract>>",
          "src": "1156:54:78"
        },
        {
          "contract": "StakingPoolBase",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\staking\\StakingPoolBase.sol",
          "label": "userCapEnabled",
          "astId": 13457,
          "type": "t_bool",
          "src": "2043:26:78"
        },
        {
          "contract": "StakingPoolBase",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\staking\\StakingPoolBase.sol",
          "label": "userCap",
          "astId": 13461,
          "type": "t_mapping<t_uint256>",
          "src": "2074:42:78"
        },
        {
          "contract": "StakingPoolBase",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\staking\\StakingPoolBase.sol",
          "label": "defaultUserCap",
          "astId": 13463,
          "type": "t_uint256",
          "src": "2193:29:78"
        },
        {
          "contract": "StakingPoolBase",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\staking\\StakingPoolBase.sol",
          "label": "stakingCapEnabled",
          "astId": 13465,
          "type": "t_bool",
          "src": "2226:29:78"
        },
        {
          "contract": "StakingPoolBase",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\staking\\StakingPoolBase.sol",
          "label": "stakingCap",
          "astId": 13467,
          "type": "t_uint256",
          "src": "2259:25:78"
        },
        {
          "contract": "StakingPoolBase",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\staking\\StakingPoolBase.sol",
          "label": "vipUserEnabled",
          "astId": 13469,
          "type": "t_bool",
          "src": "2290:26:78"
        },
        {
          "contract": "StakingPoolBase",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\staking\\StakingPoolBase.sol",
          "label": "isVipUser",
          "astId": 13473,
          "type": "t_mapping<t_bool>",
          "src": "2320:41:78"
        },
        {
          "contract": "StakingPoolBase",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\staking\\StakingPoolBase.sol",
          "label": "totalStakedAmount",
          "astId": 13475,
          "type": "t_uint256",
          "src": "2366:34:78"
        },
        {
          "contract": "StakingPoolBase",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\staking\\StakingPoolBase.sol",
          "label": "______gap",
          "astId": 14561,
          "type": "t_array:50<t_uint256>",
          "src": "16692:29:78"
        },
        {
          "contract": "StakingPool",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\staking\\StakingPool.sol",
          "label": "rewardVesting",
          "astId": 12933,
          "type": "t_address",
          "src": "919:40:77"
        },
        {
          "contract": "StakingPool",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\staking\\StakingPool.sol",
          "label": "registeredRewardTokens",
          "astId": 12936,
          "type": "t_array:dyn<t_address>",
          "src": "965:41:77"
        },
        {
          "contract": "StakingPool",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\staking\\StakingPool.sol",
          "label": "rewards",
          "astId": 12940,
          "type": "t_mapping<t_struct<StakingPool.RewardData>>",
          "src": "1012:45:77"
        },
        {
          "contract": "StakingPool",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\staking\\StakingPool.sol",
          "label": "userRewards",
          "astId": 12944,
          "type": "t_mapping<t_struct<StakingPool.UserRewardInfo>>",
          "src": "1063:53:77"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": [],
        "storageUncheckedVars": [
          {
            "contract": "CapperRole",
            "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\CapperRole.sol",
            "label": "_cappers",
            "astId": 20766,
            "type": "t_struct<Roles.Role>",
            "src": "327:27:95"
          },
          {
            "contract": "StakingPoolBase",
            "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\staking\\StakingPoolBase.sol",
            "label": "stakeHolders",
            "astId": 13438,
            "type": "t_mapping<t_struct<StakingPoolBase.StakeContract>>",
            "src": "1156:54:78"
          },
          {
            "contract": "StakingPool",
            "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\staking\\StakingPool.sol",
            "label": "rewards",
            "astId": 12940,
            "type": "t_mapping<t_struct<StakingPool.RewardData>>",
            "src": "1012:45:77"
          },
          {
            "contract": "StakingPool",
            "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\staking\\StakingPool.sol",
            "label": "userRewards",
            "astId": 12944,
            "type": "t_mapping<t_struct<StakingPool.UserRewardInfo>>",
            "src": "1063:53:77"
          }
        ],
        "storageDiff": [
          {
            "action": "typechange",
            "updated": {
              "index": 10,
              "contract": "StakingPoolBase",
              "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\staking\\StakingPoolBase.sol",
              "label": "stakeHolders",
              "astId": 13438,
              "type": "t_mapping<t_struct<StakingPoolBase.StakeContract>>",
              "src": "1156:54:78"
            },
            "original": {
              "index": 10,
              "contract": "StakingPool",
              "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\staking\\StakingPool.sol",
              "label": "stakeHolders",
              "astId": 9697,
              "type": "t_mapping<t_struct<StakingPool.StakeContract>>",
              "src": "1152:54:52"
            }
          },
          {
            "action": "append",
            "updated": {
              "index": 18,
              "contract": "StakingPoolBase",
              "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\staking\\StakingPoolBase.sol",
              "label": "totalStakedAmount",
              "astId": 13475,
              "type": "t_uint256",
              "src": "2366:34:78"
            }
          },
          {
            "action": "append",
            "updated": {
              "index": 19,
              "contract": "StakingPoolBase",
              "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\staking\\StakingPoolBase.sol",
              "label": "______gap",
              "astId": 14561,
              "type": "t_array:50<t_uint256>",
              "src": "16692:29:78"
            }
          },
          {
            "action": "append",
            "updated": {
              "index": 20,
              "contract": "StakingPool",
              "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\staking\\StakingPool.sol",
              "label": "rewardVesting",
              "astId": 12933,
              "type": "t_address",
              "src": "919:40:77"
            }
          },
          {
            "action": "append",
            "updated": {
              "index": 21,
              "contract": "StakingPool",
              "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\staking\\StakingPool.sol",
              "label": "registeredRewardTokens",
              "astId": 12936,
              "type": "t_array:dyn<t_address>",
              "src": "965:41:77"
            }
          },
          {
            "action": "append",
            "updated": {
              "index": 22,
              "contract": "StakingPool",
              "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\staking\\StakingPool.sol",
              "label": "rewards",
              "astId": 12940,
              "type": "t_mapping<t_struct<StakingPool.RewardData>>",
              "src": "1012:45:77"
            }
          },
          {
            "action": "append",
            "updated": {
              "index": 23,
              "contract": "StakingPool",
              "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\staking\\StakingPool.sol",
              "label": "userRewards",
              "astId": 12944,
              "type": "t_mapping<t_struct<StakingPool.UserRewardInfo>>",
              "src": "1063:53:77"
            }
          }
        ]
      }
    },
    "CompoundProtocol_DAI": {
      "address": "0xFDce35FfC60769C7eC608107361fF453Da541E66",
      "constructorCode": "6080604052613038806100136000396000f3fe",
      "bodyBytecodeHash": "4532cd6d218090fa45693516f957d5a4597b7d9dca2e0ad8be38712fea8b0020",
      "localBytecodeHash": "39808b8464b161289942bf8a0fb010b1c89220c31c8a5eef8455d975fc7bee12",
      "deployedBytecodeHash": "39808b8464b161289942bf8a0fb010b1c89220c31c8a5eef8455d975fc7bee12",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_struct<Roles.Role>": {
          "id": "t_struct<Roles.Role>",
          "kind": "struct",
          "label": "Roles.Role",
          "members": [
            {
              "label": "bearer",
              "astId": 20669,
              "type": "t_mapping<t_bool>",
              "src": "150:32:94"
            }
          ]
        },
        "t_mapping<t_bool>": {
          "id": "t_mapping<t_bool>",
          "valueType": "t_bool",
          "label": "mapping(key => bool)",
          "kind": "mapping"
        },
        "t_mapping<t_uint256>": {
          "id": "t_mapping<t_uint256>",
          "valueType": "t_uint256",
          "label": "mapping(key => uint256)",
          "kind": "mapping"
        },
        "t_uint8": {
          "id": "t_uint8",
          "kind": "elementary",
          "label": "uint8"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initialized",
          "astId": 22739,
          "type": "t_bool",
          "src": "757:24:111"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initializing",
          "astId": 22741,
          "type": "t_bool",
          "src": "876:25:111"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "______gap",
          "astId": 22803,
          "type": "t_array:50<t_uint256>",
          "src": "1982:29:111"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "_owner",
          "astId": 21672,
          "type": "t_address",
          "src": "526:22:102"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "______gap",
          "astId": 21785,
          "type": "t_array:50<t_uint256>",
          "src": "2471:29:102"
        },
        {
          "contract": "Module",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\common\\Module.sol",
          "label": "pool",
          "astId": 43,
          "type": "t_address",
          "src": "214:19:1"
        },
        {
          "contract": "DefiOperatorRole",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\DefiOperatorRole.sol",
          "label": "_operators",
          "astId": 7728,
          "type": "t_struct<Roles.Role>",
          "src": "445:29:69"
        },
        {
          "contract": "ProtocolBase",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\ProtocolBase.sol",
          "label": "rewardBalances",
          "astId": 7865,
          "type": "t_mapping<t_uint256>",
          "src": "877:47:70"
        },
        {
          "contract": "CompoundProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CompoundProtocol.sol",
          "label": "baseToken",
          "astId": 4213,
          "type": "t_address",
          "src": "845:23:60"
        },
        {
          "contract": "CompoundProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CompoundProtocol.sol",
          "label": "decimals",
          "astId": 4215,
          "type": "t_uint8",
          "src": "874:21:60"
        },
        {
          "contract": "CompoundProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CompoundProtocol.sol",
          "label": "cToken",
          "astId": 4217,
          "type": "t_address",
          "src": "901:21:60"
        },
        {
          "contract": "CompoundProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CompoundProtocol.sol",
          "label": "comptroller",
          "astId": 4219,
          "type": "t_address",
          "src": "928:31:60"
        },
        {
          "contract": "CompoundProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CompoundProtocol.sol",
          "label": "compToken",
          "astId": 4221,
          "type": "t_address",
          "src": "965:23:60"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": [],
        "storageUncheckedVars": [
          {
            "contract": "DefiOperatorRole",
            "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\DefiOperatorRole.sol",
            "label": "_operators",
            "astId": 7728,
            "type": "t_struct<Roles.Role>",
            "src": "445:29:69"
          }
        ],
        "storageDiff": []
      }
    },
    "PoolToken_Compound_DAI": {
      "address": "0x5DBE889702b9d3b787A3b5D9D17ad59bf121b805",
      "constructorCode": "608060405261336c806100136000396000f3fe",
      "bodyBytecodeHash": "55ed64c1ff990ddef1f713de49b50e1b9d1c4fd4f22c5364a5686b88ed6e10ef",
      "localBytecodeHash": "35be248bda67b2911f0e4497efe7bd2d0f52765047cc3c39f024e9a499337bf6",
      "deployedBytecodeHash": "35be248bda67b2911f0e4497efe7bd2d0f52765047cc3c39f024e9a499337bf6",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_mapping<t_uint256>": {
          "id": "t_mapping<t_uint256>",
          "valueType": "t_uint256",
          "label": "mapping(key => uint256)",
          "kind": "mapping"
        },
        "t_string": {
          "id": "t_string",
          "kind": "elementary",
          "label": "string"
        },
        "t_uint8": {
          "id": "t_uint8",
          "kind": "elementary",
          "label": "uint8"
        },
        "t_struct<Roles.Role>": {
          "id": "t_struct<Roles.Role>",
          "kind": "struct",
          "label": "Roles.Role",
          "members": [
            {
              "label": "bearer",
              "astId": 16249,
              "type": "t_mapping<t_bool>",
              "src": "150:32:65"
            }
          ]
        },
        "t_mapping<t_bool>": {
          "id": "t_mapping<t_bool>",
          "valueType": "t_bool",
          "label": "mapping(key => bool)",
          "kind": "mapping"
        },
        "t_struct<DistributionToken.Distribution>": {
          "id": "t_struct<DistributionToken.Distribution>",
          "kind": "struct",
          "label": "DistributionToken.Distribution",
          "members": [
            {
              "label": "amount",
              "astId": 9768,
              "type": "t_uint256",
              "src": "745:14:50"
            },
            {
              "label": "totalSupply",
              "astId": 9770,
              "type": "t_uint256",
              "src": "832:19:50"
            }
          ]
        },
        "t_array:dyn<t_struct<DistributionToken.Distribution>>": {
          "id": "t_array:dyn<t_struct<DistributionToken.Distribution>>",
          "valueType": "t_struct<DistributionToken.Distribution>",
          "length": "dyn",
          "kind": "array",
          "label": "DistributionToken.Distribution[]"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initialized",
          "astId": 18319,
          "type": "t_bool",
          "src": "757:24:82"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initializing",
          "astId": 18321,
          "type": "t_bool",
          "src": "876:25:82"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "______gap",
          "astId": 18383,
          "type": "t_array:50<t_uint256>",
          "src": "1982:29:82"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "_owner",
          "astId": 17252,
          "type": "t_address",
          "src": "526:22:73"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "______gap",
          "astId": 17365,
          "type": "t_array:50<t_uint256>",
          "src": "2471:29:73"
        },
        {
          "contract": "Module",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\common\\Module.sol",
          "label": "pool",
          "astId": 43,
          "type": "t_address",
          "src": "214:19:1"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol",
          "label": "_balances",
          "astId": 17385,
          "type": "t_mapping<t_uint256>",
          "src": "1418:46:74"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol",
          "label": "_allowances",
          "astId": 17391,
          "type": "t_mapping<t_uint256>",
          "src": "1471:69:74"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol",
          "label": "_totalSupply",
          "astId": 17393,
          "type": "t_uint256",
          "src": "1547:28:74"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol",
          "label": "______gap",
          "astId": 17777,
          "type": "t_array:50<t_uint256>",
          "src": "8172:29:74"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Detailed.sol",
          "label": "_name",
          "astId": 17829,
          "type": "t_string",
          "src": "224:20:76"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Detailed.sol",
          "label": "_symbol",
          "astId": 17831,
          "type": "t_string",
          "src": "250:22:76"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Detailed.sol",
          "label": "_decimals",
          "astId": 17833,
          "type": "t_uint8",
          "src": "278:23:76"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Detailed.sol",
          "label": "______gap",
          "astId": 17885,
          "type": "t_array:50<t_uint256>",
          "src": "1654:29:76"
        },
        {
          "contract": "MinterRole",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\MinterRole.sol",
          "label": "_minters",
          "astId": 16469,
          "type": "t_struct<Roles.Role>",
          "src": "327:27:67"
        },
        {
          "contract": "MinterRole",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\MinterRole.sol",
          "label": "______gap",
          "astId": 16569,
          "type": "t_array:50<t_uint256>",
          "src": "1193:29:67"
        },
        {
          "contract": "ERC20Mintable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Mintable.sol",
          "label": "______gap",
          "astId": 17934,
          "type": "t_array:50<t_uint256>",
          "src": "831:29:77"
        },
        {
          "contract": "ERC20Burnable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Burnable.sol",
          "label": "______gap",
          "astId": 17818,
          "type": "t_array:50<t_uint256>",
          "src": "761:29:75"
        },
        {
          "contract": "DistributionToken",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\token\\DistributionToken.sol",
          "label": "distributions",
          "astId": 9774,
          "type": "t_array:dyn<t_struct<DistributionToken.Distribution>>",
          "src": "903:35:50"
        },
        {
          "contract": "DistributionToken",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\token\\DistributionToken.sol",
          "label": "nextDistributions",
          "astId": 9778,
          "type": "t_mapping<t_uint256>",
          "src": "992:52:50"
        },
        {
          "contract": "DistributionToken",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\token\\DistributionToken.sol",
          "label": "nextDistributionTimestamp",
          "astId": 9780,
          "type": "t_uint256",
          "src": "1107:40:50"
        },
        {
          "contract": "DistributionToken",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\token\\DistributionToken.sol",
          "label": "distributionAccumulator",
          "astId": 9782,
          "type": "t_uint256",
          "src": "1242:38:50"
        },
        {
          "contract": "PoolToken",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\token\\PoolToken.sol",
          "label": "allowTransfers",
          "astId": 10474,
          "type": "t_bool",
          "src": "628:19:51"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": []
      }
    },
    "CompoundProtocol_USDC": {
      "address": "0x07CB94E333322327BAE229DD089BE2c77630254C",
      "constructorCode": "6080604052613038806100136000396000f3fe",
      "bodyBytecodeHash": "4532cd6d218090fa45693516f957d5a4597b7d9dca2e0ad8be38712fea8b0020",
      "localBytecodeHash": "39808b8464b161289942bf8a0fb010b1c89220c31c8a5eef8455d975fc7bee12",
      "deployedBytecodeHash": "39808b8464b161289942bf8a0fb010b1c89220c31c8a5eef8455d975fc7bee12",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_struct<Roles.Role>": {
          "id": "t_struct<Roles.Role>",
          "kind": "struct",
          "label": "Roles.Role",
          "members": [
            {
              "label": "bearer",
              "astId": 20669,
              "type": "t_mapping<t_bool>",
              "src": "150:32:94"
            }
          ]
        },
        "t_mapping<t_bool>": {
          "id": "t_mapping<t_bool>",
          "valueType": "t_bool",
          "label": "mapping(key => bool)",
          "kind": "mapping"
        },
        "t_mapping<t_uint256>": {
          "id": "t_mapping<t_uint256>",
          "valueType": "t_uint256",
          "label": "mapping(key => uint256)",
          "kind": "mapping"
        },
        "t_uint8": {
          "id": "t_uint8",
          "kind": "elementary",
          "label": "uint8"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initialized",
          "astId": 22739,
          "type": "t_bool",
          "src": "757:24:111"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initializing",
          "astId": 22741,
          "type": "t_bool",
          "src": "876:25:111"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "______gap",
          "astId": 22803,
          "type": "t_array:50<t_uint256>",
          "src": "1982:29:111"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "_owner",
          "astId": 21672,
          "type": "t_address",
          "src": "526:22:102"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "______gap",
          "astId": 21785,
          "type": "t_array:50<t_uint256>",
          "src": "2471:29:102"
        },
        {
          "contract": "Module",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\common\\Module.sol",
          "label": "pool",
          "astId": 43,
          "type": "t_address",
          "src": "214:19:1"
        },
        {
          "contract": "DefiOperatorRole",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\DefiOperatorRole.sol",
          "label": "_operators",
          "astId": 7728,
          "type": "t_struct<Roles.Role>",
          "src": "445:29:69"
        },
        {
          "contract": "ProtocolBase",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\ProtocolBase.sol",
          "label": "rewardBalances",
          "astId": 7865,
          "type": "t_mapping<t_uint256>",
          "src": "877:47:70"
        },
        {
          "contract": "CompoundProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CompoundProtocol.sol",
          "label": "baseToken",
          "astId": 4213,
          "type": "t_address",
          "src": "845:23:60"
        },
        {
          "contract": "CompoundProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CompoundProtocol.sol",
          "label": "decimals",
          "astId": 4215,
          "type": "t_uint8",
          "src": "874:21:60"
        },
        {
          "contract": "CompoundProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CompoundProtocol.sol",
          "label": "cToken",
          "astId": 4217,
          "type": "t_address",
          "src": "901:21:60"
        },
        {
          "contract": "CompoundProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CompoundProtocol.sol",
          "label": "comptroller",
          "astId": 4219,
          "type": "t_address",
          "src": "928:31:60"
        },
        {
          "contract": "CompoundProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CompoundProtocol.sol",
          "label": "compToken",
          "astId": 4221,
          "type": "t_address",
          "src": "965:23:60"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": [],
        "storageUncheckedVars": [
          {
            "contract": "DefiOperatorRole",
            "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\DefiOperatorRole.sol",
            "label": "_operators",
            "astId": 7728,
            "type": "t_struct<Roles.Role>",
            "src": "445:29:69"
          }
        ],
        "storageDiff": []
      }
    },
    "PoolToken_Compound_USDC": {
      "address": "0xe782F3E4aaa419D5c043794dde32E6B46661A82B",
      "constructorCode": "608060405261336c806100136000396000f3fe",
      "bodyBytecodeHash": "9e25aa94c60b7cfffdf8195d286a7515185db25c79a3a27c30547851d961c47e",
      "localBytecodeHash": "c9e593c73f6fc47416dd2efe0fdc2e18c1083cc685ac996219963a6c100b98f7",
      "deployedBytecodeHash": "c9e593c73f6fc47416dd2efe0fdc2e18c1083cc685ac996219963a6c100b98f7",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_mapping<t_uint256>": {
          "id": "t_mapping<t_uint256>",
          "valueType": "t_uint256",
          "label": "mapping(key => uint256)",
          "kind": "mapping"
        },
        "t_string": {
          "id": "t_string",
          "kind": "elementary",
          "label": "string"
        },
        "t_uint8": {
          "id": "t_uint8",
          "kind": "elementary",
          "label": "uint8"
        },
        "t_struct<Roles.Role>": {
          "id": "t_struct<Roles.Role>",
          "kind": "struct",
          "label": "Roles.Role",
          "members": [
            {
              "label": "bearer",
              "astId": 16249,
              "type": "t_mapping<t_bool>",
              "src": "150:32:65"
            }
          ]
        },
        "t_mapping<t_bool>": {
          "id": "t_mapping<t_bool>",
          "valueType": "t_bool",
          "label": "mapping(key => bool)",
          "kind": "mapping"
        },
        "t_struct<DistributionToken.Distribution>": {
          "id": "t_struct<DistributionToken.Distribution>",
          "kind": "struct",
          "label": "DistributionToken.Distribution",
          "members": [
            {
              "label": "amount",
              "astId": 9768,
              "type": "t_uint256",
              "src": "745:14:50"
            },
            {
              "label": "totalSupply",
              "astId": 9770,
              "type": "t_uint256",
              "src": "832:19:50"
            }
          ]
        },
        "t_array:dyn<t_struct<DistributionToken.Distribution>>": {
          "id": "t_array:dyn<t_struct<DistributionToken.Distribution>>",
          "valueType": "t_struct<DistributionToken.Distribution>",
          "length": "dyn",
          "kind": "array",
          "label": "DistributionToken.Distribution[]"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initialized",
          "astId": 18319,
          "type": "t_bool",
          "src": "757:24:82"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initializing",
          "astId": 18321,
          "type": "t_bool",
          "src": "876:25:82"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "______gap",
          "astId": 18383,
          "type": "t_array:50<t_uint256>",
          "src": "1982:29:82"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "_owner",
          "astId": 17252,
          "type": "t_address",
          "src": "526:22:73"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "______gap",
          "astId": 17365,
          "type": "t_array:50<t_uint256>",
          "src": "2471:29:73"
        },
        {
          "contract": "Module",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\common\\Module.sol",
          "label": "pool",
          "astId": 43,
          "type": "t_address",
          "src": "214:19:1"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol",
          "label": "_balances",
          "astId": 17385,
          "type": "t_mapping<t_uint256>",
          "src": "1418:46:74"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol",
          "label": "_allowances",
          "astId": 17391,
          "type": "t_mapping<t_uint256>",
          "src": "1471:69:74"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol",
          "label": "_totalSupply",
          "astId": 17393,
          "type": "t_uint256",
          "src": "1547:28:74"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol",
          "label": "______gap",
          "astId": 17777,
          "type": "t_array:50<t_uint256>",
          "src": "8172:29:74"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Detailed.sol",
          "label": "_name",
          "astId": 17829,
          "type": "t_string",
          "src": "224:20:76"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Detailed.sol",
          "label": "_symbol",
          "astId": 17831,
          "type": "t_string",
          "src": "250:22:76"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Detailed.sol",
          "label": "_decimals",
          "astId": 17833,
          "type": "t_uint8",
          "src": "278:23:76"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Detailed.sol",
          "label": "______gap",
          "astId": 17885,
          "type": "t_array:50<t_uint256>",
          "src": "1654:29:76"
        },
        {
          "contract": "MinterRole",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\MinterRole.sol",
          "label": "_minters",
          "astId": 16469,
          "type": "t_struct<Roles.Role>",
          "src": "327:27:67"
        },
        {
          "contract": "MinterRole",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\MinterRole.sol",
          "label": "______gap",
          "astId": 16569,
          "type": "t_array:50<t_uint256>",
          "src": "1193:29:67"
        },
        {
          "contract": "ERC20Mintable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Mintable.sol",
          "label": "______gap",
          "astId": 17934,
          "type": "t_array:50<t_uint256>",
          "src": "831:29:77"
        },
        {
          "contract": "ERC20Burnable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Burnable.sol",
          "label": "______gap",
          "astId": 17818,
          "type": "t_array:50<t_uint256>",
          "src": "761:29:75"
        },
        {
          "contract": "DistributionToken",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\token\\DistributionToken.sol",
          "label": "distributions",
          "astId": 9774,
          "type": "t_array:dyn<t_struct<DistributionToken.Distribution>>",
          "src": "903:35:50"
        },
        {
          "contract": "DistributionToken",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\token\\DistributionToken.sol",
          "label": "nextDistributions",
          "astId": 9778,
          "type": "t_mapping<t_uint256>",
          "src": "992:52:50"
        },
        {
          "contract": "DistributionToken",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\token\\DistributionToken.sol",
          "label": "nextDistributionTimestamp",
          "astId": 9780,
          "type": "t_uint256",
          "src": "1107:40:50"
        },
        {
          "contract": "DistributionToken",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\token\\DistributionToken.sol",
          "label": "distributionAccumulator",
          "astId": 9782,
          "type": "t_uint256",
          "src": "1242:38:50"
        },
        {
          "contract": "PoolToken",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\token\\PoolToken.sol",
          "label": "allowTransfers",
          "astId": 10474,
          "type": "t_bool",
          "src": "628:19:51"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": []
      }
    },
    "CurveFiProtocol_SUSD": {
      "address": "0xd074A91B12DE6B44D56A98025efE4D5cd9b55719",
      "constructorCode": "60806040526148ae806100136000396000f3fe",
      "bodyBytecodeHash": "a11c255242c1c8a149ef94f2f912d9efabf410bee2f26474c843a8b08328902b",
      "localBytecodeHash": "d98371af0db2fac6a91931fee992736d2319d2354fc2bef8e6bc6a2c555823ac",
      "deployedBytecodeHash": "d98371af0db2fac6a91931fee992736d2319d2354fc2bef8e6bc6a2c555823ac",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_struct<Roles.Role>": {
          "id": "t_struct<Roles.Role>",
          "kind": "struct",
          "label": "Roles.Role",
          "members": [
            {
              "label": "bearer",
              "astId": 20611,
              "type": "t_mapping<t_bool>",
              "src": "150:32:94"
            }
          ]
        },
        "t_mapping<t_bool>": {
          "id": "t_mapping<t_bool>",
          "valueType": "t_bool",
          "label": "mapping(key => bool)",
          "kind": "mapping"
        },
        "t_mapping<t_uint256>": {
          "id": "t_mapping<t_uint256>",
          "valueType": "t_uint256",
          "label": "mapping(key => uint256)",
          "kind": "mapping"
        },
        "t_array:dyn<t_address>": {
          "id": "t_array:dyn<t_address>",
          "valueType": "t_address",
          "length": "dyn",
          "kind": "array",
          "label": "address[]"
        },
        "t_uint8": {
          "id": "t_uint8",
          "kind": "elementary",
          "label": "uint8"
        },
        "t_mapping<t_uint8>": {
          "id": "t_mapping<t_uint8>",
          "valueType": "t_uint8",
          "label": "mapping(key => uint8)",
          "kind": "mapping"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initialized",
          "astId": 22681,
          "type": "t_bool",
          "src": "757:24:111"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initializing",
          "astId": 22683,
          "type": "t_bool",
          "src": "876:25:111"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "______gap",
          "astId": 22745,
          "type": "t_array:50<t_uint256>",
          "src": "1982:29:111"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "_owner",
          "astId": 21614,
          "type": "t_address",
          "src": "526:22:102"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "______gap",
          "astId": 21727,
          "type": "t_array:50<t_uint256>",
          "src": "2471:29:102"
        },
        {
          "contract": "Module",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\common\\Module.sol",
          "label": "pool",
          "astId": 43,
          "type": "t_address",
          "src": "214:19:1"
        },
        {
          "contract": "DefiOperatorRole",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\DefiOperatorRole.sol",
          "label": "_operators",
          "astId": 7699,
          "type": "t_struct<Roles.Role>",
          "src": "445:29:69"
        },
        {
          "contract": "ProtocolBase",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\ProtocolBase.sol",
          "label": "rewardBalances",
          "astId": 7836,
          "type": "t_mapping<t_uint256>",
          "src": "877:47:70"
        },
        {
          "contract": "CurveFiProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol.sol",
          "label": "curveFiSwap",
          "astId": 4763,
          "type": "t_address",
          "src": "1301:31:61"
        },
        {
          "contract": "CurveFiProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol.sol",
          "label": "curveFiDeposit",
          "astId": 4765,
          "type": "t_address",
          "src": "1338:37:61"
        },
        {
          "contract": "CurveFiProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol.sol",
          "label": "curveFiLPGauge",
          "astId": 4767,
          "type": "t_address",
          "src": "1381:44:61"
        },
        {
          "contract": "CurveFiProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol.sol",
          "label": "curveFiMinter",
          "astId": 4769,
          "type": "t_address",
          "src": "1431:35:61"
        },
        {
          "contract": "CurveFiProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol.sol",
          "label": "curveFiToken",
          "astId": 4771,
          "type": "t_address",
          "src": "1472:26:61"
        },
        {
          "contract": "CurveFiProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol.sol",
          "label": "crvToken",
          "astId": 4773,
          "type": "t_address",
          "src": "1504:23:61"
        },
        {
          "contract": "CurveFiProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol.sol",
          "label": "_registeredTokens",
          "astId": 4776,
          "type": "t_array:dyn<t_address>",
          "src": "1533:36:61"
        },
        {
          "contract": "CurveFiProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol.sol",
          "label": "slippageMultiplier",
          "astId": 4778,
          "type": "t_uint256",
          "src": "1575:33:61"
        },
        {
          "contract": "CurveFiProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol.sol",
          "label": "decimals",
          "astId": 4782,
          "type": "t_mapping<t_uint8>",
          "src": "1685:41:61"
        },
        {
          "contract": "CurveFiProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol.sol",
          "label": "______gap",
          "astId": 6129,
          "type": "t_array:50<t_uint256>",
          "src": "13563:29:61"
        },
        {
          "contract": "CurveFiProtocolWithRewards",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocolWithRewards.sol",
          "label": "rewardToken",
          "astId": 6138,
          "type": "t_address",
          "src": "186:26:62"
        },
        {
          "contract": "CurveFiProtocolWithRewards",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocolWithRewards.sol",
          "label": "______gap",
          "astId": 6234,
          "type": "t_array:50<t_uint256>",
          "src": "1037:29:62"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": [],
        "storageUncheckedVars": [
          {
            "contract": "DefiOperatorRole",
            "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\DefiOperatorRole.sol",
            "label": "_operators",
            "astId": 7699,
            "type": "t_struct<Roles.Role>",
            "src": "445:29:69"
          }
        ],
        "storageDiff": []
      }
    },
    "PoolToken_CurveFi_SUSD": {
      "address": "0x61227836Eeb8320D74326eAc5e9e85eed7837EE9",
      "constructorCode": "608060405261336c806100136000396000f3fe",
      "bodyBytecodeHash": "d96c0da448bef9626efd59338831591ba65bcdbbfb3bb0b8626c6d3b57cf0304",
      "localBytecodeHash": "1751bcbedec5ebc5eece35ee2fab6a8ee82178a9a741486e7c0b04c9417e913e",
      "deployedBytecodeHash": "1751bcbedec5ebc5eece35ee2fab6a8ee82178a9a741486e7c0b04c9417e913e",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_mapping<t_uint256>": {
          "id": "t_mapping<t_uint256>",
          "valueType": "t_uint256",
          "label": "mapping(key => uint256)",
          "kind": "mapping"
        },
        "t_string": {
          "id": "t_string",
          "kind": "elementary",
          "label": "string"
        },
        "t_uint8": {
          "id": "t_uint8",
          "kind": "elementary",
          "label": "uint8"
        },
        "t_struct<Roles.Role>": {
          "id": "t_struct<Roles.Role>",
          "kind": "struct",
          "label": "Roles.Role",
          "members": [
            {
              "label": "bearer",
              "astId": 16776,
              "type": "t_mapping<t_bool>",
              "src": "150:32:65"
            }
          ]
        },
        "t_mapping<t_bool>": {
          "id": "t_mapping<t_bool>",
          "valueType": "t_bool",
          "label": "mapping(key => bool)",
          "kind": "mapping"
        },
        "t_struct<DistributionToken.Distribution>": {
          "id": "t_struct<DistributionToken.Distribution>",
          "kind": "struct",
          "label": "DistributionToken.Distribution",
          "members": [
            {
              "label": "amount",
              "astId": 10154,
              "type": "t_uint256",
              "src": "745:14:50"
            },
            {
              "label": "totalSupply",
              "astId": 10156,
              "type": "t_uint256",
              "src": "832:19:50"
            }
          ]
        },
        "t_array:dyn<t_struct<DistributionToken.Distribution>>": {
          "id": "t_array:dyn<t_struct<DistributionToken.Distribution>>",
          "valueType": "t_struct<DistributionToken.Distribution>",
          "length": "dyn",
          "kind": "array",
          "label": "DistributionToken.Distribution[]"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initialized",
          "astId": 18846,
          "type": "t_bool",
          "src": "757:24:82"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initializing",
          "astId": 18848,
          "type": "t_bool",
          "src": "876:25:82"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "______gap",
          "astId": 18910,
          "type": "t_array:50<t_uint256>",
          "src": "1982:29:82"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "_owner",
          "astId": 17779,
          "type": "t_address",
          "src": "526:22:73"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "______gap",
          "astId": 17892,
          "type": "t_array:50<t_uint256>",
          "src": "2471:29:73"
        },
        {
          "contract": "Module",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\common\\Module.sol",
          "label": "pool",
          "astId": 43,
          "type": "t_address",
          "src": "214:19:1"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol",
          "label": "_balances",
          "astId": 17912,
          "type": "t_mapping<t_uint256>",
          "src": "1418:46:74"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol",
          "label": "_allowances",
          "astId": 17918,
          "type": "t_mapping<t_uint256>",
          "src": "1471:69:74"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol",
          "label": "_totalSupply",
          "astId": 17920,
          "type": "t_uint256",
          "src": "1547:28:74"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol",
          "label": "______gap",
          "astId": 18304,
          "type": "t_array:50<t_uint256>",
          "src": "8172:29:74"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Detailed.sol",
          "label": "_name",
          "astId": 18356,
          "type": "t_string",
          "src": "224:20:76"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Detailed.sol",
          "label": "_symbol",
          "astId": 18358,
          "type": "t_string",
          "src": "250:22:76"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Detailed.sol",
          "label": "_decimals",
          "astId": 18360,
          "type": "t_uint8",
          "src": "278:23:76"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Detailed.sol",
          "label": "______gap",
          "astId": 18412,
          "type": "t_array:50<t_uint256>",
          "src": "1654:29:76"
        },
        {
          "contract": "MinterRole",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\MinterRole.sol",
          "label": "_minters",
          "astId": 16996,
          "type": "t_struct<Roles.Role>",
          "src": "327:27:67"
        },
        {
          "contract": "MinterRole",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\MinterRole.sol",
          "label": "______gap",
          "astId": 17096,
          "type": "t_array:50<t_uint256>",
          "src": "1193:29:67"
        },
        {
          "contract": "ERC20Mintable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Mintable.sol",
          "label": "______gap",
          "astId": 18461,
          "type": "t_array:50<t_uint256>",
          "src": "831:29:77"
        },
        {
          "contract": "ERC20Burnable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Burnable.sol",
          "label": "______gap",
          "astId": 18345,
          "type": "t_array:50<t_uint256>",
          "src": "761:29:75"
        },
        {
          "contract": "DistributionToken",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\token\\DistributionToken.sol",
          "label": "distributions",
          "astId": 10160,
          "type": "t_array:dyn<t_struct<DistributionToken.Distribution>>",
          "src": "903:35:50"
        },
        {
          "contract": "DistributionToken",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\token\\DistributionToken.sol",
          "label": "nextDistributions",
          "astId": 10164,
          "type": "t_mapping<t_uint256>",
          "src": "992:52:50"
        },
        {
          "contract": "DistributionToken",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\token\\DistributionToken.sol",
          "label": "nextDistributionTimestamp",
          "astId": 10166,
          "type": "t_uint256",
          "src": "1107:40:50"
        },
        {
          "contract": "DistributionToken",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\token\\DistributionToken.sol",
          "label": "distributionAccumulator",
          "astId": 10168,
          "type": "t_uint256",
          "src": "1242:38:50"
        },
        {
          "contract": "PoolToken",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\token\\PoolToken.sol",
          "label": "allowTransfers",
          "astId": 10860,
          "type": "t_bool",
          "src": "628:19:51"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": []
      }
    },
    "CurveFiProtocol_Y": {
      "address": "0x8F032D3d8c6BD2268b410b9024a12D8dEb892C24",
      "constructorCode": "6080604052614bee806100136000396000f3fe",
      "bodyBytecodeHash": "720bd954a40c2797ed6b96eb87600094af8ae853d75b560d768745f582ba8bcb",
      "localBytecodeHash": "9c2246a25254617eac331ff4794c62112dc1a8fa2f40b01dfc8da839a4891dd4",
      "deployedBytecodeHash": "9c2246a25254617eac331ff4794c62112dc1a8fa2f40b01dfc8da839a4891dd4",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_struct<Roles.Role>": {
          "id": "t_struct<Roles.Role>",
          "kind": "struct",
          "label": "Roles.Role",
          "members": [
            {
              "label": "bearer",
              "astId": 20611,
              "type": "t_mapping<t_bool>",
              "src": "150:32:94"
            }
          ]
        },
        "t_mapping<t_bool>": {
          "id": "t_mapping<t_bool>",
          "valueType": "t_bool",
          "label": "mapping(key => bool)",
          "kind": "mapping"
        },
        "t_mapping<t_uint256>": {
          "id": "t_mapping<t_uint256>",
          "valueType": "t_uint256",
          "label": "mapping(key => uint256)",
          "kind": "mapping"
        },
        "t_array:dyn<t_address>": {
          "id": "t_array:dyn<t_address>",
          "valueType": "t_address",
          "length": "dyn",
          "kind": "array",
          "label": "address[]"
        },
        "t_uint8": {
          "id": "t_uint8",
          "kind": "elementary",
          "label": "uint8"
        },
        "t_mapping<t_uint8>": {
          "id": "t_mapping<t_uint8>",
          "valueType": "t_uint8",
          "label": "mapping(key => uint8)",
          "kind": "mapping"
        },
        "t_struct<CurveFiProtocol_Y_Base.PriceData>": {
          "id": "t_struct<CurveFiProtocol_Y_Base.PriceData>",
          "kind": "struct",
          "label": "CurveFiProtocol_Y_Base.PriceData",
          "members": [
            {
              "label": "price",
              "astId": 6990,
              "type": "t_uint256",
              "src": "242:13:67"
            },
            {
              "label": "lastUpdateBlock",
              "astId": 6992,
              "type": "t_uint256",
              "src": "265:23:67"
            }
          ]
        },
        "t_mapping<t_struct<CurveFiProtocol_Y_Base.PriceData>>": {
          "id": "t_mapping<t_struct<CurveFiProtocol_Y_Base.PriceData>>",
          "valueType": "t_struct<CurveFiProtocol_Y_Base.PriceData>",
          "label": "mapping(key => CurveFiProtocol_Y_Base.PriceData)",
          "kind": "mapping"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initialized",
          "astId": 22681,
          "type": "t_bool",
          "src": "757:24:111"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initializing",
          "astId": 22683,
          "type": "t_bool",
          "src": "876:25:111"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "______gap",
          "astId": 22745,
          "type": "t_array:50<t_uint256>",
          "src": "1982:29:111"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "_owner",
          "astId": 21614,
          "type": "t_address",
          "src": "526:22:102"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "______gap",
          "astId": 21727,
          "type": "t_array:50<t_uint256>",
          "src": "2471:29:102"
        },
        {
          "contract": "Module",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\common\\Module.sol",
          "label": "pool",
          "astId": 43,
          "type": "t_address",
          "src": "214:19:1"
        },
        {
          "contract": "DefiOperatorRole",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\DefiOperatorRole.sol",
          "label": "_operators",
          "astId": 7699,
          "type": "t_struct<Roles.Role>",
          "src": "445:29:69"
        },
        {
          "contract": "ProtocolBase",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\ProtocolBase.sol",
          "label": "rewardBalances",
          "astId": 7836,
          "type": "t_mapping<t_uint256>",
          "src": "877:47:70"
        },
        {
          "contract": "CurveFiProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol.sol",
          "label": "curveFiSwap",
          "astId": 4763,
          "type": "t_address",
          "src": "1301:31:61"
        },
        {
          "contract": "CurveFiProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol.sol",
          "label": "curveFiDeposit",
          "astId": 4765,
          "type": "t_address",
          "src": "1338:37:61"
        },
        {
          "contract": "CurveFiProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol.sol",
          "label": "curveFiLPGauge",
          "astId": 4767,
          "type": "t_address",
          "src": "1381:44:61"
        },
        {
          "contract": "CurveFiProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol.sol",
          "label": "curveFiMinter",
          "astId": 4769,
          "type": "t_address",
          "src": "1431:35:61"
        },
        {
          "contract": "CurveFiProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol.sol",
          "label": "curveFiToken",
          "astId": 4771,
          "type": "t_address",
          "src": "1472:26:61"
        },
        {
          "contract": "CurveFiProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol.sol",
          "label": "crvToken",
          "astId": 4773,
          "type": "t_address",
          "src": "1504:23:61"
        },
        {
          "contract": "CurveFiProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol.sol",
          "label": "_registeredTokens",
          "astId": 4776,
          "type": "t_array:dyn<t_address>",
          "src": "1533:36:61"
        },
        {
          "contract": "CurveFiProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol.sol",
          "label": "slippageMultiplier",
          "astId": 4778,
          "type": "t_uint256",
          "src": "1575:33:61"
        },
        {
          "contract": "CurveFiProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol.sol",
          "label": "decimals",
          "astId": 4782,
          "type": "t_mapping<t_uint8>",
          "src": "1685:41:61"
        },
        {
          "contract": "CurveFiProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol.sol",
          "label": "______gap",
          "astId": 6129,
          "type": "t_array:50<t_uint256>",
          "src": "13563:29:61"
        },
        {
          "contract": "CurveFiProtocol_Y_Base",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol_Y_Base.sol",
          "label": "yTokens",
          "astId": 6996,
          "type": "t_array:dyn<t_address>",
          "src": "301:24:67"
        },
        {
          "contract": "CurveFiProtocol_Y_Base",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol_Y_Base.sol",
          "label": "yPricePerFullShare",
          "astId": 7000,
          "type": "t_mapping<t_struct<CurveFiProtocol_Y_Base.PriceData>>",
          "src": "331:55:67"
        },
        {
          "contract": "CurveFiProtocol_Y_Base",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol_Y_Base.sol",
          "label": "______gap",
          "astId": 7297,
          "type": "t_array:50<t_uint256>",
          "src": "2873:29:67"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": [],
        "storageUncheckedVars": [
          {
            "contract": "DefiOperatorRole",
            "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\DefiOperatorRole.sol",
            "label": "_operators",
            "astId": 7699,
            "type": "t_struct<Roles.Role>",
            "src": "445:29:69"
          },
          {
            "contract": "CurveFiProtocol_Y_Base",
            "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol_Y_Base.sol",
            "label": "yPricePerFullShare",
            "astId": 7000,
            "type": "t_mapping<t_struct<CurveFiProtocol_Y_Base.PriceData>>",
            "src": "331:55:67"
          }
        ],
        "storageDiff": [
          {
            "action": "append",
            "updated": {
              "index": 18,
              "contract": "CurveFiProtocol_Y_Base",
              "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol_Y_Base.sol",
              "label": "yTokens",
              "astId": 6996,
              "type": "t_array:dyn<t_address>",
              "src": "301:24:67"
            }
          },
          {
            "action": "append",
            "updated": {
              "index": 19,
              "contract": "CurveFiProtocol_Y_Base",
              "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol_Y_Base.sol",
              "label": "yPricePerFullShare",
              "astId": 7000,
              "type": "t_mapping<t_struct<CurveFiProtocol_Y_Base.PriceData>>",
              "src": "331:55:67"
            }
          },
          {
            "action": "append",
            "updated": {
              "index": 20,
              "contract": "CurveFiProtocol_Y_Base",
              "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol_Y_Base.sol",
              "label": "______gap",
              "astId": 7297,
              "type": "t_array:50<t_uint256>",
              "src": "2873:29:67"
            }
          }
        ]
      }
    },
    "PoolToken_CurveFi_Y": {
      "address": "0x67bE448d8A42B27FF33caa56E87582B856143872",
      "constructorCode": "608060405261336c806100136000396000f3fe",
      "bodyBytecodeHash": "59fe90e602b0d7fd7b63760842aeb58c32d7b419dd519c8bd84a67c18f6d82a9",
      "localBytecodeHash": "5c1381ad102bcad79ee622c92ff821ec191bfda28b19618ec3962eb6010cebe7",
      "deployedBytecodeHash": "5c1381ad102bcad79ee622c92ff821ec191bfda28b19618ec3962eb6010cebe7",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_mapping<t_uint256>": {
          "id": "t_mapping<t_uint256>",
          "valueType": "t_uint256",
          "label": "mapping(key => uint256)",
          "kind": "mapping"
        },
        "t_string": {
          "id": "t_string",
          "kind": "elementary",
          "label": "string"
        },
        "t_uint8": {
          "id": "t_uint8",
          "kind": "elementary",
          "label": "uint8"
        },
        "t_struct<Roles.Role>": {
          "id": "t_struct<Roles.Role>",
          "kind": "struct",
          "label": "Roles.Role",
          "members": [
            {
              "label": "bearer",
              "astId": 16895,
              "type": "t_mapping<t_bool>",
              "src": "150:32:65"
            }
          ]
        },
        "t_mapping<t_bool>": {
          "id": "t_mapping<t_bool>",
          "valueType": "t_bool",
          "label": "mapping(key => bool)",
          "kind": "mapping"
        },
        "t_struct<DistributionToken.Distribution>": {
          "id": "t_struct<DistributionToken.Distribution>",
          "kind": "struct",
          "label": "DistributionToken.Distribution",
          "members": [
            {
              "label": "amount",
              "astId": 10273,
              "type": "t_uint256",
              "src": "745:14:50"
            },
            {
              "label": "totalSupply",
              "astId": 10275,
              "type": "t_uint256",
              "src": "832:19:50"
            }
          ]
        },
        "t_array:dyn<t_struct<DistributionToken.Distribution>>": {
          "id": "t_array:dyn<t_struct<DistributionToken.Distribution>>",
          "valueType": "t_struct<DistributionToken.Distribution>",
          "length": "dyn",
          "kind": "array",
          "label": "DistributionToken.Distribution[]"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initialized",
          "astId": 18965,
          "type": "t_bool",
          "src": "757:24:82"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initializing",
          "astId": 18967,
          "type": "t_bool",
          "src": "876:25:82"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "______gap",
          "astId": 19029,
          "type": "t_array:50<t_uint256>",
          "src": "1982:29:82"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "_owner",
          "astId": 17898,
          "type": "t_address",
          "src": "526:22:73"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "______gap",
          "astId": 18011,
          "type": "t_array:50<t_uint256>",
          "src": "2471:29:73"
        },
        {
          "contract": "Module",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\common\\Module.sol",
          "label": "pool",
          "astId": 43,
          "type": "t_address",
          "src": "214:19:1"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol",
          "label": "_balances",
          "astId": 18031,
          "type": "t_mapping<t_uint256>",
          "src": "1418:46:74"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol",
          "label": "_allowances",
          "astId": 18037,
          "type": "t_mapping<t_uint256>",
          "src": "1471:69:74"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol",
          "label": "_totalSupply",
          "astId": 18039,
          "type": "t_uint256",
          "src": "1547:28:74"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol",
          "label": "______gap",
          "astId": 18423,
          "type": "t_array:50<t_uint256>",
          "src": "8172:29:74"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Detailed.sol",
          "label": "_name",
          "astId": 18475,
          "type": "t_string",
          "src": "224:20:76"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Detailed.sol",
          "label": "_symbol",
          "astId": 18477,
          "type": "t_string",
          "src": "250:22:76"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Detailed.sol",
          "label": "_decimals",
          "astId": 18479,
          "type": "t_uint8",
          "src": "278:23:76"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Detailed.sol",
          "label": "______gap",
          "astId": 18531,
          "type": "t_array:50<t_uint256>",
          "src": "1654:29:76"
        },
        {
          "contract": "MinterRole",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\MinterRole.sol",
          "label": "_minters",
          "astId": 17115,
          "type": "t_struct<Roles.Role>",
          "src": "327:27:67"
        },
        {
          "contract": "MinterRole",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\MinterRole.sol",
          "label": "______gap",
          "astId": 17215,
          "type": "t_array:50<t_uint256>",
          "src": "1193:29:67"
        },
        {
          "contract": "ERC20Mintable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Mintable.sol",
          "label": "______gap",
          "astId": 18580,
          "type": "t_array:50<t_uint256>",
          "src": "831:29:77"
        },
        {
          "contract": "ERC20Burnable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Burnable.sol",
          "label": "______gap",
          "astId": 18464,
          "type": "t_array:50<t_uint256>",
          "src": "761:29:75"
        },
        {
          "contract": "DistributionToken",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\token\\DistributionToken.sol",
          "label": "distributions",
          "astId": 10279,
          "type": "t_array:dyn<t_struct<DistributionToken.Distribution>>",
          "src": "903:35:50"
        },
        {
          "contract": "DistributionToken",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\token\\DistributionToken.sol",
          "label": "nextDistributions",
          "astId": 10283,
          "type": "t_mapping<t_uint256>",
          "src": "992:52:50"
        },
        {
          "contract": "DistributionToken",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\token\\DistributionToken.sol",
          "label": "nextDistributionTimestamp",
          "astId": 10285,
          "type": "t_uint256",
          "src": "1107:40:50"
        },
        {
          "contract": "DistributionToken",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\token\\DistributionToken.sol",
          "label": "distributionAccumulator",
          "astId": 10287,
          "type": "t_uint256",
          "src": "1242:38:50"
        },
        {
          "contract": "PoolToken",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\token\\PoolToken.sol",
          "label": "allowTransfers",
          "astId": 10979,
          "type": "t_bool",
          "src": "628:19:51"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": []
      }
    },
    "CurveFiProtocol_BUSD": {
      "address": "0x6c8b098427D17c8afe8d9bD3c68D5999240c7ACa",
      "constructorCode": "6080604052614a36806100136000396000f3fe",
      "bodyBytecodeHash": "7afc977624acb119c8d223818ad21520f5b402309c34f0c9ee4ff556df3dbb1f",
      "localBytecodeHash": "154838d30dacd622be1859ed84ab1a634e2e1e4835413b23b18118bb284ce350",
      "deployedBytecodeHash": "154838d30dacd622be1859ed84ab1a634e2e1e4835413b23b18118bb284ce350",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_struct<Roles.Role>": {
          "id": "t_struct<Roles.Role>",
          "kind": "struct",
          "label": "Roles.Role",
          "members": [
            {
              "label": "bearer",
              "astId": 20669,
              "type": "t_mapping<t_bool>",
              "src": "150:32:94"
            }
          ]
        },
        "t_mapping<t_bool>": {
          "id": "t_mapping<t_bool>",
          "valueType": "t_bool",
          "label": "mapping(key => bool)",
          "kind": "mapping"
        },
        "t_mapping<t_uint256>": {
          "id": "t_mapping<t_uint256>",
          "valueType": "t_uint256",
          "label": "mapping(key => uint256)",
          "kind": "mapping"
        },
        "t_array:dyn<t_address>": {
          "id": "t_array:dyn<t_address>",
          "valueType": "t_address",
          "length": "dyn",
          "kind": "array",
          "label": "address[]"
        },
        "t_uint8": {
          "id": "t_uint8",
          "kind": "elementary",
          "label": "uint8"
        },
        "t_mapping<t_uint8>": {
          "id": "t_mapping<t_uint8>",
          "valueType": "t_uint8",
          "label": "mapping(key => uint8)",
          "kind": "mapping"
        },
        "t_struct<CurveFiProtocol_Y_Base.PriceData>": {
          "id": "t_struct<CurveFiProtocol_Y_Base.PriceData>",
          "kind": "struct",
          "label": "CurveFiProtocol_Y_Base.PriceData",
          "members": [
            {
              "label": "price",
              "astId": 7019,
              "type": "t_uint256",
              "src": "242:13:67"
            },
            {
              "label": "lastUpdateBlock",
              "astId": 7021,
              "type": "t_uint256",
              "src": "265:23:67"
            }
          ]
        },
        "t_mapping<t_struct<CurveFiProtocol_Y_Base.PriceData>>": {
          "id": "t_mapping<t_struct<CurveFiProtocol_Y_Base.PriceData>>",
          "valueType": "t_struct<CurveFiProtocol_Y_Base.PriceData>",
          "label": "mapping(key => CurveFiProtocol_Y_Base.PriceData)",
          "kind": "mapping"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initialized",
          "astId": 22739,
          "type": "t_bool",
          "src": "757:24:111"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initializing",
          "astId": 22741,
          "type": "t_bool",
          "src": "876:25:111"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "______gap",
          "astId": 22803,
          "type": "t_array:50<t_uint256>",
          "src": "1982:29:111"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "_owner",
          "astId": 21672,
          "type": "t_address",
          "src": "526:22:102"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "______gap",
          "astId": 21785,
          "type": "t_array:50<t_uint256>",
          "src": "2471:29:102"
        },
        {
          "contract": "Module",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\common\\Module.sol",
          "label": "pool",
          "astId": 43,
          "type": "t_address",
          "src": "214:19:1"
        },
        {
          "contract": "DefiOperatorRole",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\DefiOperatorRole.sol",
          "label": "_operators",
          "astId": 7728,
          "type": "t_struct<Roles.Role>",
          "src": "445:29:69"
        },
        {
          "contract": "ProtocolBase",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\ProtocolBase.sol",
          "label": "rewardBalances",
          "astId": 7865,
          "type": "t_mapping<t_uint256>",
          "src": "877:47:70"
        },
        {
          "contract": "CurveFiProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol.sol",
          "label": "curveFiSwap",
          "astId": 4794,
          "type": "t_address",
          "src": "1301:31:61"
        },
        {
          "contract": "CurveFiProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol.sol",
          "label": "curveFiDeposit",
          "astId": 4796,
          "type": "t_address",
          "src": "1338:37:61"
        },
        {
          "contract": "CurveFiProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol.sol",
          "label": "curveFiLPGauge",
          "astId": 4798,
          "type": "t_address",
          "src": "1381:44:61"
        },
        {
          "contract": "CurveFiProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol.sol",
          "label": "curveFiMinter",
          "astId": 4800,
          "type": "t_address",
          "src": "1431:35:61"
        },
        {
          "contract": "CurveFiProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol.sol",
          "label": "curveFiToken",
          "astId": 4802,
          "type": "t_address",
          "src": "1472:26:61"
        },
        {
          "contract": "CurveFiProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol.sol",
          "label": "crvToken",
          "astId": 4804,
          "type": "t_address",
          "src": "1504:23:61"
        },
        {
          "contract": "CurveFiProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol.sol",
          "label": "_registeredTokens",
          "astId": 4807,
          "type": "t_array:dyn<t_address>",
          "src": "1533:36:61"
        },
        {
          "contract": "CurveFiProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol.sol",
          "label": "slippageMultiplier",
          "astId": 4809,
          "type": "t_uint256",
          "src": "1575:33:61"
        },
        {
          "contract": "CurveFiProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol.sol",
          "label": "decimals",
          "astId": 4813,
          "type": "t_mapping<t_uint8>",
          "src": "1685:41:61"
        },
        {
          "contract": "CurveFiProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol.sol",
          "label": "______gap",
          "astId": 6158,
          "type": "t_array:50<t_uint256>",
          "src": "13529:29:61"
        },
        {
          "contract": "CurveFiProtocol_Y_Base",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol_Y_Base.sol",
          "label": "yTokens",
          "astId": 7025,
          "type": "t_array:dyn<t_address>",
          "src": "301:24:67"
        },
        {
          "contract": "CurveFiProtocol_Y_Base",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol_Y_Base.sol",
          "label": "yPricePerFullShare",
          "astId": 7029,
          "type": "t_mapping<t_struct<CurveFiProtocol_Y_Base.PriceData>>",
          "src": "331:55:67"
        },
        {
          "contract": "CurveFiProtocol_Y_Base",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol_Y_Base.sol",
          "label": "______gap",
          "astId": 7326,
          "type": "t_array:50<t_uint256>",
          "src": "2873:29:67"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": [],
        "storageUncheckedVars": [
          {
            "contract": "DefiOperatorRole",
            "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\DefiOperatorRole.sol",
            "label": "_operators",
            "astId": 7728,
            "type": "t_struct<Roles.Role>",
            "src": "445:29:69"
          },
          {
            "contract": "CurveFiProtocol_Y_Base",
            "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol_Y_Base.sol",
            "label": "yPricePerFullShare",
            "astId": 7029,
            "type": "t_mapping<t_struct<CurveFiProtocol_Y_Base.PriceData>>",
            "src": "331:55:67"
          }
        ],
        "storageDiff": [
          {
            "action": "append",
            "updated": {
              "index": 18,
              "contract": "CurveFiProtocol_Y_Base",
              "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol_Y_Base.sol",
              "label": "yTokens",
              "astId": 7025,
              "type": "t_array:dyn<t_address>",
              "src": "301:24:67"
            }
          },
          {
            "action": "append",
            "updated": {
              "index": 19,
              "contract": "CurveFiProtocol_Y_Base",
              "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol_Y_Base.sol",
              "label": "yPricePerFullShare",
              "astId": 7029,
              "type": "t_mapping<t_struct<CurveFiProtocol_Y_Base.PriceData>>",
              "src": "331:55:67"
            }
          },
          {
            "action": "append",
            "updated": {
              "index": 20,
              "contract": "CurveFiProtocol_Y_Base",
              "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol_Y_Base.sol",
              "label": "______gap",
              "astId": 7326,
              "type": "t_array:50<t_uint256>",
              "src": "2873:29:67"
            }
          }
        ]
      }
    },
    "PoolToken_CurveFi_BUSD": {
      "address": "0xc1b7a845E709Df1958BC915990511db3E9742766",
      "constructorCode": "608060405261336c806100136000396000f3fe",
      "bodyBytecodeHash": "ebf3421c11ee184a771594309aac42fb5a7b137d4f294a3532b4e001d2e18664",
      "localBytecodeHash": "fa0ed10fa0ba775f13aebc2435539a21f0c41c41b76e8f6e70521fc5531c8334",
      "deployedBytecodeHash": "fa0ed10fa0ba775f13aebc2435539a21f0c41c41b76e8f6e70521fc5531c8334",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_mapping<t_uint256>": {
          "id": "t_mapping<t_uint256>",
          "valueType": "t_uint256",
          "label": "mapping(key => uint256)",
          "kind": "mapping"
        },
        "t_string": {
          "id": "t_string",
          "kind": "elementary",
          "label": "string"
        },
        "t_uint8": {
          "id": "t_uint8",
          "kind": "elementary",
          "label": "uint8"
        },
        "t_struct<Roles.Role>": {
          "id": "t_struct<Roles.Role>",
          "kind": "struct",
          "label": "Roles.Role",
          "members": [
            {
              "label": "bearer",
              "astId": 17081,
              "type": "t_mapping<t_bool>",
              "src": "150:32:68"
            }
          ]
        },
        "t_mapping<t_bool>": {
          "id": "t_mapping<t_bool>",
          "valueType": "t_bool",
          "label": "mapping(key => bool)",
          "kind": "mapping"
        },
        "t_struct<DistributionToken.Distribution>": {
          "id": "t_struct<DistributionToken.Distribution>",
          "kind": "struct",
          "label": "DistributionToken.Distribution",
          "members": [
            {
              "label": "amount",
              "astId": 10459,
              "type": "t_uint256",
              "src": "745:14:53"
            },
            {
              "label": "totalSupply",
              "astId": 10461,
              "type": "t_uint256",
              "src": "832:19:53"
            }
          ]
        },
        "t_array:dyn<t_struct<DistributionToken.Distribution>>": {
          "id": "t_array:dyn<t_struct<DistributionToken.Distribution>>",
          "valueType": "t_struct<DistributionToken.Distribution>",
          "length": "dyn",
          "kind": "array",
          "label": "DistributionToken.Distribution[]"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initialized",
          "astId": 19151,
          "type": "t_bool",
          "src": "757:24:85"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initializing",
          "astId": 19153,
          "type": "t_bool",
          "src": "876:25:85"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "______gap",
          "astId": 19215,
          "type": "t_array:50<t_uint256>",
          "src": "1982:29:85"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "_owner",
          "astId": 18084,
          "type": "t_address",
          "src": "526:22:76"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "______gap",
          "astId": 18197,
          "type": "t_array:50<t_uint256>",
          "src": "2471:29:76"
        },
        {
          "contract": "Module",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\common\\Module.sol",
          "label": "pool",
          "astId": 43,
          "type": "t_address",
          "src": "214:19:1"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol",
          "label": "_balances",
          "astId": 18217,
          "type": "t_mapping<t_uint256>",
          "src": "1418:46:77"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol",
          "label": "_allowances",
          "astId": 18223,
          "type": "t_mapping<t_uint256>",
          "src": "1471:69:77"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol",
          "label": "_totalSupply",
          "astId": 18225,
          "type": "t_uint256",
          "src": "1547:28:77"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol",
          "label": "______gap",
          "astId": 18609,
          "type": "t_array:50<t_uint256>",
          "src": "8172:29:77"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Detailed.sol",
          "label": "_name",
          "astId": 18661,
          "type": "t_string",
          "src": "224:20:79"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Detailed.sol",
          "label": "_symbol",
          "astId": 18663,
          "type": "t_string",
          "src": "250:22:79"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Detailed.sol",
          "label": "_decimals",
          "astId": 18665,
          "type": "t_uint8",
          "src": "278:23:79"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Detailed.sol",
          "label": "______gap",
          "astId": 18717,
          "type": "t_array:50<t_uint256>",
          "src": "1654:29:79"
        },
        {
          "contract": "MinterRole",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\MinterRole.sol",
          "label": "_minters",
          "astId": 17301,
          "type": "t_struct<Roles.Role>",
          "src": "327:27:70"
        },
        {
          "contract": "MinterRole",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\MinterRole.sol",
          "label": "______gap",
          "astId": 17401,
          "type": "t_array:50<t_uint256>",
          "src": "1193:29:70"
        },
        {
          "contract": "ERC20Mintable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Mintable.sol",
          "label": "______gap",
          "astId": 18766,
          "type": "t_array:50<t_uint256>",
          "src": "831:29:80"
        },
        {
          "contract": "ERC20Burnable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Burnable.sol",
          "label": "______gap",
          "astId": 18650,
          "type": "t_array:50<t_uint256>",
          "src": "761:29:78"
        },
        {
          "contract": "DistributionToken",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\token\\DistributionToken.sol",
          "label": "distributions",
          "astId": 10465,
          "type": "t_array:dyn<t_struct<DistributionToken.Distribution>>",
          "src": "903:35:53"
        },
        {
          "contract": "DistributionToken",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\token\\DistributionToken.sol",
          "label": "nextDistributions",
          "astId": 10469,
          "type": "t_mapping<t_uint256>",
          "src": "992:52:53"
        },
        {
          "contract": "DistributionToken",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\token\\DistributionToken.sol",
          "label": "nextDistributionTimestamp",
          "astId": 10471,
          "type": "t_uint256",
          "src": "1107:40:53"
        },
        {
          "contract": "DistributionToken",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\token\\DistributionToken.sol",
          "label": "distributionAccumulator",
          "astId": 10473,
          "type": "t_uint256",
          "src": "1242:38:53"
        },
        {
          "contract": "PoolToken",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\token\\PoolToken.sol",
          "label": "allowTransfers",
          "astId": 11165,
          "type": "t_bool",
          "src": "628:19:54"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": []
      }
    },
    "ADEL": {
      "address": "0xdA6079123266C5dFc4024d488E72A7003d275E3B",
      "constructorCode": "60806040526118e1806100136000396000f3fe",
      "bodyBytecodeHash": "78a970e00f40f6823550d946d7c344f2414fc35a50f17c1fd797ae12f0342410",
      "localBytecodeHash": "58eeab3526157a2ee48786f437ca3a686894afdc420484ed8a5a42f74b074986",
      "deployedBytecodeHash": "58eeab3526157a2ee48786f437ca3a686894afdc420484ed8a5a42f74b074986",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_string": {
          "id": "t_string",
          "kind": "elementary",
          "label": "string"
        },
        "t_uint8": {
          "id": "t_uint8",
          "kind": "elementary",
          "label": "uint8"
        },
        "t_mapping<t_uint256>": {
          "id": "t_mapping<t_uint256>",
          "valueType": "t_uint256",
          "label": "mapping(key => uint256)",
          "kind": "mapping"
        },
        "t_struct<Roles.Role>": {
          "id": "t_struct<Roles.Role>",
          "kind": "struct",
          "label": "Roles.Role",
          "members": [
            {
              "label": "bearer",
              "astId": 17493,
              "type": "t_mapping<t_bool>",
              "src": "150:32:69"
            }
          ]
        },
        "t_mapping<t_bool>": {
          "id": "t_mapping<t_bool>",
          "valueType": "t_bool",
          "label": "mapping(key => bool)",
          "kind": "mapping"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initialized",
          "astId": 19563,
          "type": "t_bool",
          "src": "757:24:86"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initializing",
          "astId": 19565,
          "type": "t_bool",
          "src": "876:25:86"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "______gap",
          "astId": 19627,
          "type": "t_array:50<t_uint256>",
          "src": "1982:29:86"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Detailed.sol",
          "label": "_name",
          "astId": 19073,
          "type": "t_string",
          "src": "224:20:80"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Detailed.sol",
          "label": "_symbol",
          "astId": 19075,
          "type": "t_string",
          "src": "250:22:80"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Detailed.sol",
          "label": "_decimals",
          "astId": 19077,
          "type": "t_uint8",
          "src": "278:23:80"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Detailed.sol",
          "label": "______gap",
          "astId": 19129,
          "type": "t_array:50<t_uint256>",
          "src": "1654:29:80"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol",
          "label": "_balances",
          "astId": 18629,
          "type": "t_mapping<t_uint256>",
          "src": "1418:46:78"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol",
          "label": "_allowances",
          "astId": 18635,
          "type": "t_mapping<t_uint256>",
          "src": "1471:69:78"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol",
          "label": "_totalSupply",
          "astId": 18637,
          "type": "t_uint256",
          "src": "1547:28:78"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol",
          "label": "______gap",
          "astId": 19021,
          "type": "t_array:50<t_uint256>",
          "src": "8172:29:78"
        },
        {
          "contract": "MinterRole",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\MinterRole.sol",
          "label": "_minters",
          "astId": 17713,
          "type": "t_struct<Roles.Role>",
          "src": "327:27:71"
        },
        {
          "contract": "MinterRole",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\MinterRole.sol",
          "label": "______gap",
          "astId": 17813,
          "type": "t_array:50<t_uint256>",
          "src": "1193:29:71"
        },
        {
          "contract": "ERC20Mintable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Mintable.sol",
          "label": "______gap",
          "astId": 19178,
          "type": "t_array:50<t_uint256>",
          "src": "831:29:81"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": []
      }
    },
    "AaveProtocol_SUSD": {
      "address": "0xF44c76cBE178EA5c62dB7C0F81D347687672F220",
      "constructorCode": "60806040526130f4806100136000396000f3fe",
      "bodyBytecodeHash": "2aaff89c62ad1c60ab0972e64c1f193bcf2a92de9c5afde9f68a7030eeed3937",
      "localBytecodeHash": "1d26966d39ef781306a50554fc83a0f75f35d2e5d1c7b79d7153033da3fd266b",
      "deployedBytecodeHash": "1d26966d39ef781306a50554fc83a0f75f35d2e5d1c7b79d7153033da3fd266b",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_struct<Roles.Role>": {
          "id": "t_struct<Roles.Role>",
          "kind": "struct",
          "label": "Roles.Role",
          "members": [
            {
              "label": "bearer",
              "astId": 20611,
              "type": "t_mapping<t_bool>",
              "src": "150:32:94"
            }
          ]
        },
        "t_mapping<t_bool>": {
          "id": "t_mapping<t_bool>",
          "valueType": "t_bool",
          "label": "mapping(key => bool)",
          "kind": "mapping"
        },
        "t_mapping<t_uint256>": {
          "id": "t_mapping<t_uint256>",
          "valueType": "t_uint256",
          "label": "mapping(key => uint256)",
          "kind": "mapping"
        },
        "t_uint8": {
          "id": "t_uint8",
          "kind": "elementary",
          "label": "uint8"
        },
        "t_uint16": {
          "id": "t_uint16",
          "kind": "elementary",
          "label": "uint16"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initialized",
          "astId": 22681,
          "type": "t_bool",
          "src": "757:24:111"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initializing",
          "astId": 22683,
          "type": "t_bool",
          "src": "876:25:111"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "______gap",
          "astId": 22745,
          "type": "t_array:50<t_uint256>",
          "src": "1982:29:111"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "_owner",
          "astId": 21614,
          "type": "t_address",
          "src": "526:22:102"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "______gap",
          "astId": 21727,
          "type": "t_array:50<t_uint256>",
          "src": "2471:29:102"
        },
        {
          "contract": "Module",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\common\\Module.sol",
          "label": "pool",
          "astId": 43,
          "type": "t_address",
          "src": "214:19:1"
        },
        {
          "contract": "DefiOperatorRole",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\DefiOperatorRole.sol",
          "label": "_operators",
          "astId": 7699,
          "type": "t_struct<Roles.Role>",
          "src": "445:29:69"
        },
        {
          "contract": "ProtocolBase",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\ProtocolBase.sol",
          "label": "rewardBalances",
          "astId": 7836,
          "type": "t_mapping<t_uint256>",
          "src": "877:47:70"
        },
        {
          "contract": "AaveProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\AaveProtocol.sol",
          "label": "baseToken",
          "astId": 2633,
          "type": "t_address",
          "src": "916:23:58"
        },
        {
          "contract": "AaveProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\AaveProtocol.sol",
          "label": "decimals",
          "astId": 2635,
          "type": "t_uint8",
          "src": "945:21:58"
        },
        {
          "contract": "AaveProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\AaveProtocol.sol",
          "label": "aToken",
          "astId": 2637,
          "type": "t_address",
          "src": "972:21:58"
        },
        {
          "contract": "AaveProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\AaveProtocol.sol",
          "label": "lendingPool",
          "astId": 2639,
          "type": "t_address",
          "src": "999:35:58"
        },
        {
          "contract": "AaveProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\AaveProtocol.sol",
          "label": "lendingPoolCore",
          "astId": 2641,
          "type": "t_address",
          "src": "1040:43:58"
        },
        {
          "contract": "AaveProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\AaveProtocol.sol",
          "label": "aaveReferralCode",
          "astId": 2643,
          "type": "t_uint16",
          "src": "1089:30:58"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": [],
        "storageUncheckedVars": [
          {
            "contract": "DefiOperatorRole",
            "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\DefiOperatorRole.sol",
            "label": "_operators",
            "astId": 7699,
            "type": "t_struct<Roles.Role>",
            "src": "445:29:69"
          }
        ],
        "storageDiff": []
      }
    },
    "AaveProtocol_BUSD": {
      "address": "0xc7720164ed26f3f49540fd0d98feac94bbcf7823",
      "constructorCode": "60806040526130f4806100136000396000f3fe",
      "bodyBytecodeHash": "2aaff89c62ad1c60ab0972e64c1f193bcf2a92de9c5afde9f68a7030eeed3937",
      "localBytecodeHash": "1d26966d39ef781306a50554fc83a0f75f35d2e5d1c7b79d7153033da3fd266b",
      "deployedBytecodeHash": "1d26966d39ef781306a50554fc83a0f75f35d2e5d1c7b79d7153033da3fd266b",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_struct<Roles.Role>": {
          "id": "t_struct<Roles.Role>",
          "kind": "struct",
          "label": "Roles.Role",
          "members": [
            {
              "label": "bearer",
              "astId": 20611,
              "type": "t_mapping<t_bool>",
              "src": "150:32:94"
            }
          ]
        },
        "t_mapping<t_bool>": {
          "id": "t_mapping<t_bool>",
          "valueType": "t_bool",
          "label": "mapping(key => bool)",
          "kind": "mapping"
        },
        "t_mapping<t_uint256>": {
          "id": "t_mapping<t_uint256>",
          "valueType": "t_uint256",
          "label": "mapping(key => uint256)",
          "kind": "mapping"
        },
        "t_uint8": {
          "id": "t_uint8",
          "kind": "elementary",
          "label": "uint8"
        },
        "t_uint16": {
          "id": "t_uint16",
          "kind": "elementary",
          "label": "uint16"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initialized",
          "astId": 22681,
          "type": "t_bool",
          "src": "757:24:111"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initializing",
          "astId": 22683,
          "type": "t_bool",
          "src": "876:25:111"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "______gap",
          "astId": 22745,
          "type": "t_array:50<t_uint256>",
          "src": "1982:29:111"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "_owner",
          "astId": 21614,
          "type": "t_address",
          "src": "526:22:102"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "______gap",
          "astId": 21727,
          "type": "t_array:50<t_uint256>",
          "src": "2471:29:102"
        },
        {
          "contract": "Module",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\common\\Module.sol",
          "label": "pool",
          "astId": 43,
          "type": "t_address",
          "src": "214:19:1"
        },
        {
          "contract": "DefiOperatorRole",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\DefiOperatorRole.sol",
          "label": "_operators",
          "astId": 7699,
          "type": "t_struct<Roles.Role>",
          "src": "445:29:69"
        },
        {
          "contract": "ProtocolBase",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\ProtocolBase.sol",
          "label": "rewardBalances",
          "astId": 7836,
          "type": "t_mapping<t_uint256>",
          "src": "877:47:70"
        },
        {
          "contract": "AaveProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\AaveProtocol.sol",
          "label": "baseToken",
          "astId": 2633,
          "type": "t_address",
          "src": "916:23:58"
        },
        {
          "contract": "AaveProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\AaveProtocol.sol",
          "label": "decimals",
          "astId": 2635,
          "type": "t_uint8",
          "src": "945:21:58"
        },
        {
          "contract": "AaveProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\AaveProtocol.sol",
          "label": "aToken",
          "astId": 2637,
          "type": "t_address",
          "src": "972:21:58"
        },
        {
          "contract": "AaveProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\AaveProtocol.sol",
          "label": "lendingPool",
          "astId": 2639,
          "type": "t_address",
          "src": "999:35:58"
        },
        {
          "contract": "AaveProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\AaveProtocol.sol",
          "label": "lendingPoolCore",
          "astId": 2641,
          "type": "t_address",
          "src": "1040:43:58"
        },
        {
          "contract": "AaveProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\AaveProtocol.sol",
          "label": "aaveReferralCode",
          "astId": 2643,
          "type": "t_uint16",
          "src": "1089:30:58"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": []
      }
    },
    "PoolToken_Aave_SUSD": {
      "address": "0x1f29d7dB5428fe4d65524925014fC34294429B50",
      "constructorCode": "60806040526133b6806100136000396000f3fe",
      "bodyBytecodeHash": "710c1ae0e6c34df2c0ef18538025b10e7f6d1c4265a15e2058be7447c55df054",
      "localBytecodeHash": "864ffba57e3cecaa1a89593c70677e2e73de43f5b9cd7659aa09c642b1732d5f",
      "deployedBytecodeHash": "864ffba57e3cecaa1a89593c70677e2e73de43f5b9cd7659aa09c642b1732d5f",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_mapping<t_uint256>": {
          "id": "t_mapping<t_uint256>",
          "valueType": "t_uint256",
          "label": "mapping(key => uint256)",
          "kind": "mapping"
        },
        "t_string": {
          "id": "t_string",
          "kind": "elementary",
          "label": "string"
        },
        "t_uint8": {
          "id": "t_uint8",
          "kind": "elementary",
          "label": "uint8"
        },
        "t_struct<Roles.Role>": {
          "id": "t_struct<Roles.Role>",
          "kind": "struct",
          "label": "Roles.Role",
          "members": [
            {
              "label": "bearer",
              "astId": 18459,
              "type": "t_mapping<t_bool>",
              "src": "150:32:86"
            }
          ]
        },
        "t_mapping<t_bool>": {
          "id": "t_mapping<t_bool>",
          "valueType": "t_bool",
          "label": "mapping(key => bool)",
          "kind": "mapping"
        },
        "t_struct<DistributionToken.Distribution>": {
          "id": "t_struct<DistributionToken.Distribution>",
          "kind": "struct",
          "label": "DistributionToken.Distribution",
          "members": [
            {
              "label": "amount",
              "astId": 11799,
              "type": "t_uint256",
              "src": "745:14:71"
            },
            {
              "label": "totalSupply",
              "astId": 11801,
              "type": "t_uint256",
              "src": "832:19:71"
            }
          ]
        },
        "t_array:dyn<t_struct<DistributionToken.Distribution>>": {
          "id": "t_array:dyn<t_struct<DistributionToken.Distribution>>",
          "valueType": "t_struct<DistributionToken.Distribution>",
          "length": "dyn",
          "kind": "array",
          "label": "DistributionToken.Distribution[]"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initialized",
          "astId": 20529,
          "type": "t_bool",
          "src": "757:24:103"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initializing",
          "astId": 20531,
          "type": "t_bool",
          "src": "876:25:103"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "______gap",
          "astId": 20593,
          "type": "t_array:50<t_uint256>",
          "src": "1982:29:103"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "_owner",
          "astId": 19462,
          "type": "t_address",
          "src": "526:22:94"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "______gap",
          "astId": 19575,
          "type": "t_array:50<t_uint256>",
          "src": "2471:29:94"
        },
        {
          "contract": "Module",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\common\\Module.sol",
          "label": "pool",
          "astId": 43,
          "type": "t_address",
          "src": "214:19:1"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol",
          "label": "_balances",
          "astId": 19595,
          "type": "t_mapping<t_uint256>",
          "src": "1418:46:95"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol",
          "label": "_allowances",
          "astId": 19601,
          "type": "t_mapping<t_uint256>",
          "src": "1471:69:95"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol",
          "label": "_totalSupply",
          "astId": 19603,
          "type": "t_uint256",
          "src": "1547:28:95"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol",
          "label": "______gap",
          "astId": 19987,
          "type": "t_array:50<t_uint256>",
          "src": "8172:29:95"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Detailed.sol",
          "label": "_name",
          "astId": 20039,
          "type": "t_string",
          "src": "224:20:97"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Detailed.sol",
          "label": "_symbol",
          "astId": 20041,
          "type": "t_string",
          "src": "250:22:97"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Detailed.sol",
          "label": "_decimals",
          "astId": 20043,
          "type": "t_uint8",
          "src": "278:23:97"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Detailed.sol",
          "label": "______gap",
          "astId": 20095,
          "type": "t_array:50<t_uint256>",
          "src": "1654:29:97"
        },
        {
          "contract": "MinterRole",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\MinterRole.sol",
          "label": "_minters",
          "astId": 18679,
          "type": "t_struct<Roles.Role>",
          "src": "327:27:88"
        },
        {
          "contract": "MinterRole",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\MinterRole.sol",
          "label": "______gap",
          "astId": 18779,
          "type": "t_array:50<t_uint256>",
          "src": "1193:29:88"
        },
        {
          "contract": "ERC20Mintable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Mintable.sol",
          "label": "______gap",
          "astId": 20144,
          "type": "t_array:50<t_uint256>",
          "src": "831:29:98"
        },
        {
          "contract": "ERC20Burnable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Burnable.sol",
          "label": "______gap",
          "astId": 20028,
          "type": "t_array:50<t_uint256>",
          "src": "761:29:96"
        },
        {
          "contract": "DistributionToken",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\token\\DistributionToken.sol",
          "label": "distributions",
          "astId": 11805,
          "type": "t_array:dyn<t_struct<DistributionToken.Distribution>>",
          "src": "903:35:71"
        },
        {
          "contract": "DistributionToken",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\token\\DistributionToken.sol",
          "label": "nextDistributions",
          "astId": 11809,
          "type": "t_mapping<t_uint256>",
          "src": "992:52:71"
        },
        {
          "contract": "DistributionToken",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\token\\DistributionToken.sol",
          "label": "nextDistributionTimestamp",
          "astId": 11811,
          "type": "t_uint256",
          "src": "1107:40:71"
        },
        {
          "contract": "DistributionToken",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\token\\DistributionToken.sol",
          "label": "distributionAccumulator",
          "astId": 11813,
          "type": "t_uint256",
          "src": "1242:38:71"
        },
        {
          "contract": "PoolToken",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\token\\PoolToken.sol",
          "label": "allowTransfers",
          "astId": 12505,
          "type": "t_bool",
          "src": "628:19:72"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": []
      }
    },
    "PoolToken_Aave_BUSD": {
      "address": "0x340b6B614789DC6154Afd630882Fa672BAA24973",
      "constructorCode": "60806040526133b6806100136000396000f3fe",
      "bodyBytecodeHash": "7a8040fc35c7454d3af9dd0f3adf858447cb3c43acdd635f802d77ffb7cc5085",
      "localBytecodeHash": "1f9294a7ba45dbea45729132319c3308e3ebe0775087fe03c9663fb6388c6159",
      "deployedBytecodeHash": "1f9294a7ba45dbea45729132319c3308e3ebe0775087fe03c9663fb6388c6159",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_mapping<t_uint256>": {
          "id": "t_mapping<t_uint256>",
          "valueType": "t_uint256",
          "label": "mapping(key => uint256)",
          "kind": "mapping"
        },
        "t_string": {
          "id": "t_string",
          "kind": "elementary",
          "label": "string"
        },
        "t_uint8": {
          "id": "t_uint8",
          "kind": "elementary",
          "label": "uint8"
        },
        "t_struct<Roles.Role>": {
          "id": "t_struct<Roles.Role>",
          "kind": "struct",
          "label": "Roles.Role",
          "members": [
            {
              "label": "bearer",
              "astId": 18459,
              "type": "t_mapping<t_bool>",
              "src": "150:32:86"
            }
          ]
        },
        "t_mapping<t_bool>": {
          "id": "t_mapping<t_bool>",
          "valueType": "t_bool",
          "label": "mapping(key => bool)",
          "kind": "mapping"
        },
        "t_struct<DistributionToken.Distribution>": {
          "id": "t_struct<DistributionToken.Distribution>",
          "kind": "struct",
          "label": "DistributionToken.Distribution",
          "members": [
            {
              "label": "amount",
              "astId": 11799,
              "type": "t_uint256",
              "src": "745:14:71"
            },
            {
              "label": "totalSupply",
              "astId": 11801,
              "type": "t_uint256",
              "src": "832:19:71"
            }
          ]
        },
        "t_array:dyn<t_struct<DistributionToken.Distribution>>": {
          "id": "t_array:dyn<t_struct<DistributionToken.Distribution>>",
          "valueType": "t_struct<DistributionToken.Distribution>",
          "length": "dyn",
          "kind": "array",
          "label": "DistributionToken.Distribution[]"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initialized",
          "astId": 20529,
          "type": "t_bool",
          "src": "757:24:103"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initializing",
          "astId": 20531,
          "type": "t_bool",
          "src": "876:25:103"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "______gap",
          "astId": 20593,
          "type": "t_array:50<t_uint256>",
          "src": "1982:29:103"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "_owner",
          "astId": 19462,
          "type": "t_address",
          "src": "526:22:94"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "______gap",
          "astId": 19575,
          "type": "t_array:50<t_uint256>",
          "src": "2471:29:94"
        },
        {
          "contract": "Module",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\common\\Module.sol",
          "label": "pool",
          "astId": 43,
          "type": "t_address",
          "src": "214:19:1"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol",
          "label": "_balances",
          "astId": 19595,
          "type": "t_mapping<t_uint256>",
          "src": "1418:46:95"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol",
          "label": "_allowances",
          "astId": 19601,
          "type": "t_mapping<t_uint256>",
          "src": "1471:69:95"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol",
          "label": "_totalSupply",
          "astId": 19603,
          "type": "t_uint256",
          "src": "1547:28:95"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol",
          "label": "______gap",
          "astId": 19987,
          "type": "t_array:50<t_uint256>",
          "src": "8172:29:95"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Detailed.sol",
          "label": "_name",
          "astId": 20039,
          "type": "t_string",
          "src": "224:20:97"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Detailed.sol",
          "label": "_symbol",
          "astId": 20041,
          "type": "t_string",
          "src": "250:22:97"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Detailed.sol",
          "label": "_decimals",
          "astId": 20043,
          "type": "t_uint8",
          "src": "278:23:97"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Detailed.sol",
          "label": "______gap",
          "astId": 20095,
          "type": "t_array:50<t_uint256>",
          "src": "1654:29:97"
        },
        {
          "contract": "MinterRole",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\MinterRole.sol",
          "label": "_minters",
          "astId": 18679,
          "type": "t_struct<Roles.Role>",
          "src": "327:27:88"
        },
        {
          "contract": "MinterRole",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\MinterRole.sol",
          "label": "______gap",
          "astId": 18779,
          "type": "t_array:50<t_uint256>",
          "src": "1193:29:88"
        },
        {
          "contract": "ERC20Mintable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Mintable.sol",
          "label": "______gap",
          "astId": 20144,
          "type": "t_array:50<t_uint256>",
          "src": "831:29:98"
        },
        {
          "contract": "ERC20Burnable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Burnable.sol",
          "label": "______gap",
          "astId": 20028,
          "type": "t_array:50<t_uint256>",
          "src": "761:29:96"
        },
        {
          "contract": "DistributionToken",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\token\\DistributionToken.sol",
          "label": "distributions",
          "astId": 11805,
          "type": "t_array:dyn<t_struct<DistributionToken.Distribution>>",
          "src": "903:35:71"
        },
        {
          "contract": "DistributionToken",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\token\\DistributionToken.sol",
          "label": "nextDistributions",
          "astId": 11809,
          "type": "t_mapping<t_uint256>",
          "src": "992:52:71"
        },
        {
          "contract": "DistributionToken",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\token\\DistributionToken.sol",
          "label": "nextDistributionTimestamp",
          "astId": 11811,
          "type": "t_uint256",
          "src": "1107:40:71"
        },
        {
          "contract": "DistributionToken",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\token\\DistributionToken.sol",
          "label": "distributionAccumulator",
          "astId": 11813,
          "type": "t_uint256",
          "src": "1242:38:71"
        },
        {
          "contract": "PoolToken",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\token\\PoolToken.sol",
          "label": "allowTransfers",
          "astId": 12505,
          "type": "t_bool",
          "src": "628:19:72"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": []
      }
    },
    "StakingPoolADEL": {
      "address": "0x063E22147bcA7eA413327e2125F5F01DA537D48E",
      "constructorCode": "6080604052613c60806100136000396000f3fe",
      "bodyBytecodeHash": "60965f9d49cef418d279f85723bfadf4617846dfc49f07eec8e11245d9d14fae",
      "localBytecodeHash": "cdad1b94a3e7938fed0f562d4ebbcce257d2d57e0d5beb94c5a5a27cf7132766",
      "deployedBytecodeHash": "cdad1b94a3e7938fed0f562d4ebbcce257d2d57e0d5beb94c5a5a27cf7132766",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_struct<Roles.Role>": {
          "id": "t_struct<Roles.Role>",
          "kind": "struct",
          "label": "Roles.Role",
          "members": [
            {
              "label": "bearer",
              "astId": 20669,
              "type": "t_mapping<t_bool>",
              "src": "150:32:94"
            }
          ]
        },
        "t_mapping<t_bool>": {
          "id": "t_mapping<t_bool>",
          "valueType": "t_bool",
          "label": "mapping(key => bool)",
          "kind": "mapping"
        },
        "t_struct<StakingPoolBase.StakeContract>": {
          "id": "t_struct<StakingPoolBase.StakeContract>",
          "kind": "struct",
          "label": "StakingPoolBase.StakeContract",
          "members": [
            {
              "label": "totalStakedFor",
              "astId": 13447,
              "type": "t_uint256",
              "src": "1932:22:78"
            },
            {
              "label": "personalStakeIndex",
              "astId": 13449,
              "type": "t_uint256",
              "src": "1961:26:78"
            },
            {
              "label": "personalStakes",
              "astId": 13452,
              "type": "t_array:dyn<t_struct<StakingPoolBase.Stake>>",
              "src": "1994:22:78"
            },
            {
              "label": "exists",
              "astId": 13454,
              "type": "t_bool",
              "src": "2023:11:78"
            }
          ]
        },
        "t_struct<StakingPoolBase.Stake>": {
          "id": "t_struct<StakingPoolBase.Stake>",
          "kind": "struct",
          "label": "StakingPoolBase.Stake",
          "members": [
            {
              "label": "unlockedTimestamp",
              "astId": 13440,
              "type": "t_uint256",
              "src": "1488:25:78"
            },
            {
              "label": "actualAmount",
              "astId": 13442,
              "type": "t_uint256",
              "src": "1519:20:78"
            },
            {
              "label": "stakedFor",
              "astId": 13444,
              "type": "t_address",
              "src": "1545:17:78"
            }
          ]
        },
        "t_array:dyn<t_struct<StakingPoolBase.Stake>>": {
          "id": "t_array:dyn<t_struct<StakingPoolBase.Stake>>",
          "valueType": "t_struct<StakingPoolBase.Stake>",
          "length": "dyn",
          "kind": "array",
          "label": "StakingPoolBase.Stake[]"
        },
        "t_mapping<t_struct<StakingPoolBase.StakeContract>>": {
          "id": "t_mapping<t_struct<StakingPoolBase.StakeContract>>",
          "valueType": "t_struct<StakingPoolBase.StakeContract>",
          "label": "mapping(key => StakingPoolBase.StakeContract)",
          "kind": "mapping"
        },
        "t_mapping<t_uint256>": {
          "id": "t_mapping<t_uint256>",
          "valueType": "t_uint256",
          "label": "mapping(key => uint256)",
          "kind": "mapping"
        },
        "t_array:dyn<t_address>": {
          "id": "t_array:dyn<t_address>",
          "valueType": "t_address",
          "length": "dyn",
          "kind": "array",
          "label": "address[]"
        },
        "t_struct<StakingPool.RewardData>": {
          "id": "t_struct<StakingPool.RewardData>",
          "kind": "struct",
          "label": "StakingPool.RewardData",
          "members": [
            {
              "label": "distributions",
              "astId": 12928,
              "type": "t_array:dyn<t_struct<StakingPool.RewardDistribution>>",
              "src": "845:34:77"
            },
            {
              "label": "unclaimed",
              "astId": 12930,
              "type": "t_uint256",
              "src": "889:17:77"
            }
          ]
        },
        "t_struct<StakingPool.RewardDistribution>": {
          "id": "t_struct<StakingPool.RewardDistribution>",
          "kind": "struct",
          "label": "StakingPool.RewardDistribution",
          "members": [
            {
              "label": "totalShares",
              "astId": 12917,
              "type": "t_uint256",
              "src": "644:19:77"
            },
            {
              "label": "amount",
              "astId": 12919,
              "type": "t_uint256",
              "src": "673:14:77"
            }
          ]
        },
        "t_array:dyn<t_struct<StakingPool.RewardDistribution>>": {
          "id": "t_array:dyn<t_struct<StakingPool.RewardDistribution>>",
          "valueType": "t_struct<StakingPool.RewardDistribution>",
          "length": "dyn",
          "kind": "array",
          "label": "StakingPool.RewardDistribution[]"
        },
        "t_mapping<t_struct<StakingPool.RewardData>>": {
          "id": "t_mapping<t_struct<StakingPool.RewardData>>",
          "valueType": "t_struct<StakingPool.RewardData>",
          "label": "mapping(key => StakingPool.RewardData)",
          "kind": "mapping"
        },
        "t_struct<StakingPool.UserRewardInfo>": {
          "id": "t_struct<StakingPool.UserRewardInfo>",
          "kind": "struct",
          "label": "StakingPool.UserRewardInfo",
          "members": [
            {
              "label": "nextDistribution",
              "astId": 12924,
              "type": "t_mapping<t_uint256>",
              "src": "732:42:77"
            }
          ]
        },
        "t_mapping<t_struct<StakingPool.UserRewardInfo>>": {
          "id": "t_mapping<t_struct<StakingPool.UserRewardInfo>>",
          "valueType": "t_struct<StakingPool.UserRewardInfo>",
          "label": "mapping(key => StakingPool.UserRewardInfo)",
          "kind": "mapping"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initialized",
          "astId": 22739,
          "type": "t_bool",
          "src": "757:24:111"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initializing",
          "astId": 22741,
          "type": "t_bool",
          "src": "876:25:111"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "______gap",
          "astId": 22803,
          "type": "t_array:50<t_uint256>",
          "src": "1982:29:111"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "_owner",
          "astId": 21672,
          "type": "t_address",
          "src": "526:22:102"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "______gap",
          "astId": 21785,
          "type": "t_array:50<t_uint256>",
          "src": "2471:29:102"
        },
        {
          "contract": "Module",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\common\\Module.sol",
          "label": "pool",
          "astId": 43,
          "type": "t_address",
          "src": "214:19:1"
        },
        {
          "contract": "CapperRole",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\CapperRole.sol",
          "label": "_cappers",
          "astId": 20766,
          "type": "t_struct<Roles.Role>",
          "src": "327:27:95"
        },
        {
          "contract": "CapperRole",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\CapperRole.sol",
          "label": "______gap",
          "astId": 20866,
          "type": "t_array:50<t_uint256>",
          "src": "1193:29:95"
        },
        {
          "contract": "StakingPoolBase",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\staking\\StakingPoolBase.sol",
          "label": "stakingToken",
          "astId": 13432,
          "type": "t_address",
          "src": "699:18:78"
        },
        {
          "contract": "StakingPoolBase",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\staking\\StakingPoolBase.sol",
          "label": "defaultLockInDuration",
          "astId": 13434,
          "type": "t_uint256",
          "src": "778:36:78"
        },
        {
          "contract": "StakingPoolBase",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\staking\\StakingPoolBase.sol",
          "label": "stakeHolders",
          "astId": 13438,
          "type": "t_mapping<t_struct<StakingPoolBase.StakeContract>>",
          "src": "1156:54:78"
        },
        {
          "contract": "StakingPoolBase",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\staking\\StakingPoolBase.sol",
          "label": "userCapEnabled",
          "astId": 13457,
          "type": "t_bool",
          "src": "2043:26:78"
        },
        {
          "contract": "StakingPoolBase",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\staking\\StakingPoolBase.sol",
          "label": "userCap",
          "astId": 13461,
          "type": "t_mapping<t_uint256>",
          "src": "2074:42:78"
        },
        {
          "contract": "StakingPoolBase",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\staking\\StakingPoolBase.sol",
          "label": "defaultUserCap",
          "astId": 13463,
          "type": "t_uint256",
          "src": "2193:29:78"
        },
        {
          "contract": "StakingPoolBase",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\staking\\StakingPoolBase.sol",
          "label": "stakingCapEnabled",
          "astId": 13465,
          "type": "t_bool",
          "src": "2226:29:78"
        },
        {
          "contract": "StakingPoolBase",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\staking\\StakingPoolBase.sol",
          "label": "stakingCap",
          "astId": 13467,
          "type": "t_uint256",
          "src": "2259:25:78"
        },
        {
          "contract": "StakingPoolBase",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\staking\\StakingPoolBase.sol",
          "label": "vipUserEnabled",
          "astId": 13469,
          "type": "t_bool",
          "src": "2290:26:78"
        },
        {
          "contract": "StakingPoolBase",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\staking\\StakingPoolBase.sol",
          "label": "isVipUser",
          "astId": 13473,
          "type": "t_mapping<t_bool>",
          "src": "2320:41:78"
        },
        {
          "contract": "StakingPoolBase",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\staking\\StakingPoolBase.sol",
          "label": "totalStakedAmount",
          "astId": 13475,
          "type": "t_uint256",
          "src": "2366:34:78"
        },
        {
          "contract": "StakingPoolBase",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\staking\\StakingPoolBase.sol",
          "label": "______gap",
          "astId": 14561,
          "type": "t_array:50<t_uint256>",
          "src": "16692:29:78"
        },
        {
          "contract": "StakingPool",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\staking\\StakingPool.sol",
          "label": "rewardVesting",
          "astId": 12933,
          "type": "t_address",
          "src": "919:40:77"
        },
        {
          "contract": "StakingPool",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\staking\\StakingPool.sol",
          "label": "registeredRewardTokens",
          "astId": 12936,
          "type": "t_array:dyn<t_address>",
          "src": "965:41:77"
        },
        {
          "contract": "StakingPool",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\staking\\StakingPool.sol",
          "label": "rewards",
          "astId": 12940,
          "type": "t_mapping<t_struct<StakingPool.RewardData>>",
          "src": "1012:45:77"
        },
        {
          "contract": "StakingPool",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\staking\\StakingPool.sol",
          "label": "userRewards",
          "astId": 12944,
          "type": "t_mapping<t_struct<StakingPool.UserRewardInfo>>",
          "src": "1063:53:77"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": [],
        "storageUncheckedVars": [
          {
            "contract": "CapperRole",
            "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\CapperRole.sol",
            "label": "_cappers",
            "astId": 20766,
            "type": "t_struct<Roles.Role>",
            "src": "327:27:95"
          },
          {
            "contract": "StakingPoolBase",
            "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\staking\\StakingPoolBase.sol",
            "label": "stakeHolders",
            "astId": 13438,
            "type": "t_mapping<t_struct<StakingPoolBase.StakeContract>>",
            "src": "1156:54:78"
          },
          {
            "contract": "StakingPool",
            "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\staking\\StakingPool.sol",
            "label": "rewards",
            "astId": 12940,
            "type": "t_mapping<t_struct<StakingPool.RewardData>>",
            "src": "1012:45:77"
          },
          {
            "contract": "StakingPool",
            "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\staking\\StakingPool.sol",
            "label": "userRewards",
            "astId": 12944,
            "type": "t_mapping<t_struct<StakingPool.UserRewardInfo>>",
            "src": "1063:53:77"
          }
        ],
        "storageDiff": [
          {
            "action": "typechange",
            "updated": {
              "index": 10,
              "contract": "StakingPoolBase",
              "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\staking\\StakingPoolBase.sol",
              "label": "stakeHolders",
              "astId": 13438,
              "type": "t_mapping<t_struct<StakingPoolBase.StakeContract>>",
              "src": "1156:54:78"
            },
            "original": {
              "index": 10,
              "contract": "StakingPool",
              "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\staking\\StakingPool.sol",
              "label": "stakeHolders",
              "astId": 10669,
              "type": "t_mapping<t_struct<StakingPool.StakeContract>>",
              "src": "1152:54:70"
            }
          },
          {
            "action": "append",
            "updated": {
              "index": 18,
              "contract": "StakingPoolBase",
              "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\staking\\StakingPoolBase.sol",
              "label": "totalStakedAmount",
              "astId": 13475,
              "type": "t_uint256",
              "src": "2366:34:78"
            }
          },
          {
            "action": "append",
            "updated": {
              "index": 19,
              "contract": "StakingPoolBase",
              "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\staking\\StakingPoolBase.sol",
              "label": "______gap",
              "astId": 14561,
              "type": "t_array:50<t_uint256>",
              "src": "16692:29:78"
            }
          },
          {
            "action": "append",
            "updated": {
              "index": 20,
              "contract": "StakingPool",
              "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\staking\\StakingPool.sol",
              "label": "rewardVesting",
              "astId": 12933,
              "type": "t_address",
              "src": "919:40:77"
            }
          },
          {
            "action": "append",
            "updated": {
              "index": 21,
              "contract": "StakingPool",
              "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\staking\\StakingPool.sol",
              "label": "registeredRewardTokens",
              "astId": 12936,
              "type": "t_array:dyn<t_address>",
              "src": "965:41:77"
            }
          },
          {
            "action": "append",
            "updated": {
              "index": 22,
              "contract": "StakingPool",
              "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\staking\\StakingPool.sol",
              "label": "rewards",
              "astId": 12940,
              "type": "t_mapping<t_struct<StakingPool.RewardData>>",
              "src": "1012:45:77"
            }
          },
          {
            "action": "append",
            "updated": {
              "index": 23,
              "contract": "StakingPool",
              "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\staking\\StakingPool.sol",
              "label": "userRewards",
              "astId": 12944,
              "type": "t_mapping<t_struct<StakingPool.UserRewardInfo>>",
              "src": "1063:53:77"
            }
          }
        ]
      }
    },
    "CurveFiProtocol_SBTC": {
      "address": "0x30a7a3CeFE09D9B2e834D5C811d56B7Eb086f763",
      "constructorCode": "6080604052614414806100136000396000f3fe",
      "bodyBytecodeHash": "dc98c90015681d3f54b4fc9e76fa64683e14f27815e609df4b1230589f487e9c",
      "localBytecodeHash": "43a2aac347aa69ca3ed030805eb7ff3513e4bf5672d3ee060425bf9367fe7f36",
      "deployedBytecodeHash": "43a2aac347aa69ca3ed030805eb7ff3513e4bf5672d3ee060425bf9367fe7f36",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_struct<Roles.Role>": {
          "id": "t_struct<Roles.Role>",
          "kind": "struct",
          "label": "Roles.Role",
          "members": [
            {
              "label": "bearer",
              "astId": 19052,
              "type": "t_mapping<t_bool>",
              "src": "150:32:90"
            }
          ]
        },
        "t_mapping<t_bool>": {
          "id": "t_mapping<t_bool>",
          "valueType": "t_bool",
          "label": "mapping(key => bool)",
          "kind": "mapping"
        },
        "t_mapping<t_uint256>": {
          "id": "t_mapping<t_uint256>",
          "valueType": "t_uint256",
          "label": "mapping(key => uint256)",
          "kind": "mapping"
        },
        "t_array:dyn<t_address>": {
          "id": "t_array:dyn<t_address>",
          "valueType": "t_address",
          "length": "dyn",
          "kind": "array",
          "label": "address[]"
        },
        "t_uint8": {
          "id": "t_uint8",
          "kind": "elementary",
          "label": "uint8"
        },
        "t_mapping<t_uint8>": {
          "id": "t_mapping<t_uint8>",
          "valueType": "t_uint8",
          "label": "mapping(key => uint8)",
          "kind": "mapping"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initialized",
          "astId": 21122,
          "type": "t_bool",
          "src": "757:24:107"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initializing",
          "astId": 21124,
          "type": "t_bool",
          "src": "876:25:107"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "______gap",
          "astId": 21186,
          "type": "t_array:50<t_uint256>",
          "src": "1982:29:107"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "_owner",
          "astId": 20055,
          "type": "t_address",
          "src": "526:22:98"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "______gap",
          "astId": 20168,
          "type": "t_array:50<t_uint256>",
          "src": "2471:29:98"
        },
        {
          "contract": "Module",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\common\\Module.sol",
          "label": "pool",
          "astId": 43,
          "type": "t_address",
          "src": "214:19:1"
        },
        {
          "contract": "DefiOperatorRole",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\DefiOperatorRole.sol",
          "label": "_operators",
          "astId": 7147,
          "type": "t_struct<Roles.Role>",
          "src": "445:29:67"
        },
        {
          "contract": "ProtocolBase",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\ProtocolBase.sol",
          "label": "rewardBalances",
          "astId": 7283,
          "type": "t_mapping<t_uint256>",
          "src": "833:47:68"
        },
        {
          "contract": "CurveFiProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol.sol",
          "label": "curveFiSwap",
          "astId": 4578,
          "type": "t_address",
          "src": "1301:31:60"
        },
        {
          "contract": "CurveFiProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol.sol",
          "label": "curveFiDeposit",
          "astId": 4580,
          "type": "t_address",
          "src": "1338:37:60"
        },
        {
          "contract": "CurveFiProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol.sol",
          "label": "curveFiLPGauge",
          "astId": 4582,
          "type": "t_address",
          "src": "1381:44:60"
        },
        {
          "contract": "CurveFiProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol.sol",
          "label": "curveFiMinter",
          "astId": 4584,
          "type": "t_address",
          "src": "1431:35:60"
        },
        {
          "contract": "CurveFiProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol.sol",
          "label": "curveFiToken",
          "astId": 4586,
          "type": "t_address",
          "src": "1472:26:60"
        },
        {
          "contract": "CurveFiProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol.sol",
          "label": "crvToken",
          "astId": 4588,
          "type": "t_address",
          "src": "1504:23:60"
        },
        {
          "contract": "CurveFiProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol.sol",
          "label": "_registeredTokens",
          "astId": 4591,
          "type": "t_array:dyn<t_address>",
          "src": "1533:36:60"
        },
        {
          "contract": "CurveFiProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol.sol",
          "label": "slippageMultiplier",
          "astId": 4593,
          "type": "t_uint256",
          "src": "1575:33:60"
        },
        {
          "contract": "CurveFiProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol.sol",
          "label": "decimals",
          "astId": 4597,
          "type": "t_mapping<t_uint8>",
          "src": "1685:41:60"
        },
        {
          "contract": "CurveFiProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol.sol",
          "label": "______gap",
          "astId": 5937,
          "type": "t_array:50<t_uint256>",
          "src": "13446:29:60"
        },
        {
          "contract": "CurveFiProtocol_SBTC",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol_SBTC.sol",
          "label": "balRewardToken",
          "astId": 6174,
          "type": "t_address",
          "src": "364:22:63"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": [],
        "storageUncheckedVars": [
          {
            "contract": "DefiOperatorRole",
            "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\DefiOperatorRole.sol",
            "label": "_operators",
            "astId": 7147,
            "type": "t_struct<Roles.Role>",
            "src": "445:29:67"
          }
        ],
        "storageDiff": []
      }
    },
    "PoolToken_CurveFi_SBTC": {
      "address": "0x5242DF9BC566E96a0F5Bafe4550d697C1d9CCA4E",
      "constructorCode": "608060405261342d806100136000396000f3fe",
      "bodyBytecodeHash": "8b94d2839d36c0f9e62e9634712daea9f6d0c504131b23e92df16d6004088ba4",
      "localBytecodeHash": "dec8ae5f1030ab80a8785e8f535dfcb590bb59b95f83f660806b5d96ae0b2671",
      "deployedBytecodeHash": "dec8ae5f1030ab80a8785e8f535dfcb590bb59b95f83f660806b5d96ae0b2671",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_mapping<t_uint256>": {
          "id": "t_mapping<t_uint256>",
          "valueType": "t_uint256",
          "label": "mapping(key => uint256)",
          "kind": "mapping"
        },
        "t_string": {
          "id": "t_string",
          "kind": "elementary",
          "label": "string"
        },
        "t_uint8": {
          "id": "t_uint8",
          "kind": "elementary",
          "label": "uint8"
        },
        "t_struct<Roles.Role>": {
          "id": "t_struct<Roles.Role>",
          "kind": "struct",
          "label": "Roles.Role",
          "members": [
            {
              "label": "bearer",
              "astId": 19013,
              "type": "t_mapping<t_bool>",
              "src": "150:32:90"
            }
          ]
        },
        "t_mapping<t_bool>": {
          "id": "t_mapping<t_bool>",
          "valueType": "t_bool",
          "label": "mapping(key => bool)",
          "kind": "mapping"
        },
        "t_struct<DistributionToken.Distribution>": {
          "id": "t_struct<DistributionToken.Distribution>",
          "kind": "struct",
          "label": "DistributionToken.Distribution",
          "members": [
            {
              "label": "amount",
              "astId": 12353,
              "type": "t_uint256",
              "src": "745:14:75"
            },
            {
              "label": "totalSupply",
              "astId": 12355,
              "type": "t_uint256",
              "src": "832:19:75"
            }
          ]
        },
        "t_array:dyn<t_struct<DistributionToken.Distribution>>": {
          "id": "t_array:dyn<t_struct<DistributionToken.Distribution>>",
          "valueType": "t_struct<DistributionToken.Distribution>",
          "length": "dyn",
          "kind": "array",
          "label": "DistributionToken.Distribution[]"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initialized",
          "astId": 21083,
          "type": "t_bool",
          "src": "757:24:107"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initializing",
          "astId": 21085,
          "type": "t_bool",
          "src": "876:25:107"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "______gap",
          "astId": 21147,
          "type": "t_array:50<t_uint256>",
          "src": "1982:29:107"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "_owner",
          "astId": 20016,
          "type": "t_address",
          "src": "526:22:98"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "______gap",
          "astId": 20129,
          "type": "t_array:50<t_uint256>",
          "src": "2471:29:98"
        },
        {
          "contract": "Module",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\common\\Module.sol",
          "label": "pool",
          "astId": 43,
          "type": "t_address",
          "src": "214:19:1"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol",
          "label": "_balances",
          "astId": 20149,
          "type": "t_mapping<t_uint256>",
          "src": "1418:46:99"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol",
          "label": "_allowances",
          "astId": 20155,
          "type": "t_mapping<t_uint256>",
          "src": "1471:69:99"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol",
          "label": "_totalSupply",
          "astId": 20157,
          "type": "t_uint256",
          "src": "1547:28:99"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol",
          "label": "______gap",
          "astId": 20541,
          "type": "t_array:50<t_uint256>",
          "src": "8172:29:99"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Detailed.sol",
          "label": "_name",
          "astId": 20593,
          "type": "t_string",
          "src": "224:20:101"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Detailed.sol",
          "label": "_symbol",
          "astId": 20595,
          "type": "t_string",
          "src": "250:22:101"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Detailed.sol",
          "label": "_decimals",
          "astId": 20597,
          "type": "t_uint8",
          "src": "278:23:101"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Detailed.sol",
          "label": "______gap",
          "astId": 20649,
          "type": "t_array:50<t_uint256>",
          "src": "1654:29:101"
        },
        {
          "contract": "MinterRole",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\MinterRole.sol",
          "label": "_minters",
          "astId": 19233,
          "type": "t_struct<Roles.Role>",
          "src": "327:27:92"
        },
        {
          "contract": "MinterRole",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\MinterRole.sol",
          "label": "______gap",
          "astId": 19333,
          "type": "t_array:50<t_uint256>",
          "src": "1193:29:92"
        },
        {
          "contract": "ERC20Mintable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Mintable.sol",
          "label": "______gap",
          "astId": 20698,
          "type": "t_array:50<t_uint256>",
          "src": "831:29:102"
        },
        {
          "contract": "ERC20Burnable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Burnable.sol",
          "label": "______gap",
          "astId": 20582,
          "type": "t_array:50<t_uint256>",
          "src": "761:29:100"
        },
        {
          "contract": "DistributionToken",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\token\\DistributionToken.sol",
          "label": "distributions",
          "astId": 12359,
          "type": "t_array:dyn<t_struct<DistributionToken.Distribution>>",
          "src": "903:35:75"
        },
        {
          "contract": "DistributionToken",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\token\\DistributionToken.sol",
          "label": "nextDistributions",
          "astId": 12363,
          "type": "t_mapping<t_uint256>",
          "src": "992:52:75"
        },
        {
          "contract": "DistributionToken",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\token\\DistributionToken.sol",
          "label": "nextDistributionTimestamp",
          "astId": 12365,
          "type": "t_uint256",
          "src": "1107:40:75"
        },
        {
          "contract": "DistributionToken",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\token\\DistributionToken.sol",
          "label": "distributionAccumulator",
          "astId": 12367,
          "type": "t_uint256",
          "src": "1242:38:75"
        },
        {
          "contract": "PoolToken",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\token\\PoolToken.sol",
          "label": "allowTransfers",
          "astId": 13059,
          "type": "t_bool",
          "src": "628:19:76"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": [],
        "storageUncheckedVars": [
          {
            "contract": "MinterRole",
            "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\MinterRole.sol",
            "label": "_minters",
            "astId": 19233,
            "type": "t_struct<Roles.Role>",
            "src": "327:27:92"
          },
          {
            "contract": "DistributionToken",
            "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\token\\DistributionToken.sol",
            "label": "distributions",
            "astId": 12359,
            "type": "t_array:dyn<t_struct<DistributionToken.Distribution>>",
            "src": "903:35:75"
          }
        ],
        "storageDiff": []
      }
    },
    "InvestingModule": {
      "address": "0xf3F856Aa16a4F432Af352f18f3f59Ce66f5f3a48",
      "constructorCode": "6080604052615c49806100136000396000f3fe",
      "bodyBytecodeHash": "fd13af8eb1399eacbea2e56a79bf13aeccecdc50580e6d9588b3529d34c44081",
      "localBytecodeHash": "2b06681a67b5bcf1c38dbb4adde827b4d86a76fcfa24fcd90ae2973e26107e37",
      "deployedBytecodeHash": "2b06681a67b5bcf1c38dbb4adde827b4d86a76fcfa24fcd90ae2973e26107e37",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_struct<RewardDistributions.RewardTokenDistribution>": {
          "id": "t_struct<RewardDistributions.RewardTokenDistribution>",
          "kind": "struct",
          "label": "RewardDistributions.RewardTokenDistribution",
          "members": [
            {
              "label": "poolToken",
              "astId": 8251,
              "type": "t_address",
              "src": "915:17:70"
            },
            {
              "label": "totalShares",
              "astId": 8253,
              "type": "t_uint256",
              "src": "1006:19:70"
            },
            {
              "label": "rewardTokens",
              "astId": 8256,
              "type": "t_array:dyn<t_address>",
              "src": "1114:22:70"
            },
            {
              "label": "amounts",
              "astId": 8260,
              "type": "t_mapping<t_uint256>",
              "src": "1202:33:70"
            }
          ]
        },
        "t_array:dyn<t_address>": {
          "id": "t_array:dyn<t_address>",
          "valueType": "t_address",
          "length": "dyn",
          "kind": "array",
          "label": "address[]"
        },
        "t_mapping<t_uint256>": {
          "id": "t_mapping<t_uint256>",
          "valueType": "t_uint256",
          "label": "mapping(key => uint256)",
          "kind": "mapping"
        },
        "t_array:dyn<t_struct<RewardDistributions.RewardTokenDistribution>>": {
          "id": "t_array:dyn<t_struct<RewardDistributions.RewardTokenDistribution>>",
          "valueType": "t_struct<RewardDistributions.RewardTokenDistribution>",
          "length": "dyn",
          "kind": "array",
          "label": "RewardDistributions.RewardTokenDistribution[]"
        },
        "t_struct<RewardDistributions.RewardBalance>": {
          "id": "t_struct<RewardDistributions.RewardBalance>",
          "kind": "struct",
          "label": "RewardDistributions.RewardBalance",
          "members": [
            {
              "label": "nextDistribution",
              "astId": 8268,
              "type": "t_uint256",
              "src": "1424:24:70"
            },
            {
              "label": "shares",
              "astId": 8272,
              "type": "t_mapping<t_uint256>",
              "src": "1458:34:70"
            },
            {
              "label": "rewardsByProtocol",
              "astId": 8276,
              "type": "t_mapping<t_struct<RewardDistributions.UserProtocolRewards>>",
              "src": "1580:57:70"
            }
          ]
        },
        "t_struct<RewardDistributions.UserProtocolRewards>": {
          "id": "t_struct<RewardDistributions.UserProtocolRewards>",
          "kind": "struct",
          "label": "RewardDistributions.UserProtocolRewards",
          "members": [
            {
              "label": "amounts",
              "astId": 8265,
              "type": "t_mapping<t_uint256>",
              "src": "1286:33:70"
            }
          ]
        },
        "t_mapping<t_struct<RewardDistributions.UserProtocolRewards>>": {
          "id": "t_mapping<t_struct<RewardDistributions.UserProtocolRewards>>",
          "valueType": "t_struct<RewardDistributions.UserProtocolRewards>",
          "label": "mapping(key => RewardDistributions.UserProtocolRewards)",
          "kind": "mapping"
        },
        "t_mapping<t_struct<RewardDistributions.RewardBalance>>": {
          "id": "t_mapping<t_struct<RewardDistributions.RewardBalance>>",
          "valueType": "t_struct<RewardDistributions.RewardBalance>",
          "label": "mapping(key => RewardDistributions.RewardBalance)",
          "kind": "mapping"
        },
        "t_struct<Roles.Role>": {
          "id": "t_struct<Roles.Role>",
          "kind": "struct",
          "label": "Roles.Role",
          "members": [
            {
              "label": "bearer",
              "astId": 18942,
              "type": "t_mapping<t_bool>",
              "src": "150:32:90"
            }
          ]
        },
        "t_mapping<t_bool>": {
          "id": "t_mapping<t_bool>",
          "valueType": "t_bool",
          "label": "mapping(key => bool)",
          "kind": "mapping"
        },
        "t_struct<SavingsModule.TokenData>": {
          "id": "t_struct<SavingsModule.TokenData>",
          "kind": "struct",
          "label": "SavingsModule.TokenData",
          "members": [
            {
              "label": "decimals",
              "astId": 9327,
              "type": "t_uint8",
              "src": "2368:14:71"
            }
          ]
        },
        "t_uint8": {
          "id": "t_uint8",
          "kind": "elementary",
          "label": "uint8"
        },
        "t_mapping<t_struct<SavingsModule.TokenData>>": {
          "id": "t_mapping<t_struct<SavingsModule.TokenData>>",
          "valueType": "t_struct<SavingsModule.TokenData>",
          "label": "mapping(key => SavingsModule.TokenData)",
          "kind": "mapping"
        },
        "t_struct<SavingsModule.ProtocolInfo>": {
          "id": "t_struct<SavingsModule.ProtocolInfo>",
          "kind": "struct",
          "label": "SavingsModule.ProtocolInfo",
          "members": [
            {
              "label": "poolToken",
              "astId": 9307,
              "type": "t_address",
              "src": "1936:19:71"
            },
            {
              "label": "previousBalance",
              "astId": 9309,
              "type": "t_uint256",
              "src": "1965:23:71"
            },
            {
              "label": "lastRewardDistribution",
              "astId": 9311,
              "type": "t_uint256",
              "src": "1998:30:71"
            },
            {
              "label": "supportedRewardTokens",
              "astId": 9314,
              "type": "t_array:dyn<t_address>",
              "src": "2038:31:71"
            },
            {
              "label": "userCap",
              "astId": 9318,
              "type": "t_mapping<t_uint256>",
              "src": "2079:35:71"
            },
            {
              "label": "withdrawAllSlippage",
              "astId": 9320,
              "type": "t_uint256",
              "src": "2193:27:71"
            },
            {
              "label": "isVipUser",
              "astId": 9324,
              "type": "t_mapping<t_bool>",
              "src": "2289:32:71"
            }
          ]
        },
        "t_mapping<t_struct<SavingsModule.ProtocolInfo>>": {
          "id": "t_mapping<t_struct<SavingsModule.ProtocolInfo>>",
          "valueType": "t_struct<SavingsModule.ProtocolInfo>",
          "label": "mapping(key => SavingsModule.ProtocolInfo)",
          "kind": "mapping"
        },
        "t_mapping<t_address>": {
          "id": "t_mapping<t_address>",
          "valueType": "t_address",
          "label": "mapping(key => address)",
          "kind": "mapping"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initialized",
          "astId": 21012,
          "type": "t_bool",
          "src": "757:24:107"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initializing",
          "astId": 21014,
          "type": "t_bool",
          "src": "876:25:107"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "______gap",
          "astId": 21076,
          "type": "t_array:50<t_uint256>",
          "src": "1982:29:107"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "_owner",
          "astId": 19945,
          "type": "t_address",
          "src": "526:22:98"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "______gap",
          "astId": 20058,
          "type": "t_array:50<t_uint256>",
          "src": "2471:29:98"
        },
        {
          "contract": "Module",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\common\\Module.sol",
          "label": "pool",
          "astId": 43,
          "type": "t_address",
          "src": "214:19:1"
        },
        {
          "contract": "RewardDistributions",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\savings\\RewardDistributions.sol",
          "label": "rewardDistributions",
          "astId": 8280,
          "type": "t_array:dyn<t_struct<RewardDistributions.RewardTokenDistribution>>",
          "src": "1735:45:70"
        },
        {
          "contract": "RewardDistributions",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\savings\\RewardDistributions.sol",
          "label": "rewardBalances",
          "astId": 8284,
          "type": "t_mapping<t_struct<RewardDistributions.RewardBalance>>",
          "src": "1786:46:70"
        },
        {
          "contract": "CapperRole",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\CapperRole.sol",
          "label": "_cappers",
          "astId": 19039,
          "type": "t_struct<Roles.Role>",
          "src": "327:27:91"
        },
        {
          "contract": "CapperRole",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\CapperRole.sol",
          "label": "______gap",
          "astId": 19139,
          "type": "t_array:50<t_uint256>",
          "src": "1193:29:91"
        },
        {
          "contract": "SavingsModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\savings\\SavingsModule.sol",
          "label": "registeredTokens",
          "astId": 9331,
          "type": "t_array:dyn<t_address>",
          "src": "2395:26:71"
        },
        {
          "contract": "SavingsModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\savings\\SavingsModule.sol",
          "label": "registeredProtocols",
          "astId": 9334,
          "type": "t_array:dyn<t_address>",
          "src": "2427:35:71"
        },
        {
          "contract": "SavingsModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\savings\\SavingsModule.sol",
          "label": "registeredRewardTokens",
          "astId": 9337,
          "type": "t_array:dyn<t_address>",
          "src": "2468:32:71"
        },
        {
          "contract": "SavingsModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\savings\\SavingsModule.sol",
          "label": "tokens",
          "astId": 9341,
          "type": "t_mapping<t_struct<SavingsModule.TokenData>>",
          "src": "2506:36:71"
        },
        {
          "contract": "SavingsModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\savings\\SavingsModule.sol",
          "label": "protocols",
          "astId": 9345,
          "type": "t_mapping<t_struct<SavingsModule.ProtocolInfo>>",
          "src": "2548:42:71"
        },
        {
          "contract": "SavingsModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\savings\\SavingsModule.sol",
          "label": "poolTokenToProtocol",
          "astId": 9349,
          "type": "t_mapping<t_address>",
          "src": "2672:47:71"
        },
        {
          "contract": "SavingsModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\savings\\SavingsModule.sol",
          "label": "rewardTokenRegistered",
          "astId": 9353,
          "type": "t_mapping<t_bool>",
          "src": "2766:54:71"
        },
        {
          "contract": "SavingsModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\savings\\SavingsModule.sol",
          "label": "userCapEnabled",
          "astId": 9355,
          "type": "t_bool",
          "src": "2863:26:71"
        },
        {
          "contract": "SavingsModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\savings\\SavingsModule.sol",
          "label": "protocolCapEnabled",
          "astId": 9357,
          "type": "t_bool",
          "src": "2895:30:71"
        },
        {
          "contract": "SavingsModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\savings\\SavingsModule.sol",
          "label": "defaultUserCap",
          "astId": 9361,
          "type": "t_mapping<t_uint256>",
          "src": "2931:47:71"
        },
        {
          "contract": "SavingsModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\savings\\SavingsModule.sol",
          "label": "protocolCap",
          "astId": 9365,
          "type": "t_mapping<t_uint256>",
          "src": "2984:44:71"
        },
        {
          "contract": "SavingsModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\savings\\SavingsModule.sol",
          "label": "vipUserEnabled",
          "astId": 9367,
          "type": "t_bool",
          "src": "3034:26:71"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": [],
        "storageUncheckedVars": [
          {
            "contract": "RewardDistributions",
            "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\savings\\RewardDistributions.sol",
            "label": "rewardDistributions",
            "astId": 8280,
            "type": "t_array:dyn<t_struct<RewardDistributions.RewardTokenDistribution>>",
            "src": "1735:45:70"
          },
          {
            "contract": "RewardDistributions",
            "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\savings\\RewardDistributions.sol",
            "label": "rewardBalances",
            "astId": 8284,
            "type": "t_mapping<t_struct<RewardDistributions.RewardBalance>>",
            "src": "1786:46:70"
          },
          {
            "contract": "CapperRole",
            "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\CapperRole.sol",
            "label": "_cappers",
            "astId": 19039,
            "type": "t_struct<Roles.Role>",
            "src": "327:27:91"
          },
          {
            "contract": "SavingsModule",
            "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\savings\\SavingsModule.sol",
            "label": "tokens",
            "astId": 9341,
            "type": "t_mapping<t_struct<SavingsModule.TokenData>>",
            "src": "2506:36:71"
          },
          {
            "contract": "SavingsModule",
            "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\savings\\SavingsModule.sol",
            "label": "protocols",
            "astId": 9345,
            "type": "t_mapping<t_struct<SavingsModule.ProtocolInfo>>",
            "src": "2548:42:71"
          }
        ],
        "storageDiff": []
      }
    },
    "RewardVestingModule": {
      "address": "0x2F87FBE31130bed3709af7D03bCf4abf47dAba3D",
      "constructorCode": "6080604052612664806100136000396000f3fe",
      "bodyBytecodeHash": "8bf08ef70d7979d079b38e228a20792c2b94369d48b9589ac7c553c8db6e6ce4",
      "localBytecodeHash": "4185cd16c65b96097ba5bfc9ebbdcedd15b2483812040150847ebc3a24d929b2",
      "deployedBytecodeHash": "4185cd16c65b96097ba5bfc9ebbdcedd15b2483812040150847ebc3a24d929b2",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_struct<Roles.Role>": {
          "id": "t_struct<Roles.Role>",
          "kind": "struct",
          "label": "Roles.Role",
          "members": [
            {
              "label": "bearer",
              "astId": 20669,
              "type": "t_mapping<t_bool>",
              "src": "150:32:94"
            }
          ]
        },
        "t_mapping<t_bool>": {
          "id": "t_mapping<t_bool>",
          "valueType": "t_bool",
          "label": "mapping(key => bool)",
          "kind": "mapping"
        },
        "t_struct<RewardVestingModule.ProtocolRewards>": {
          "id": "t_struct<RewardVestingModule.ProtocolRewards>",
          "kind": "struct",
          "label": "RewardVestingModule.ProtocolRewards",
          "members": [
            {
              "label": "tokens",
              "astId": 9052,
              "type": "t_array:dyn<t_address>",
              "src": "1111:16:73"
            },
            {
              "label": "rewardInfo",
              "astId": 9056,
              "type": "t_mapping<t_struct<RewardVestingModule.RewardInfo>>",
              "src": "1137:39:73"
            }
          ]
        },
        "t_array:dyn<t_address>": {
          "id": "t_array:dyn<t_address>",
          "valueType": "t_address",
          "length": "dyn",
          "kind": "array",
          "label": "address[]"
        },
        "t_struct<RewardVestingModule.RewardInfo>": {
          "id": "t_struct<RewardVestingModule.RewardInfo>",
          "kind": "struct",
          "label": "RewardVestingModule.RewardInfo",
          "members": [
            {
              "label": "epochs",
              "astId": 9046,
              "type": "t_array:dyn<t_struct<RewardVestingModule.Epoch>>",
              "src": "997:14:73"
            },
            {
              "label": "lastClaim",
              "astId": 9048,
              "type": "t_uint256",
              "src": "1021:17:73"
            }
          ]
        },
        "t_struct<RewardVestingModule.Epoch>": {
          "id": "t_struct<RewardVestingModule.Epoch>",
          "kind": "struct",
          "label": "RewardVestingModule.Epoch",
          "members": [
            {
              "label": "end",
              "astId": 9040,
              "type": "t_uint256",
              "src": "826:11:73"
            },
            {
              "label": "amount",
              "astId": 9042,
              "type": "t_uint256",
              "src": "880:14:73"
            }
          ]
        },
        "t_array:dyn<t_struct<RewardVestingModule.Epoch>>": {
          "id": "t_array:dyn<t_struct<RewardVestingModule.Epoch>>",
          "valueType": "t_struct<RewardVestingModule.Epoch>",
          "length": "dyn",
          "kind": "array",
          "label": "RewardVestingModule.Epoch[]"
        },
        "t_mapping<t_struct<RewardVestingModule.RewardInfo>>": {
          "id": "t_mapping<t_struct<RewardVestingModule.RewardInfo>>",
          "valueType": "t_struct<RewardVestingModule.RewardInfo>",
          "label": "mapping(key => RewardVestingModule.RewardInfo)",
          "kind": "mapping"
        },
        "t_mapping<t_struct<RewardVestingModule.ProtocolRewards>>": {
          "id": "t_mapping<t_struct<RewardVestingModule.ProtocolRewards>>",
          "valueType": "t_struct<RewardVestingModule.ProtocolRewards>",
          "label": "mapping(key => RewardVestingModule.ProtocolRewards)",
          "kind": "mapping"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initialized",
          "astId": 22739,
          "type": "t_bool",
          "src": "757:24:111"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initializing",
          "astId": 22741,
          "type": "t_bool",
          "src": "876:25:111"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "______gap",
          "astId": 22803,
          "type": "t_array:50<t_uint256>",
          "src": "1982:29:111"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "_owner",
          "astId": 21672,
          "type": "t_address",
          "src": "526:22:102"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "______gap",
          "astId": 21785,
          "type": "t_array:50<t_uint256>",
          "src": "2471:29:102"
        },
        {
          "contract": "Module",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\common\\Module.sol",
          "label": "pool",
          "astId": 43,
          "type": "t_address",
          "src": "214:19:1"
        },
        {
          "contract": "RewardManagerRole",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\reward\\RewardManagerRole.sol",
          "label": "_managers",
          "astId": 8896,
          "type": "t_struct<Roles.Role>",
          "src": "448:28:72"
        },
        {
          "contract": "RewardVestingModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\reward\\RewardVestingModule.sol",
          "label": "rewards",
          "astId": 9061,
          "type": "t_mapping<t_struct<RewardVestingModule.ProtocolRewards>>",
          "src": "1189:52:73"
        },
        {
          "contract": "RewardVestingModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\reward\\RewardVestingModule.sol",
          "label": "defaultEpochLength",
          "astId": 9063,
          "type": "t_uint256",
          "src": "1247:33:73"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": []
      }
    },
    "CurveFiProtocol_renBTC": {
      "address": "0x5d4c6a60D80bad2Bad174AB4da5d7E5A2097D6cC",
      "constructorCode": "60806040526143d9806100136000396000f3fe",
      "bodyBytecodeHash": "23e87c4d07c6186f7d669880784db5b102742fd98fa46ad9209a04c0313aec14",
      "localBytecodeHash": "fd4d02310890d5df4ba700c6d1dd26fba97687fa53037ecd27b7db9fad64667f",
      "deployedBytecodeHash": "fd4d02310890d5df4ba700c6d1dd26fba97687fa53037ecd27b7db9fad64667f",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_struct<Roles.Role>": {
          "id": "t_struct<Roles.Role>",
          "kind": "struct",
          "label": "Roles.Role",
          "members": [
            {
              "label": "bearer",
              "astId": 20669,
              "type": "t_mapping<t_bool>",
              "src": "150:32:94"
            }
          ]
        },
        "t_mapping<t_bool>": {
          "id": "t_mapping<t_bool>",
          "valueType": "t_bool",
          "label": "mapping(key => bool)",
          "kind": "mapping"
        },
        "t_mapping<t_uint256>": {
          "id": "t_mapping<t_uint256>",
          "valueType": "t_uint256",
          "label": "mapping(key => uint256)",
          "kind": "mapping"
        },
        "t_array:dyn<t_address>": {
          "id": "t_array:dyn<t_address>",
          "valueType": "t_address",
          "length": "dyn",
          "kind": "array",
          "label": "address[]"
        },
        "t_uint8": {
          "id": "t_uint8",
          "kind": "elementary",
          "label": "uint8"
        },
        "t_mapping<t_uint8>": {
          "id": "t_mapping<t_uint8>",
          "valueType": "t_uint8",
          "label": "mapping(key => uint8)",
          "kind": "mapping"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initialized",
          "astId": 22739,
          "type": "t_bool",
          "src": "757:24:111"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initializing",
          "astId": 22741,
          "type": "t_bool",
          "src": "876:25:111"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "______gap",
          "astId": 22803,
          "type": "t_array:50<t_uint256>",
          "src": "1982:29:111"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "_owner",
          "astId": 21672,
          "type": "t_address",
          "src": "526:22:102"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "______gap",
          "astId": 21785,
          "type": "t_array:50<t_uint256>",
          "src": "2471:29:102"
        },
        {
          "contract": "Module",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\common\\Module.sol",
          "label": "pool",
          "astId": 43,
          "type": "t_address",
          "src": "214:19:1"
        },
        {
          "contract": "DefiOperatorRole",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\DefiOperatorRole.sol",
          "label": "_operators",
          "astId": 7728,
          "type": "t_struct<Roles.Role>",
          "src": "445:29:69"
        },
        {
          "contract": "ProtocolBase",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\ProtocolBase.sol",
          "label": "rewardBalances",
          "astId": 7865,
          "type": "t_mapping<t_uint256>",
          "src": "877:47:70"
        },
        {
          "contract": "CurveFiProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol.sol",
          "label": "curveFiSwap",
          "astId": 4794,
          "type": "t_address",
          "src": "1301:31:61"
        },
        {
          "contract": "CurveFiProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol.sol",
          "label": "curveFiDeposit",
          "astId": 4796,
          "type": "t_address",
          "src": "1338:37:61"
        },
        {
          "contract": "CurveFiProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol.sol",
          "label": "curveFiLPGauge",
          "astId": 4798,
          "type": "t_address",
          "src": "1381:44:61"
        },
        {
          "contract": "CurveFiProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol.sol",
          "label": "curveFiMinter",
          "astId": 4800,
          "type": "t_address",
          "src": "1431:35:61"
        },
        {
          "contract": "CurveFiProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol.sol",
          "label": "curveFiToken",
          "astId": 4802,
          "type": "t_address",
          "src": "1472:26:61"
        },
        {
          "contract": "CurveFiProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol.sol",
          "label": "crvToken",
          "astId": 4804,
          "type": "t_address",
          "src": "1504:23:61"
        },
        {
          "contract": "CurveFiProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol.sol",
          "label": "_registeredTokens",
          "astId": 4807,
          "type": "t_array:dyn<t_address>",
          "src": "1533:36:61"
        },
        {
          "contract": "CurveFiProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol.sol",
          "label": "slippageMultiplier",
          "astId": 4809,
          "type": "t_uint256",
          "src": "1575:33:61"
        },
        {
          "contract": "CurveFiProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol.sol",
          "label": "decimals",
          "astId": 4813,
          "type": "t_mapping<t_uint8>",
          "src": "1685:41:61"
        },
        {
          "contract": "CurveFiProtocol",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol.sol",
          "label": "______gap",
          "astId": 6158,
          "type": "t_array:50<t_uint256>",
          "src": "13529:29:61"
        },
        {
          "contract": "CurveFiProtocol_renBTC",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\defi\\CurveFiProtocol_renBTC.sol",
          "label": "balRewardToken",
          "astId": 7338,
          "type": "t_address",
          "src": "370:22:68"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": []
      }
    },
    "PoolToken_CurveFi_renBTC": {
      "address": "0xa0472aE3158c9ece329cE2324D0AA73db1D8639A",
      "constructorCode": "608060405261342d806100136000396000f3fe",
      "bodyBytecodeHash": "828725094a0758ed6e890f5becf160701f7d6555991861055e4bc93f329c61c3",
      "localBytecodeHash": "b3aaa4817d94d07ddbc80cc6addea17c567a6903bfead73dee7ea574a1defbb5",
      "deployedBytecodeHash": "b3aaa4817d94d07ddbc80cc6addea17c567a6903bfead73dee7ea574a1defbb5",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_mapping<t_uint256>": {
          "id": "t_mapping<t_uint256>",
          "valueType": "t_uint256",
          "label": "mapping(key => uint256)",
          "kind": "mapping"
        },
        "t_string": {
          "id": "t_string",
          "kind": "elementary",
          "label": "string"
        },
        "t_uint8": {
          "id": "t_uint8",
          "kind": "elementary",
          "label": "uint8"
        },
        "t_struct<Roles.Role>": {
          "id": "t_struct<Roles.Role>",
          "kind": "struct",
          "label": "Roles.Role",
          "members": [
            {
              "label": "bearer",
              "astId": 20669,
              "type": "t_mapping<t_bool>",
              "src": "150:32:94"
            }
          ]
        },
        "t_mapping<t_bool>": {
          "id": "t_mapping<t_bool>",
          "valueType": "t_bool",
          "label": "mapping(key => bool)",
          "kind": "mapping"
        },
        "t_struct<DistributionToken.Distribution>": {
          "id": "t_struct<DistributionToken.Distribution>",
          "kind": "struct",
          "label": "DistributionToken.Distribution",
          "members": [
            {
              "label": "amount",
              "astId": 14656,
              "type": "t_uint256",
              "src": "745:14:80"
            },
            {
              "label": "totalSupply",
              "astId": 14658,
              "type": "t_uint256",
              "src": "832:19:80"
            }
          ]
        },
        "t_array:dyn<t_struct<DistributionToken.Distribution>>": {
          "id": "t_array:dyn<t_struct<DistributionToken.Distribution>>",
          "valueType": "t_struct<DistributionToken.Distribution>",
          "length": "dyn",
          "kind": "array",
          "label": "DistributionToken.Distribution[]"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initialized",
          "astId": 22739,
          "type": "t_bool",
          "src": "757:24:111"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initializing",
          "astId": 22741,
          "type": "t_bool",
          "src": "876:25:111"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "______gap",
          "astId": 22803,
          "type": "t_array:50<t_uint256>",
          "src": "1982:29:111"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "_owner",
          "astId": 21672,
          "type": "t_address",
          "src": "526:22:102"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "______gap",
          "astId": 21785,
          "type": "t_array:50<t_uint256>",
          "src": "2471:29:102"
        },
        {
          "contract": "Module",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\common\\Module.sol",
          "label": "pool",
          "astId": 43,
          "type": "t_address",
          "src": "214:19:1"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol",
          "label": "_balances",
          "astId": 21805,
          "type": "t_mapping<t_uint256>",
          "src": "1418:46:103"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol",
          "label": "_allowances",
          "astId": 21811,
          "type": "t_mapping<t_uint256>",
          "src": "1471:69:103"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol",
          "label": "_totalSupply",
          "astId": 21813,
          "type": "t_uint256",
          "src": "1547:28:103"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol",
          "label": "______gap",
          "astId": 22197,
          "type": "t_array:50<t_uint256>",
          "src": "8172:29:103"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Detailed.sol",
          "label": "_name",
          "astId": 22249,
          "type": "t_string",
          "src": "224:20:105"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Detailed.sol",
          "label": "_symbol",
          "astId": 22251,
          "type": "t_string",
          "src": "250:22:105"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Detailed.sol",
          "label": "_decimals",
          "astId": 22253,
          "type": "t_uint8",
          "src": "278:23:105"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Detailed.sol",
          "label": "______gap",
          "astId": 22305,
          "type": "t_array:50<t_uint256>",
          "src": "1654:29:105"
        },
        {
          "contract": "MinterRole",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\MinterRole.sol",
          "label": "_minters",
          "astId": 20889,
          "type": "t_struct<Roles.Role>",
          "src": "327:27:96"
        },
        {
          "contract": "MinterRole",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\MinterRole.sol",
          "label": "______gap",
          "astId": 20989,
          "type": "t_array:50<t_uint256>",
          "src": "1193:29:96"
        },
        {
          "contract": "ERC20Mintable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Mintable.sol",
          "label": "______gap",
          "astId": 22354,
          "type": "t_array:50<t_uint256>",
          "src": "831:29:106"
        },
        {
          "contract": "ERC20Burnable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Burnable.sol",
          "label": "______gap",
          "astId": 22238,
          "type": "t_array:50<t_uint256>",
          "src": "761:29:104"
        },
        {
          "contract": "DistributionToken",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\token\\DistributionToken.sol",
          "label": "distributions",
          "astId": 14662,
          "type": "t_array:dyn<t_struct<DistributionToken.Distribution>>",
          "src": "903:35:80"
        },
        {
          "contract": "DistributionToken",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\token\\DistributionToken.sol",
          "label": "nextDistributions",
          "astId": 14666,
          "type": "t_mapping<t_uint256>",
          "src": "992:52:80"
        },
        {
          "contract": "DistributionToken",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\token\\DistributionToken.sol",
          "label": "nextDistributionTimestamp",
          "astId": 14668,
          "type": "t_uint256",
          "src": "1107:40:80"
        },
        {
          "contract": "DistributionToken",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\token\\DistributionToken.sol",
          "label": "distributionAccumulator",
          "astId": 14670,
          "type": "t_uint256",
          "src": "1242:38:80"
        },
        {
          "contract": "PoolToken",
          "path": "..\\..\\..\\D\\projects\\akropolis\\savings-pool\\contracts\\modules\\token\\PoolToken.sol",
          "label": "allowTransfers",
          "astId": 15362,
          "type": "t_bool",
          "src": "628:19:81"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": []
      }
    }
  },
  "solidityLibs": {},
  "proxies": {
    "akropolis-savings-pool/Pool": [
      {
        "address": "0x4C39b37f5F20a0695BFDC59cf10bd85a6c4B7c30",
        "version": "1.0.0",
        "implementation": "0xd9f4F9b14A230a982acC1814402Fc37144e96Bbe",
        "admin": "0x8f608BCB8971cD7D3073C417A28DbD156d772402",
        "kind": "Upgradeable"
      }
    ],
    "akropolis-savings-pool/AccessModule": [
      {
        "address": "0x5fFcf7da7BdC49CA8A2E7a542BD59dC38228Dd45",
        "version": "1.0.0",
        "implementation": "0x35233753A7d304460D59d4F7a23e5fE0C492E8F6",
        "admin": "0x8f608BCB8971cD7D3073C417A28DbD156d772402",
        "kind": "Upgradeable"
      }
    ],
    "akropolis-savings-pool/SavingsModule": [
      {
        "address": "0x73fC3038B4cD8FfD07482b92a52Ea806505e5748",
        "version": "1.0.0",
        "implementation": "0x4B2464D5FfaB717ab0Bd26E5E30cB432B47E1EEd",
        "admin": "0x8f608BCB8971cD7D3073C417A28DbD156d772402",
        "kind": "Upgradeable"
      }
    ],
    "akropolis-savings-pool/StakingPool": [
      {
        "address": "0x3501Ec11d205fa249f2C42f5470e137b529b35D0",
        "version": "1.0.0",
        "implementation": "0x68AEA07c99D571aa6C1681CD91f10BA73E0Ac6B3",
        "admin": "0x8f608BCB8971cD7D3073C417A28DbD156d772402",
        "kind": "Upgradeable"
      }
    ],
    "akropolis-savings-pool/ADEL": [
      {
        "address": "0x94d863173EE77439E4292284fF13fAD54b3BA182",
        "version": "1.0.0",
        "implementation": "0xdA6079123266C5dFc4024d488E72A7003d275E3B",
        "admin": "0x8f608BCB8971cD7D3073C417A28DbD156d772402",
        "kind": "Upgradeable"
      }
    ],
    "akropolis-savings-pool/CompoundProtocol_DAI": [
      {
        "address": "0x08DDB58D31C08242Cd444BB5B43F7d2C6bcA0396",
        "version": "1.0.0",
        "implementation": "0xFDce35FfC60769C7eC608107361fF453Da541E66",
        "admin": "0x8f608BCB8971cD7D3073C417A28DbD156d772402",
        "kind": "Upgradeable"
      }
    ],
    "akropolis-savings-pool/PoolToken_Compound_DAI": [
      {
        "address": "0x9Fca734Bb62C20D2cF654705b8fbf4F49FF5cC31",
        "version": "1.0.0",
        "implementation": "0x5DBE889702b9d3b787A3b5D9D17ad59bf121b805",
        "admin": "0x8f608BCB8971cD7D3073C417A28DbD156d772402",
        "kind": "Upgradeable"
      }
    ],
    "akropolis-savings-pool/CompoundProtocol_USDC": [
      {
        "address": "0x9984D588EF2112894a0513663ba815310D383E3c",
        "version": "1.0.0",
        "implementation": "0x07CB94E333322327BAE229DD089BE2c77630254C",
        "admin": "0x8f608BCB8971cD7D3073C417A28DbD156d772402",
        "kind": "Upgradeable"
      }
    ],
    "akropolis-savings-pool/PoolToken_Compound_USDC": [
      {
        "address": "0x5Ad76E93a3a852C9af760dA3FdB7983C265d8997",
        "version": "1.0.0",
        "implementation": "0xe782F3E4aaa419D5c043794dde32E6B46661A82B",
        "admin": "0x8f608BCB8971cD7D3073C417A28DbD156d772402",
        "kind": "Upgradeable"
      }
    ],
    "akropolis-savings-pool/CurveFiProtocol_SUSD": [
      {
        "address": "0x91d7b9a8d2314110D4018C88dBFDCF5E2ba4772E",
        "version": "1.0.0",
        "implementation": "0xd074A91B12DE6B44D56A98025efE4D5cd9b55719",
        "admin": "0x8f608BCB8971cD7D3073C417A28DbD156d772402",
        "kind": "Upgradeable"
      }
    ],
    "akropolis-savings-pool/PoolToken_CurveFi_SUSD": [
      {
        "address": "0x520d25b08080296db66fd9f268ae279b66a8effb",
        "version": "1.0.0",
        "implementation": "0x61227836eeb8320d74326eac5e9e85eed7837ee9",
        "admin": "0x8f608BCB8971cD7D3073C417A28DbD156d772402",
        "kind": "Upgradeable"
      }
    ],
    "akropolis-savings-pool/CurveFiProtocol_Y": [
      {
        "address": "0x7967adA2A32A633d5C055e2e075A83023B632B4e",
        "version": "1.0.0",
        "implementation": "0x8F032D3d8c6BD2268b410b9024a12D8dEb892C24",
        "admin": "0x8f608BCB8971cD7D3073C417A28DbD156d772402",
        "kind": "Upgradeable"
      }
    ],
    "akropolis-savings-pool/PoolToken_CurveFi_Y": [
      {
        "address": "0x2AFA3c8Bf33E65d5036cD0f1c3599716894B3077",
        "version": "1.0.0",
        "implementation": "0x7967adA2A32A633d5C055e2e075A83023B632B4e",
        "admin": "0x8f608BCB8971cD7D3073C417A28DbD156d772402",
        "kind": "Upgradeable"
      }
    ],
    "akropolis-savings-pool/CurveFiProtocol_BUSD": [
      {
        "address": "0xEaE1A8206F68a7ef629e85fc69E82CFD36E83BA4",
        "version": "1.0.0",
        "implementation": "0x6c8b098427D17c8afe8d9bD3c68D5999240c7ACa",
        "admin": "0x8f608BCB8971cD7D3073C417A28DbD156d772402",
        "kind": "Upgradeable"
      }
    ],
    "akropolis-savings-pool/CurveFiProtocol_SBTC": [
      {
        "address": "0xEEEf30D50a7c6676B260a26A5fBe13e45fD7b5A9",
        "version": "1.0.0",
        "implementation": "0xa46DDf8d1c3F9c7b594C25bBB7B500Eecb237781",
        "admin": "0x8f608BCB8971cD7D3073C417A28DbD156d772402",
        "kind": "Upgradeable"
      }
    ],
    "akropolis-savings-pool/PoolToken_CurveFi_SBTC": [
      {
        "address": "0x933082B3D21a6ED90ed7EcA470Fd424Df5D21BEf",
        "version": "1.0.0",
        "implementation": "0xB36574b390AFBcCC1Bc68Ed8c0E38b0Da489E067",
        "admin": "0x8f608BCB8971cD7D3073C417A28DbD156d772402",
        "kind": "Upgradeable"
      }
    ],
    "akropolis-savings-pool/PoolToken_CurveFi_BUSD": [
      {
        "address": "0x8367Af78444C5B57Bc1cF38dED331d03558e67Bb",
        "version": "1.0.0",
        "implementation": "0xc1b7a845e709df1958bc915990511db3e9742766",
        "admin": "0x8f608BCB8971cD7D3073C417A28DbD156d772402",
        "kind": "Upgradeable"
      }
    ],
    "akropolis-savings-pool/AaveProtocol_SUSD": [
      {
        "address": "0xBED50F08B8e68293bd7Db742c4207F2F6E520cD2",
        "version": "1.0.0",
        "implementation": "0xF44c76cBE178EA5c62dB7C0F81D347687672F220",
        "admin": "0x8f608BCB8971cD7D3073C417A28DbD156d772402",
        "kind": "Upgradeable"
      }
    ],
    "akropolis-savings-pool/PoolToken_Aave_SUSD": [
      {
        "address": "0x8E2317458878B9223904BdD95173EE96D46feC77",
        "version": "1.0.0",
        "implementation": "0x1f29d7dB5428fe4d65524925014fC34294429B50",
        "admin": "0x8f608BCB8971cD7D3073C417A28DbD156d772402",
        "kind": "Upgradeable"
      }
    ],
    "akropolis-savings-pool/AaveProtocol_BUSD": [
      {
        "address": "0x051E3A47724740d47042Edc71C0AE81A35fDEDE9",
        "version": "1.0.0",
        "implementation": "0xc7720164ed26f3f49540fd0d98feac94bbcf7823",
        "admin": "0x8f608BCB8971cD7D3073C417A28DbD156d772402",
        "kind": "Upgradeable"
      }
    ],
    "akropolis-savings-pool/PoolToken_Aave_BUSD": [
      {
        "address": "0xb62B6B192524F6b220a08f0D5D0EB748A8cbAA1b",
        "version": "1.0.0",
        "implementation": "0x340b6B614789DC6154Afd630882Fa672BAA24973",
        "admin": "0x8f608BCB8971cD7D3073C417A28DbD156d772402",
        "kind": "Upgradeable"
      }
    ],
    "akropolis-savings-pool/StakingPoolADEL": [
      {
        "address": "0x1A547c3dd03c39Fb2b5aEaFC524033879bD28F13",
        "version": "1.0.0",
        "implementation": "0x063E22147bcA7eA413327e2125F5F01DA537D48E",
        "admin": "0x8f608BCB8971cD7D3073C417A28DbD156d772402",
        "kind": "Upgradeable"
      }
    ],
    "akropolis-savings-pool/InvestingModule": [
      {
        "address": "0xF311b1258d0F245b85090e4Fb01f2277cB2328aD",
        "version": "1.0.0",
        "implementation": "0xf3F856Aa16a4F432Af352f18f3f59Ce66f5f3a48",
        "admin": "0x8f608BCB8971cD7D3073C417A28DbD156d772402",
        "kind": "Upgradeable"
      }
    ],
    "akropolis-savings-pool/RewardVestingModule": [
      {
        "address": "0x2A9dcb9d79Aba0CC64565A87c9d20D11D1f33a07",
        "version": "1.0.0",
        "implementation": "0x2F87FBE31130bed3709af7D03bCf4abf47dAba3D",
        "admin": "0x8f608BCB8971cD7D3073C417A28DbD156d772402",
        "kind": "Upgradeable"
      }
    ],
    "akropolis-savings-pool/CurveFiProtocol_renBTC": [
      {
        "address": "0x020439688aA784Baa55DfEDB4732E8229aC8Fb1b",
        "version": "1.0.0",
        "implementation": "0x5d4c6a60D80bad2Bad174AB4da5d7E5A2097D6cC",
        "admin": "0x8f608BCB8971cD7D3073C417A28DbD156d772402",
        "kind": "Upgradeable"
      }
    ],
    "akropolis-savings-pool/PoolToken_CurveFi_renBTC": [
      {
        "address": "0x321eb571778e46004Ec52FD399E097C17Fea9C9c",
        "version": "1.0.0",
        "implementation": "0xa0472aE3158c9ece329cE2324D0AA73db1D8639A",
        "admin": "0x8f608BCB8971cD7D3073C417A28DbD156d772402",
        "kind": "Upgradeable"
      }
    ]
  },
  "manifestVersion": "2.2",
  "version": "1.0.0",
  "proxyAdmin": {
    "address": "0x8f608BCB8971cD7D3073C417A28DbD156d772402"
  }
}
