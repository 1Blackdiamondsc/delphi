{
  "contractName": "ERC721Full",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This implementation includes all the required and some optional functionality of the ERC721 standard Moreover, it includes approve all functionality using operator terminology. * See https://eips.ethereum.org/EIPS/eip-721\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"baseURI()\":{\"details\":\"Returns the base URI set via {_setBaseURI}. This will be automatically added as a preffix in {tokenURI} to each token's URI, when they are non-empty.    * _Available since v2.5.0._\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"initialize()\":{\"details\":\"Constructor function.\"},\"initialize(string,string)\":{\"details\":\"Constructor function\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"name()\":{\"details\":\"Gets the token name.\",\"return\":\"string representing the token name\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"return\":\"string representing the token symbol\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"tokenURI(uint256)\":{\"details\":\"Returns the URI for a given token ID. May return an empty string.     * If the token's URI is non-empty and a base URI was set (via {_setBaseURI}), it will be added to the token ID's URI as a prefix.     * Reverts if the token ID does not exist.\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract.\",\"return\":\"uint256 representing the total amount of tokens\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}}},\"title\":\"Full ERC721 Token\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Full.sol\":\"ERC721Full\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":{\"keccak256\":\"0x3491510fa4862af1a43f6c860d9cf7392240196540cd3c0eea79d374d419c5a1\",\"urls\":[\"bzz-raw://3e51386d74eb723d3acaaddafce1dd0b4082ad4c10ddba6b9fc154aad2930d02\",\"dweb:/ipfs/QmcA8Huap1c7YjdVjx5TGasxKNMLgsa3XyLvQUaMa1nMt8\"]},\"@openzeppelin/contracts-ethereum-package/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5be8533c5950173dc2b77b75108fae6e6c5449aedadde3385ba457394aad2384\",\"urls\":[\"bzz-raw://d429fb04f5b31d909dc759d0f88e28055b80b4dd43e5def4dffc947fa0609229\",\"dweb:/ipfs/QmaY9idX5CwLLtjjTQAdiiaDSrncgafkatUZXTbbajpz8b\"]},\"@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0x77dba70b279e47f7f6941b433a26ba51b8484b557d250d3a78075ecea5a9b01d\",\"urls\":[\"bzz-raw://946383a175d8b051ab44a6a6001b09ad09403aae6af0280d9532f1fde557ba7f\",\"dweb:/ipfs/QmeTQrn4DJWnZyf7v3FRGfP7CLzESNNtFAsDDhakWH2zfp\"]},\"@openzeppelin/contracts-ethereum-package/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xe0ed10f53955c35eecb02724538650a155aa940be3f0a54cd3bde6c6b0c6e48c\",\"urls\":[\"bzz-raw://7dcfda88e3225987245908c3296f3559752647036804325ebfaa9fd1545161c3\",\"dweb:/ipfs/QmXxx5rHfLL57zdgyyyG9MMv4XGN7bpVSc2MuDcaCgto6u\"]},\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x85a33ccd7456c0e6ff481e9e307871bdeb62faf586dcdb7a45af12b54bc6781c\",\"urls\":[\"bzz-raw://8bc02bbffd7e9620e7412f73484ae33f186fdf9956b5b6d59dcfa5bdf98b0a7a\",\"dweb:/ipfs/QmbfGnTzEt45Qajpg9U8jEAnz8gnyqVQByjw72PatcUQpD\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Enumerable.sol\":{\"keccak256\":\"0x46b471beac241540af38bf756c5c15b1662ede1c6826bdbda1865daa975e17e2\",\"urls\":[\"bzz-raw://284575184b15dc9e8f2d5b5fe0af433348ab272f35715d63b78e9824e735f200\",\"dweb:/ipfs/QmfRwqexUjB4bBtmxsYBQa631jLAVPBgjoXUcGRrh3d7iA\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Full.sol\":{\"keccak256\":\"0xab7e889faecf8ec36150e7a3837819cb30c46a46f53eaac72ac1f8e1d824d150\",\"urls\":[\"bzz-raw://b2e7ae9ad2df0fd4d1916d8c5af0f9df214a8986ad7fa49cf656affbd5778cf5\",\"dweb:/ipfs/QmXScSEGENRaqaq95SqtQUDG1UXNi58fB8USMRM5HqwMqb\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Metadata.sol\":{\"keccak256\":\"0xd784ed0d69d9e1ed7de89c33295d6e354619902dd6bf7324635b9daa23fb2d43\",\"urls\":[\"bzz-raw://18b5a41fbd2d4fb65618dcdb64823043a9b040d8a489fb101483f90e178bcc11\",\"dweb:/ipfs/QmdTW12VL7wQg2ip1cYLMLUb48zhWTv7Wj6yUhQB85yrVQ\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x3481053b3fbcb2cc24d40f208f1d65a1381febbed382eaba0f6ef7ce2296dac0\",\"urls\":[\"bzz-raw://9a44cef44872a5051402b8a3e00c18c4b36f75c8394c11b71e78abdb81ffe8ca\",\"dweb:/ipfs/QmYnuiJaRrBpPbC2YnQbK8MwDVtY68dpY18ir1GZeBZrh5\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x6a3efb9d8c3c6467f308592675407fceae553543d90c287d4f7370b7c2638774\",\"urls\":[\"bzz-raw://5f003d160f9b7a296d724fd58e3ef545dab049536d089d0e5af4c9984db55a7e\",\"dweb:/ipfs/QmaZHGFYVa89vvjHq7uxQhg3P5vaAhY323VYEpuuma4us2\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xf83b0e3cfc9d22e6ab413d8881a7e55384a9ebfd1d78ab8b9ce4f0cb6ee2fcf8\",\"urls\":[\"bzz-raw://e618ab3e1bb35d7f98c80213b5c0d563c3d47ecf9bf701b0cce3b1bcbefe815a\",\"dweb:/ipfs/QmeRYHm9BZ67gM4QCdrN3mecRAbVMrB3pRoo26jwoZWvdr\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzz-raw://d877a87c5e29b9ffca3e334378058c051a4e012fd3635039681003a9376baf1f\",\"dweb:/ipfs/QmR45snf93cFXtB71TZcmoGy9DbcMha8CqgkDKaLvhjXZK\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzz-raw://5cf7c208583d4d046d75bd99f5507412ab01cce9dd9f802ce9768a416d93ea2f\",\"dweb:/ipfs/QmcQS1BBMPpVEkXP3qzwSjxHNrqDek8YeR7xbVWDC9ApC7\"]}},\"version\":1}",
  "bytecode": "0x6080604052611edd806100136000396000f3fe608060405234801561001057600080fd5b50600436106101515760003560e01c80634f6ccce7116100cd57806395d89b4111610081578063b88d4fde11610066578063b88d4fde14610512578063c87b56dd146105d8578063e985e9c5146105f557610151565b806395d89b41146104dc578063a22cb465146104e457610151565b80636c0360eb116100b25780636c0360eb146104a657806370a08231146104ae5780638129fc1c146104d457610151565b80634f6ccce71461046c5780636352211e1461048957610151565b806318160ddd116101245780632f745c59116101095780632f745c59146102dd57806342842e0e146103095780634cd88b761461033f57610151565b806318160ddd1461028d57806323b872dd146102a757610151565b806301ffc9a71461015657806306fdde03146101a9578063081812fc14610226578063095ea7b31461025f575b600080fd5b6101956004803603602081101561016c57600080fd5b50357fffffffff0000000000000000000000000000000000000000000000000000000016610623565b604080519115158252519081900360200190f35b6101b161065e565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101eb5781810151838201526020016101d3565b50505050905090810190601f1680156102185780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102436004803603602081101561023c57600080fd5b5035610713565b604080516001600160a01b039092168252519081900360200190f35b61028b6004803603604081101561027557600080fd5b506001600160a01b038135169060200135610775565b005b6102956108b5565b60408051918252519081900360200190f35b61028b600480360360608110156102bd57600080fd5b506001600160a01b038135811691602081013590911690604001356108bb565b610295600480360360408110156102f357600080fd5b506001600160a01b038135169060200135610917565b61028b6004803603606081101561031f57600080fd5b506001600160a01b03813581169160208101359091169060400135610996565b61028b6004803603604081101561035557600080fd5b81019060208101813564010000000081111561037057600080fd5b82018360208201111561038257600080fd5b803590602001918460018302840111640100000000831117156103a457600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092959493602081019350359150506401000000008111156103f757600080fd5b82018360208201111561040957600080fd5b8035906020019184600183028401116401000000008311171561042b57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506109b1945050505050565b6102956004803603602081101561048257600080fd5b5035610b0e565b6102436004803603602081101561049f57600080fd5b5035610b74565b6101b1610bce565b610295600480360360208110156104c457600080fd5b50356001600160a01b0316610c4d565b61028b610cb5565b6101b1610de9565b61028b600480360360408110156104fa57600080fd5b506001600160a01b0381351690602001351515610e68565b61028b6004803603608081101561052857600080fd5b6001600160a01b0382358116926020810135909116916040820135919081019060808101606082013564010000000081111561056357600080fd5b82018360208201111561057557600080fd5b8035906020019184600183028401116401000000008311171561059757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610f8b945050505050565b6101b1600480360360208110156105ee57600080fd5b5035610fe9565b6101956004803603604081101561060b57600080fd5b506001600160a01b03813581169160200135166111f1565b7fffffffff00000000000000000000000000000000000000000000000000000000811660009081526033602052604090205460ff165b919050565b60d28054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107085780601f106106dd57610100808354040283529160200191610708565b820191906000526020600020905b8154815290600101906020018083116106eb57829003601f168201915b505050505090505b90565b600061071e8261121f565b6107595760405162461bcd60e51b815260040180806020018281038252602c815260200180611d79602c913960400191505060405180910390fd5b506000908152606760205260409020546001600160a01b031690565b600061078082610b74565b9050806001600160a01b0316836001600160a01b031614156107d35760405162461bcd60e51b8152600401808060200182810382526021815260200180611e2b6021913960400191505060405180910390fd5b806001600160a01b03166107e561123c565b6001600160a01b0316148061080657506108068161080161123c565b6111f1565b6108415760405162461bcd60e51b8152600401808060200182810382526038815260200180611cee6038913960400191505060405180910390fd5b60008281526067602052604080822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b609e5490565b6108cc6108c661123c565b82611240565b6109075760405162461bcd60e51b8152600401808060200182810382526031815260200180611e4c6031913960400191505060405180910390fd5b6109128383836112e4565b505050565b600061092283610c4d565b821061095f5760405162461bcd60e51b815260040180806020018281038252602b815260200180611c41602b913960400191505060405180910390fd5b6001600160a01b0383166000908152609c6020526040902080548390811061098357fe5b9060005260206000200154905092915050565b61091283838360405180602001604052806000815250610f8b565b600054610100900460ff16806109ca57506109ca611303565b806109d8575060005460ff16155b610a135760405162461bcd60e51b815260040180806020018281038252602e815260200180611da5602e913960400191505060405180910390fd5b600054610100900460ff16158015610a7957600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909116610100171660011790555b610a81611309565b610a8a57600080fd5b8251610a9d9060d2906020860190611b88565b508151610ab19060d3906020850190611b88565b50610adb7f5b5e139f00000000000000000000000000000000000000000000000000000000611339565b801561091257600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055505050565b6000610b186108b5565b8210610b555760405162461bcd60e51b815260040180806020018281038252602c815260200180611e7d602c913960400191505060405180910390fd5b609e8281548110610b6257fe5b90600052602060002001549050919050565b6000818152606660205260408120546001600160a01b031680610bc85760405162461bcd60e51b8152600401808060200182810382526029815260200180611d506029913960400191505060405180910390fd5b92915050565b60d58054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107085780601f106106dd57610100808354040283529160200191610708565b60006001600160a01b038216610c945760405162461bcd60e51b815260040180806020018281038252602a815260200180611d26602a913960400191505060405180910390fd5b6001600160a01b0382166000908152606860205260409020610bc89061140b565b600054610100900460ff1680610cce5750610cce611303565b80610cdc575060005460ff16155b610d175760405162461bcd60e51b815260040180806020018281038252602e815260200180611da5602e913960400191505060405180910390fd5b600054610100900460ff16158015610d7d57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909116610100171660011790555b610d85611309565b610d8e57600080fd5b610db77f780e9d6300000000000000000000000000000000000000000000000000000000611339565b8015610de657600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1690555b50565b60d38054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107085780601f106106dd57610100808354040283529160200191610708565b610e7061123c565b6001600160a01b0316826001600160a01b03161415610ed6576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b8060696000610ee361123c565b6001600160a01b0390811682526020808301939093526040918201600090812091871680825291909352912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001692151592909217909155610f4561123c565b60408051841515815290516001600160a01b0392909216917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319181900360200190a35050565b610f9c610f9661123c565b83611240565b610fd75760405162461bcd60e51b8152600401808060200182810382526031815260200180611e4c6031913960400191505060405180910390fd5b610fe38484848461140f565b50505050565b6060610ff48261121f565b61102f5760405162461bcd60e51b815260040180806020018281038252602f815260200180611dfc602f913960400191505060405180910390fd5b600082815260d4602090815260409182902080548351601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001861615020190931692909204918201849004840281018401909452808452606093928301828280156110e25780601f106110b7576101008083540402835291602001916110e2565b820191906000526020600020905b8154815290600101906020018083116110c557829003601f168201915b50505050509050805160001415611109575050604080516020810190915260008152610659565b60d581604051602001808380546001816001161561010002031660029004801561116a5780601f1061114857610100808354040283529182019161116a565b820191906000526020600020905b815481529060010190602001808311611156575b5050825160208401908083835b602083106111b457805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101611177565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052915050610659565b6001600160a01b03918216600090815260696020908152604080832093909416825291909152205460ff1690565b6000908152606660205260409020546001600160a01b0316151590565b3390565b600061124b8261121f565b6112865760405162461bcd60e51b815260040180806020018281038252602c815260200180611cc2602c913960400191505060405180910390fd5b600061129183610b74565b9050806001600160a01b0316846001600160a01b031614806112cc5750836001600160a01b03166112c184610713565b6001600160a01b0316145b806112dc57506112dc81856111f1565b949350505050565b6112ef838383611461565b6112f983826115bd565b61091282826116d0565b303b1590565b60006113347f80ac58cd00000000000000000000000000000000000000000000000000000000610623565b905090565b7fffffffff0000000000000000000000000000000000000000000000000000000080821614156113b0576040805162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b7fffffffff0000000000000000000000000000000000000000000000000000000016600090815260336020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b5490565b61141a8484846112e4565b6114268484848461170e565b610fe35760405162461bcd60e51b8152600401808060200182810382526032815260200180611c6c6032913960400191505060405180910390fd5b826001600160a01b031661147482610b74565b6001600160a01b0316146114b95760405162461bcd60e51b8152600401808060200182810382526029815260200180611dd36029913960400191505060405180910390fd5b6001600160a01b0382166114fe5760405162461bcd60e51b8152600401808060200182810382526024815260200180611c9e6024913960400191505060405180910390fd5b611507816119fc565b6001600160a01b038316600090815260686020526040902061152890611a4f565b6001600160a01b038216600090815260686020526040902061154990611a66565b60008181526066602052604080822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b0382166000908152609c60205260408120546115e790600163ffffffff611a6f16565b6000838152609d6020526040902054909150808214611682576001600160a01b0384166000908152609c6020526040812080548490811061162457fe5b9060005260206000200154905080609c6000876001600160a01b03166001600160a01b03168152602001908152602001600020838154811061166257fe5b6000918252602080832090910192909255918252609d9052604090208190555b6001600160a01b0384166000908152609c602052604090208054906116c9907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8301611c06565b5050505050565b6001600160a01b039091166000908152609c602081815260408084208054868652609d84529185208290559282526001810183559183529091200155565b6000611722846001600160a01b0316611ab8565b61172e575060016112dc565b600060606001600160a01b0386167f150b7a020000000000000000000000000000000000000000000000000000000061176561123c565b89888860405160240180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156117de5781810151838201526020016117c6565b50505050905090810190601f16801561180b5780820380516001836020036101000a031916815260200191505b50604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909a16999099178952518151919890975087965094509250829150849050835b602083106118dc57805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0909201916020918201910161189f565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461193e576040519150601f19603f3d011682016040523d82523d6000602084013e611943565b606091505b5091509150816119945780511561195d5780518082602001fd5b60405162461bcd60e51b8152600401808060200182810382526032815260200180611c6c6032913960400191505060405180910390fd5b60008180602001905160208110156119ab57600080fd5b50517fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a02000000000000000000000000000000000000000000000000000000001493506112dc92505050565b6000818152606760205260409020546001600160a01b031615610de657600090815260676020526040902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b8054611a6290600163ffffffff611a6f16565b9055565b80546001019055565b6000611ab183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611af1565b9392505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906112dc575050151592915050565b60008184841115611b805760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611b45578181015183820152602001611b2d565b50505050905090810190601f168015611b725780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611bc957805160ff1916838001178555611bf6565b82800160010185558215611bf6579182015b82811115611bf6578251825591602001919060010190611bdb565b50611c02929150611c26565b5090565b815481835581811115610912576000838152602090206109129181019083015b61071091905b80821115611c025760008155600101611c2c56fe455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a65644552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e6473a265627a7a72315820fa8101a956da30757f1a3f76bf22cc942a10eab62b7f4aa622edaf3b46e4ec1764736f6c63430005110032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101515760003560e01c80634f6ccce7116100cd57806395d89b4111610081578063b88d4fde11610066578063b88d4fde14610512578063c87b56dd146105d8578063e985e9c5146105f557610151565b806395d89b41146104dc578063a22cb465146104e457610151565b80636c0360eb116100b25780636c0360eb146104a657806370a08231146104ae5780638129fc1c146104d457610151565b80634f6ccce71461046c5780636352211e1461048957610151565b806318160ddd116101245780632f745c59116101095780632f745c59146102dd57806342842e0e146103095780634cd88b761461033f57610151565b806318160ddd1461028d57806323b872dd146102a757610151565b806301ffc9a71461015657806306fdde03146101a9578063081812fc14610226578063095ea7b31461025f575b600080fd5b6101956004803603602081101561016c57600080fd5b50357fffffffff0000000000000000000000000000000000000000000000000000000016610623565b604080519115158252519081900360200190f35b6101b161065e565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101eb5781810151838201526020016101d3565b50505050905090810190601f1680156102185780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102436004803603602081101561023c57600080fd5b5035610713565b604080516001600160a01b039092168252519081900360200190f35b61028b6004803603604081101561027557600080fd5b506001600160a01b038135169060200135610775565b005b6102956108b5565b60408051918252519081900360200190f35b61028b600480360360608110156102bd57600080fd5b506001600160a01b038135811691602081013590911690604001356108bb565b610295600480360360408110156102f357600080fd5b506001600160a01b038135169060200135610917565b61028b6004803603606081101561031f57600080fd5b506001600160a01b03813581169160208101359091169060400135610996565b61028b6004803603604081101561035557600080fd5b81019060208101813564010000000081111561037057600080fd5b82018360208201111561038257600080fd5b803590602001918460018302840111640100000000831117156103a457600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092959493602081019350359150506401000000008111156103f757600080fd5b82018360208201111561040957600080fd5b8035906020019184600183028401116401000000008311171561042b57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506109b1945050505050565b6102956004803603602081101561048257600080fd5b5035610b0e565b6102436004803603602081101561049f57600080fd5b5035610b74565b6101b1610bce565b610295600480360360208110156104c457600080fd5b50356001600160a01b0316610c4d565b61028b610cb5565b6101b1610de9565b61028b600480360360408110156104fa57600080fd5b506001600160a01b0381351690602001351515610e68565b61028b6004803603608081101561052857600080fd5b6001600160a01b0382358116926020810135909116916040820135919081019060808101606082013564010000000081111561056357600080fd5b82018360208201111561057557600080fd5b8035906020019184600183028401116401000000008311171561059757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610f8b945050505050565b6101b1600480360360208110156105ee57600080fd5b5035610fe9565b6101956004803603604081101561060b57600080fd5b506001600160a01b03813581169160200135166111f1565b7fffffffff00000000000000000000000000000000000000000000000000000000811660009081526033602052604090205460ff165b919050565b60d28054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107085780601f106106dd57610100808354040283529160200191610708565b820191906000526020600020905b8154815290600101906020018083116106eb57829003601f168201915b505050505090505b90565b600061071e8261121f565b6107595760405162461bcd60e51b815260040180806020018281038252602c815260200180611d79602c913960400191505060405180910390fd5b506000908152606760205260409020546001600160a01b031690565b600061078082610b74565b9050806001600160a01b0316836001600160a01b031614156107d35760405162461bcd60e51b8152600401808060200182810382526021815260200180611e2b6021913960400191505060405180910390fd5b806001600160a01b03166107e561123c565b6001600160a01b0316148061080657506108068161080161123c565b6111f1565b6108415760405162461bcd60e51b8152600401808060200182810382526038815260200180611cee6038913960400191505060405180910390fd5b60008281526067602052604080822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b609e5490565b6108cc6108c661123c565b82611240565b6109075760405162461bcd60e51b8152600401808060200182810382526031815260200180611e4c6031913960400191505060405180910390fd5b6109128383836112e4565b505050565b600061092283610c4d565b821061095f5760405162461bcd60e51b815260040180806020018281038252602b815260200180611c41602b913960400191505060405180910390fd5b6001600160a01b0383166000908152609c6020526040902080548390811061098357fe5b9060005260206000200154905092915050565b61091283838360405180602001604052806000815250610f8b565b600054610100900460ff16806109ca57506109ca611303565b806109d8575060005460ff16155b610a135760405162461bcd60e51b815260040180806020018281038252602e815260200180611da5602e913960400191505060405180910390fd5b600054610100900460ff16158015610a7957600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909116610100171660011790555b610a81611309565b610a8a57600080fd5b8251610a9d9060d2906020860190611b88565b508151610ab19060d3906020850190611b88565b50610adb7f5b5e139f00000000000000000000000000000000000000000000000000000000611339565b801561091257600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055505050565b6000610b186108b5565b8210610b555760405162461bcd60e51b815260040180806020018281038252602c815260200180611e7d602c913960400191505060405180910390fd5b609e8281548110610b6257fe5b90600052602060002001549050919050565b6000818152606660205260408120546001600160a01b031680610bc85760405162461bcd60e51b8152600401808060200182810382526029815260200180611d506029913960400191505060405180910390fd5b92915050565b60d58054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107085780601f106106dd57610100808354040283529160200191610708565b60006001600160a01b038216610c945760405162461bcd60e51b815260040180806020018281038252602a815260200180611d26602a913960400191505060405180910390fd5b6001600160a01b0382166000908152606860205260409020610bc89061140b565b600054610100900460ff1680610cce5750610cce611303565b80610cdc575060005460ff16155b610d175760405162461bcd60e51b815260040180806020018281038252602e815260200180611da5602e913960400191505060405180910390fd5b600054610100900460ff16158015610d7d57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909116610100171660011790555b610d85611309565b610d8e57600080fd5b610db77f780e9d6300000000000000000000000000000000000000000000000000000000611339565b8015610de657600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1690555b50565b60d38054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107085780601f106106dd57610100808354040283529160200191610708565b610e7061123c565b6001600160a01b0316826001600160a01b03161415610ed6576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b8060696000610ee361123c565b6001600160a01b0390811682526020808301939093526040918201600090812091871680825291909352912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001692151592909217909155610f4561123c565b60408051841515815290516001600160a01b0392909216917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319181900360200190a35050565b610f9c610f9661123c565b83611240565b610fd75760405162461bcd60e51b8152600401808060200182810382526031815260200180611e4c6031913960400191505060405180910390fd5b610fe38484848461140f565b50505050565b6060610ff48261121f565b61102f5760405162461bcd60e51b815260040180806020018281038252602f815260200180611dfc602f913960400191505060405180910390fd5b600082815260d4602090815260409182902080548351601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001861615020190931692909204918201849004840281018401909452808452606093928301828280156110e25780601f106110b7576101008083540402835291602001916110e2565b820191906000526020600020905b8154815290600101906020018083116110c557829003601f168201915b50505050509050805160001415611109575050604080516020810190915260008152610659565b60d581604051602001808380546001816001161561010002031660029004801561116a5780601f1061114857610100808354040283529182019161116a565b820191906000526020600020905b815481529060010190602001808311611156575b5050825160208401908083835b602083106111b457805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101611177565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052915050610659565b6001600160a01b03918216600090815260696020908152604080832093909416825291909152205460ff1690565b6000908152606660205260409020546001600160a01b0316151590565b3390565b600061124b8261121f565b6112865760405162461bcd60e51b815260040180806020018281038252602c815260200180611cc2602c913960400191505060405180910390fd5b600061129183610b74565b9050806001600160a01b0316846001600160a01b031614806112cc5750836001600160a01b03166112c184610713565b6001600160a01b0316145b806112dc57506112dc81856111f1565b949350505050565b6112ef838383611461565b6112f983826115bd565b61091282826116d0565b303b1590565b60006113347f80ac58cd00000000000000000000000000000000000000000000000000000000610623565b905090565b7fffffffff0000000000000000000000000000000000000000000000000000000080821614156113b0576040805162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b7fffffffff0000000000000000000000000000000000000000000000000000000016600090815260336020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b5490565b61141a8484846112e4565b6114268484848461170e565b610fe35760405162461bcd60e51b8152600401808060200182810382526032815260200180611c6c6032913960400191505060405180910390fd5b826001600160a01b031661147482610b74565b6001600160a01b0316146114b95760405162461bcd60e51b8152600401808060200182810382526029815260200180611dd36029913960400191505060405180910390fd5b6001600160a01b0382166114fe5760405162461bcd60e51b8152600401808060200182810382526024815260200180611c9e6024913960400191505060405180910390fd5b611507816119fc565b6001600160a01b038316600090815260686020526040902061152890611a4f565b6001600160a01b038216600090815260686020526040902061154990611a66565b60008181526066602052604080822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b0382166000908152609c60205260408120546115e790600163ffffffff611a6f16565b6000838152609d6020526040902054909150808214611682576001600160a01b0384166000908152609c6020526040812080548490811061162457fe5b9060005260206000200154905080609c6000876001600160a01b03166001600160a01b03168152602001908152602001600020838154811061166257fe5b6000918252602080832090910192909255918252609d9052604090208190555b6001600160a01b0384166000908152609c602052604090208054906116c9907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8301611c06565b5050505050565b6001600160a01b039091166000908152609c602081815260408084208054868652609d84529185208290559282526001810183559183529091200155565b6000611722846001600160a01b0316611ab8565b61172e575060016112dc565b600060606001600160a01b0386167f150b7a020000000000000000000000000000000000000000000000000000000061176561123c565b89888860405160240180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156117de5781810151838201526020016117c6565b50505050905090810190601f16801561180b5780820380516001836020036101000a031916815260200191505b50604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909a16999099178952518151919890975087965094509250829150849050835b602083106118dc57805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0909201916020918201910161189f565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461193e576040519150601f19603f3d011682016040523d82523d6000602084013e611943565b606091505b5091509150816119945780511561195d5780518082602001fd5b60405162461bcd60e51b8152600401808060200182810382526032815260200180611c6c6032913960400191505060405180910390fd5b60008180602001905160208110156119ab57600080fd5b50517fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a02000000000000000000000000000000000000000000000000000000001493506112dc92505050565b6000818152606760205260409020546001600160a01b031615610de657600090815260676020526040902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b8054611a6290600163ffffffff611a6f16565b9055565b80546001019055565b6000611ab183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611af1565b9392505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906112dc575050151592915050565b60008184841115611b805760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611b45578181015183820152602001611b2d565b50505050905090810190601f168015611b725780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611bc957805160ff1916838001178555611bf6565b82800160010185558215611bf6579182015b82811115611bf6578251825591602001919060010190611bdb565b50611c02929150611c26565b5090565b815481835581811115610912576000838152602090206109129181019083015b61071091905b80821115611c025760008155600101611c2c56fe455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a65644552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e6473a265627a7a72315820fa8101a956da30757f1a3f76bf22cc942a10eab62b7f4aa622edaf3b46e4ec1764736f6c63430005110032",
  "sourceMap": "447:117:85:-;;;;;;;;;",
  "deployedSourceMap": "447:117:85:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;447:117:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1008:131:71;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1008:131:71;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1481:83:86;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1481:83:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4538:200:82;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4538:200:82;;:::i;:::-;;;;-1:-1:-1;;;;;4538:200:82;;;;;;;;;;;;;;3838:415;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3838:415:82;;;;;;;;:::i;:::-;;2454:94:84;;;:::i;:::-;;;;;;;;;;;;;;;;6184:287:82;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;6184:287:82;;;;;;;;;;;;;;;;;:::i;2072:229:84:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2072:229:84;;;;;;;;:::i;7120:132:82:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;7120:132:82;;;;;;;;;;;;;;;;;:::i;917:321:86:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;917:321:86;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;917:321:86;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;917:321:86;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;917:321:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;917:321:86;;;;;;;;-1:-1:-1;917:321:86;;-1:-1:-1;;21:11;5:28;;2:2;;;46:1;43;36:12;2:2;917:321:86;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;917:321:86;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;917:321:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;917:321:86;;-1:-1:-1;917:321:86;;-1:-1:-1;;;;;917:321:86:i;2886:196:84:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2886:196:84;;:::i;3194:223:82:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3194:223:82;;:::i;3669:89:86:-;;;:::i;2768:207:82:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2768:207:82;-1:-1:-1;;;;;2768:207:82;;:::i;1316:242:84:-;;;:::i;1673:87:86:-;;;:::i;5031:249:82:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5031:249:82;;;;;;;;;;:::i;7975:269::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;7975:269:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;7975:269:82;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7975:269:82;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7975:269:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;7975:269:82;;-1:-1:-1;7975:269:82;;-1:-1:-1;;;;;7975:269:82:i;2063:545:86:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2063:545:86;;:::i;5602:145:82:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5602:145:82;;;;;;;;;;:::i;1008:131:71:-;1099:33;;;1076:4;1099:33;;;:20;:33;;;;;;;;1008:131;;;;:::o;1481:83:86:-;1552:5;1545:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1520:13;;1545:12;;1552:5;;1545:12;;1552:5;1545:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1481:83;;:::o;4538:200:82:-;4597:7;4624:16;4632:7;4624;:16::i;:::-;4616:73;;;;-1:-1:-1;;;4616:73:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4707:24:82;;;;:15;:24;;;;;;-1:-1:-1;;;;;4707:24:82;;4538:200::o;3838:415::-;3901:13;3917:16;3925:7;3917;:16::i;:::-;3901:32;;3957:5;-1:-1:-1;;;;;3951:11:82;:2;-1:-1:-1;;;;;3951:11:82;;;3943:57;;;;-1:-1:-1;;;3943:57:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4035:5;-1:-1:-1;;;;;4019:21:82;:12;:10;:12::i;:::-;-1:-1:-1;;;;;4019:21:82;;:62;;;;4044:37;4061:5;4068:12;:10;:12::i;:::-;4044:16;:37::i;:::-;4011:152;;;;-1:-1:-1;;;4011:152:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4174:24;;;;:15;:24;;;;;;:29;;;;-1:-1:-1;;;;;4174:29:82;;;;;;;;;4218:28;;4174:24;;4218:28;;;;;;;3838:415;;;:::o;2454:94:84:-;2524:10;:17;2454:94;:::o;6184:287:82:-;6326:41;6345:12;:10;:12::i;:::-;6359:7;6326:18;:41::i;:::-;6318:103;;;;-1:-1:-1;;;6318:103:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6432:32;6446:4;6452:2;6456:7;6432:13;:32::i;:::-;6184:287;;;:::o;2072:229:84:-;2152:7;2187:16;2197:5;2187:9;:16::i;:::-;2179:5;:24;2171:80;;;;-1:-1:-1;;;2171:80:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2268:19:84;;;;;;:12;:19;;;;;:26;;2288:5;;2268:26;;;;;;;;;;;;;;2261:33;;2072:229;;;;:::o;7120:132:82:-;7206:39;7223:4;7229:2;7233:7;7206:39;;;;;;;;;;;;:16;:39::i;917:321:86:-;1024:12:92;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:92;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;1225:18;1198:19;;;;;;1225:18;1213:4;1225:18;;;1170:80;1016:28:86;:26;:28::i;:::-;1008:37;;;;;;1056:12;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;1078:16:86;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;1182:49:86;1201:29;1182:18;:49::i;:::-;1268:14:92;1264:55;;;1307:5;1292:20;;;;;;917:321:86;;;:::o;2886:196:84:-;2944:7;2979:13;:11;:13::i;:::-;2971:5;:21;2963:78;;;;-1:-1:-1;;;2963:78:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3058:10;3069:5;3058:17;;;;;;;;;;;;;;;;3051:24;;2886:196;;;:::o;3194:223:82:-;3249:7;3284:20;;;:11;:20;;;;;;-1:-1:-1;;;;;3284:20:82;3322:19;3314:73;;;;-1:-1:-1;;;3314:73:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3405:5;3194:223;-1:-1:-1;;3194:223:82:o;3669:89:86:-;3743:8;3736:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3711:13;;3736:15;;3743:8;;3736:15;;3743:8;3736:15;;;;;;;;;;;;;;;;;;;;;;;;2768:207:82;2823:7;-1:-1:-1;;;;;2850:19:82;;2842:74;;;;-1:-1:-1;;;2842:74:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2934:24:82;;;;;;:17;:24;;;;;:34;;:32;:34::i;1316:242:84:-;1024:12:92;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:92;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;1225:18;1198:19;;;;;;1225:18;1213:4;1225:18;;;1170:80;1375:28:84;:26;:28::i;:::-;1367:37;;;;;;1500:51;1519:31;1500:18;:51::i;:::-;1268:14:92;1264:55;;;1307:5;1292:20;;;;;;1264:55;1316:242:84;:::o;1673:87:86:-;1746:7;1739:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1714:13;;1739:14;;1746:7;;1739:14;;1746:7;1739:14;;;;;;;;;;;;;;;;;;;;;;;;5031:249:82;5116:12;:10;:12::i;:::-;-1:-1:-1;;;;;5110:18:82;:2;-1:-1:-1;;;;;5110:18:82;;;5102:56;;;;;-1:-1:-1;;;5102:56:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;5208:8;5169:18;:32;5188:12;:10;:12::i;:::-;-1:-1:-1;;;;;5169:32:82;;;;;;;;;;;;;;;;;-1:-1:-1;5169:32:82;;;:36;;;;;;;;;;;;:47;;;;;;;;;;;;;;5246:12;:10;:12::i;:::-;5231:42;;;;;;;;;;-1:-1:-1;;;;;5231:42:82;;;;;;;;;;;;;;5031:249;;:::o;7975:269::-;8089:41;8108:12;:10;:12::i;:::-;8122:7;8089:18;:41::i;:::-;8081:103;;;;-1:-1:-1;;;8081:103:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8194:43;8212:4;8218:2;8222:7;8231:5;8194:17;:43::i;:::-;7975:269;;;;:::o;2063:545:86:-;2121:13;2154:16;2162:7;2154;:16::i;:::-;2146:76;;;;-1:-1:-1;;;2146:76:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2259:19;;;;:10;:19;;;;;;;;;2233:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:23;;:45;;;2259:19;2233:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2392:9;2386:23;2413:1;2386:28;2382:220;;;-1:-1:-1;;2430:9:86;;;;;;;;;-1:-1:-1;2430:9:86;;;;2382:220;2570:8;2580:9;2553:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2553:37:86;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;139:12;;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2553:37:86;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2553:37:86;;;2539:52;;;;;5602:145:82;-1:-1:-1;;;;;5705:25:82;;;5682:4;5705:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;5602:145::o;9415:152::-;9472:4;9504:20;;;:11;:20;;;;;;-1:-1:-1;;;;;9504:20:82;9541:19;;;9415:152::o;867:96:64:-;946:10;867:96;:::o;9928:329:82:-;10013:4;10037:16;10045:7;10037;:16::i;:::-;10029:73;;;;-1:-1:-1;;;10029:73:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10112:13;10128:16;10136:7;10128;:16::i;:::-;10112:32;;10173:5;-1:-1:-1;;;;;10162:16:82;:7;-1:-1:-1;;;;;10162:16:82;;:51;;;;10206:7;-1:-1:-1;;;;;10182:31:82;:20;10194:7;10182:11;:20::i;:::-;-1:-1:-1;;;;;10182:31:82;;10162:51;:87;;;;10217:32;10234:5;10241:7;10217:16;:32::i;:::-;10154:96;9928:329;-1:-1:-1;;;;9928:329:82:o;3457:239:84:-;3542:38;3562:4;3568:2;3572:7;3542:19;:38::i;:::-;3591:47;3624:4;3630:7;3591:32;:47::i;:::-;3649:40;3677:2;3681:7;3649:27;:40::i;1409:498:92:-;1820:4;1864:17;1895:7;1409:498;:::o;2441:123:82:-;2495:4;2518:39;2536:20;2518:17;:39::i;:::-;2511:46;;2441:123;:::o;1533:190:71:-;1608:25;;;;;;1600:66;;;;;-1:-1:-1;;;1600:66:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;1676:33;;;;;;:20;:33;;;;;:40;;;;1712:4;1676:40;;;1533:190::o;1065:112:70:-;1156:14;;1065:112::o;8951:269:82:-;9060:32;9074:4;9080:2;9084:7;9060:13;:32::i;:::-;9110:48;9133:4;9139:2;9143:7;9152:5;9110:22;:48::i;:::-;9102:111;;;;-1:-1:-1;;;9102:111:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13538:447;13651:4;-1:-1:-1;;;;;13631:24:82;:16;13639:7;13631;:16::i;:::-;-1:-1:-1;;;;;13631:24:82;;13623:78;;;;-1:-1:-1;;;13623:78:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13719:16:82;;13711:65;;;;-1:-1:-1;;;13711:65:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13787:23;13802:7;13787:14;:23::i;:::-;-1:-1:-1;;;;;13821:23:82;;;;;;:17;:23;;;;;:35;;:33;:35::i;:::-;-1:-1:-1;;;;;13866:21:82;;;;;;:17;:21;;;;;:33;;:31;:33::i;:::-;13910:20;;;;:11;:20;;;;;;:25;;;;-1:-1:-1;;;;;13910:25:82;;;;;;;;;13951:27;;13910:20;;13951:27;;;;;;;13538:447;;;:::o;6567:1128:84:-;-1:-1:-1;;;;;6854:18:84;;6829:22;6854:18;;;:12;:18;;;;;:25;:32;;6884:1;6854:32;:29;:32;:::i;:::-;6896:18;6917:26;;;:17;:26;;;;;;6829:57;;-1:-1:-1;7047:28:84;;;7043:323;;-1:-1:-1;;;;;7113:18:84;;7091:19;7113:18;;;:12;:18;;;;;:34;;7132:14;;7113:34;;;;;;;;;;;;;;7091:56;;7195:11;7162:12;:18;7175:4;-1:-1:-1;;;;;7162:18:84;-1:-1:-1;;;;;7162:18:84;;;;;;;;;;;;7181:10;7162:30;;;;;;;;;;;;;;;;;;;:44;;;;7278:30;;;:17;:30;;;;;:43;;;7043:323;-1:-1:-1;;;;;7452:18:84;;;;;;:12;:18;;;;;:27;;;;;;;;;:::i;:::-;;6567:1128;;;;:::o;5411:183::-;-1:-1:-1;;;;;5524:16:84;;;;;;;:12;:16;;;;;;;;:23;;5495:26;;;:17;:26;;;;;:52;;;5557:16;;;39:1:-1;23:18;;45:23;;5557:30:84;;;;;;;;5411:183::o;14624:1051:82:-;14745:4;14770:15;:2;-1:-1:-1;;;;;14770:13:82;;:15::i;:::-;14765:58;;-1:-1:-1;14808:4:82;14801:11;;14765:58;14892:12;14906:23;-1:-1:-1;;;;;14933:7:82;;14977:45;15036:12;:10;:12::i;:::-;15062:4;15080:7;15101:5;14941:175;;;;;;-1:-1:-1;;;;;14941:175:82;-1:-1:-1;;;;;14941:175:82;;;;;;-1:-1:-1;;;;;14941:175:82;-1:-1:-1;;;;;14941:175:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;14941:175:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14941:175:82;;;22:32:-1;26:21;;;22:32;6:49;;14941:175:82;;;49:4:-1;25:18;;61:17;;14941:175:82;182:15:-1;14941:175:82;;;;179:29:-1;;;;160:49;;14933:184:82;;;14941:175;;14933:184;;-1:-1:-1;14933:184:82;;-1:-1:-1;25:18;-1:-1;14933:184:82;-1:-1:-1;14933:184:82;;-1:-1:-1;14933:184:82;;-1:-1:-1;25:18;36:153;66:2;61:3;58:11;36:153;;176:10;;164:23;;139:12;;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;14933:184:82;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;14891:226:82;;;;15132:7;15127:542;;15159:17;;:21;15155:376;;15324:10;15318:17;15384:15;15371:10;15367:2;15363:19;15356:44;15273:145;15456:60;;-1:-1:-1;;;15456:60:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15127:542;15561:13;15588:10;15577:32;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;15577:32:82;15631:26;;15641:16;15631:26;;-1:-1:-1;15623:35:82;;-1:-1:-1;;;15623:35:82;15837:171;15936:1;15900:24;;;:15;:24;;;;;;-1:-1:-1;;;;;15900:24:82;:38;15896:106;;15989:1;15954:24;;;:15;:24;;;;;:37;;;;;;15837:171::o;1367:108:70:-;1447:14;;:21;;1466:1;1447:21;:18;:21;:::i;:::-;1430:38;;1367:108::o;1183:178::-;1335:19;;1353:1;1335:19;;;1183:178::o;1274:134:74:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;1274:134;-1:-1:-1;;;1274:134:74:o;686:610:91:-;746:4;1207:20;;1052:66;1246:23;;;;;;:42;;-1:-1:-1;;1273:15:91;;;1238:51;-1:-1:-1;;686:610:91:o;1732:187:74:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1837:29:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:74;;;1732:187::o;447:117:85:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;447:117:85;;;-1:-1:-1;447:117:85;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity ^0.5.0;\n\nimport \"@openzeppelin/upgrades/contracts/Initializable.sol\";\nimport \"./ERC721.sol\";\nimport \"./ERC721Enumerable.sol\";\nimport \"./ERC721Metadata.sol\";\n\n/**\n * @title Full ERC721 Token\n * @dev This implementation includes all the required and some optional functionality of the ERC721 standard\n * Moreover, it includes approve all functionality using operator terminology.\n *\n * See https://eips.ethereum.org/EIPS/eip-721\n */\ncontract ERC721Full is Initializable, ERC721, ERC721Enumerable, ERC721Metadata {\n    uint256[50] private ______gap;\n}\n",
  "sourcePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Full.sol",
  "ast": {
    "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Full.sol",
    "exportedSymbols": {
      "ERC721Full": [
        22453
      ]
    },
    "id": 22454,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 22436,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:85"
      },
      {
        "absolutePath": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "file": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "id": 22437,
        "nodeType": "ImportDirective",
        "scope": 22454,
        "sourceUnit": 22974,
        "src": "25:60:85",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 22438,
        "nodeType": "ImportDirective",
        "scope": 22454,
        "sourceUnit": 22035,
        "src": "86:22:85",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Enumerable.sol",
        "file": "./ERC721Enumerable.sol",
        "id": 22439,
        "nodeType": "ImportDirective",
        "scope": 22454,
        "sourceUnit": 22435,
        "src": "109:32:85",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Metadata.sol",
        "file": "./ERC721Metadata.sol",
        "id": 22440,
        "nodeType": "ImportDirective",
        "scope": 22454,
        "sourceUnit": 22652,
        "src": "142:30:85",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 22441,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 22973,
              "src": "470:13:85",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$22973",
                "typeString": "contract Initializable"
              }
            },
            "id": 22442,
            "nodeType": "InheritanceSpecifier",
            "src": "470:13:85"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 22443,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 22034,
              "src": "485:6:85",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$22034",
                "typeString": "contract ERC721"
              }
            },
            "id": 22444,
            "nodeType": "InheritanceSpecifier",
            "src": "485:6:85"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 22445,
              "name": "ERC721Enumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 22434,
              "src": "493:16:85",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Enumerable_$22434",
                "typeString": "contract ERC721Enumerable"
              }
            },
            "id": 22446,
            "nodeType": "InheritanceSpecifier",
            "src": "493:16:85"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 22447,
              "name": "ERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 22651,
              "src": "511:14:85",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Metadata_$22651",
                "typeString": "contract ERC721Metadata"
              }
            },
            "id": 22448,
            "nodeType": "InheritanceSpecifier",
            "src": "511:14:85"
          }
        ],
        "contractDependencies": [
          19361,
          20055,
          20065,
          22034,
          22434,
          22651,
          22757,
          22787,
          22813,
          22973
        ],
        "contractKind": "contract",
        "documentation": "@title Full ERC721 Token\n@dev This implementation includes all the required and some optional functionality of the ERC721 standard\nMoreover, it includes approve all functionality using operator terminology.\n * See https://eips.ethereum.org/EIPS/eip-721",
        "fullyImplemented": true,
        "id": 22453,
        "linearizedBaseContracts": [
          22453,
          22651,
          22813,
          22434,
          22787,
          22034,
          22757,
          20055,
          20065,
          19361,
          22973
        ],
        "name": "ERC721Full",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 22452,
            "name": "______gap",
            "nodeType": "VariableDeclaration",
            "scope": 22453,
            "src": "532:29:85",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 22449,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "532:7:85",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 22451,
              "length": {
                "argumentTypes": null,
                "hexValue": "3530",
                "id": 22450,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "540:2:85",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_50_by_1",
                  "typeString": "int_const 50"
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "532:11:85",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "value": null,
            "visibility": "private"
          }
        ],
        "scope": 22454,
        "src": "447:117:85"
      }
    ],
    "src": "0:565:85"
  },
  "legacyAST": {
    "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Full.sol",
    "exportedSymbols": {
      "ERC721Full": [
        22453
      ]
    },
    "id": 22454,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 22436,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:85"
      },
      {
        "absolutePath": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "file": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "id": 22437,
        "nodeType": "ImportDirective",
        "scope": 22454,
        "sourceUnit": 22974,
        "src": "25:60:85",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 22438,
        "nodeType": "ImportDirective",
        "scope": 22454,
        "sourceUnit": 22035,
        "src": "86:22:85",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Enumerable.sol",
        "file": "./ERC721Enumerable.sol",
        "id": 22439,
        "nodeType": "ImportDirective",
        "scope": 22454,
        "sourceUnit": 22435,
        "src": "109:32:85",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Metadata.sol",
        "file": "./ERC721Metadata.sol",
        "id": 22440,
        "nodeType": "ImportDirective",
        "scope": 22454,
        "sourceUnit": 22652,
        "src": "142:30:85",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 22441,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 22973,
              "src": "470:13:85",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$22973",
                "typeString": "contract Initializable"
              }
            },
            "id": 22442,
            "nodeType": "InheritanceSpecifier",
            "src": "470:13:85"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 22443,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 22034,
              "src": "485:6:85",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$22034",
                "typeString": "contract ERC721"
              }
            },
            "id": 22444,
            "nodeType": "InheritanceSpecifier",
            "src": "485:6:85"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 22445,
              "name": "ERC721Enumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 22434,
              "src": "493:16:85",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Enumerable_$22434",
                "typeString": "contract ERC721Enumerable"
              }
            },
            "id": 22446,
            "nodeType": "InheritanceSpecifier",
            "src": "493:16:85"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 22447,
              "name": "ERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 22651,
              "src": "511:14:85",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Metadata_$22651",
                "typeString": "contract ERC721Metadata"
              }
            },
            "id": 22448,
            "nodeType": "InheritanceSpecifier",
            "src": "511:14:85"
          }
        ],
        "contractDependencies": [
          19361,
          20055,
          20065,
          22034,
          22434,
          22651,
          22757,
          22787,
          22813,
          22973
        ],
        "contractKind": "contract",
        "documentation": "@title Full ERC721 Token\n@dev This implementation includes all the required and some optional functionality of the ERC721 standard\nMoreover, it includes approve all functionality using operator terminology.\n * See https://eips.ethereum.org/EIPS/eip-721",
        "fullyImplemented": true,
        "id": 22453,
        "linearizedBaseContracts": [
          22453,
          22651,
          22813,
          22434,
          22787,
          22034,
          22757,
          20055,
          20065,
          19361,
          22973
        ],
        "name": "ERC721Full",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 22452,
            "name": "______gap",
            "nodeType": "VariableDeclaration",
            "scope": 22453,
            "src": "532:29:85",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 22449,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "532:7:85",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 22451,
              "length": {
                "argumentTypes": null,
                "hexValue": "3530",
                "id": 22450,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "540:2:85",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_50_by_1",
                  "typeString": "int_const 50"
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "532:11:85",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "value": null,
            "visibility": "private"
          }
        ],
        "scope": 22454,
        "src": "447:117:85"
      }
    ],
    "src": "0:565:85"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-08-07T09:48:49.815Z",
  "devdoc": {
    "details": "This implementation includes all the required and some optional functionality of the ERC721 standard Moreover, it includes approve all functionality using operator terminology. * See https://eips.ethereum.org/EIPS/eip-721",
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "baseURI()": {
        "details": "Returns the base URI set via {_setBaseURI}. This will be automatically added as a preffix in {tokenURI} to each token's URI, when they are non-empty.    * _Available since v2.5.0._"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "initialize()": {
        "details": "Constructor function."
      },
      "initialize(string,string)": {
        "details": "Constructor function"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "name()": {
        "details": "Gets the token name.",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "return": "string representing the token symbol"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner.",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokenURI(uint256)": {
        "details": "Returns the URI for a given token ID. May return an empty string.     * If the token's URI is non-empty and a base URI was set (via {_setBaseURI}), it will be added to the token ID's URI as a prefix.     * Reverts if the token ID does not exist."
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract.",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    },
    "title": "Full ERC721 Token"
  },
  "userdoc": {
    "methods": {}
  }
}