{
  "contractName": "IAccessModule",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "enum IAccessModule.Operation",
          "name": "operation",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "isOperationAllowed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"internalType\":\"enum IAccessModule.Operation\",\"name\":\"operation\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"isOperationAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"isOperationAllowed(uint8,address)\":{\"params\":{\"operation\":\"Requested operation\",\"sender\":\"Sender of transaction\"}}}},\"userdoc\":{\"methods\":{\"isOperationAllowed(uint8,address)\":{\"notice\":\"Check if operation is allowed\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/ilya/Documents/Akropolis/dca-strategy-bot/contracts/interfaces/access/IAccessModule.sol\":\"IAccessModule\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"/Users/ilya/Documents/Akropolis/dca-strategy-bot/contracts/interfaces/access/IAccessModule.sol\":{\"keccak256\":\"0x9f3b79bca31912dea0b025628b5916a91a5bd945e8af22a990c6d46c71106aec\",\"urls\":[\"bzz-raw://4e587b04e14a1b589fb2cc6614d53157c8f7b92669a6ad5b6af91777331b20e3\",\"dweb:/ipfs/QmSAF8amRW8Dpz2yF8qFfygXJ9dfpMYokFoW8Ns6pC1Xf6\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.5.12;\n\ninterface IAccessModule {\n    enum Operation {\n        // LiquidityModule\n        Deposit,\n        Withdraw,\n        // LoanModule\n        CreateDebtProposal,\n        AddPledge,\n        WithdrawPledge,\n        CancelDebtProposal,\n        ExecuteDebtProposal,\n        Repay,\n        ExecuteDebtDefault,\n        WithdrawUnlockedPledge\n    }\n    \n    /**\n     * @notice Check if operation is allowed\n     * @param operation Requested operation\n     * @param sender Sender of transaction\n     */\n    function isOperationAllowed(Operation operation, address sender) external view returns(bool);\n}",
  "sourcePath": "/Users/ilya/Documents/Akropolis/dca-strategy-bot/contracts/interfaces/access/IAccessModule.sol",
  "ast": {
    "absolutePath": "/Users/ilya/Documents/Akropolis/dca-strategy-bot/contracts/interfaces/access/IAccessModule.sol",
    "exportedSymbols": {
      "IAccessModule": [
        5110
      ]
    },
    "id": 5111,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5089,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:11"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 5110,
        "linearizedBaseContracts": [
          5110
        ],
        "name": "IAccessModule",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "IAccessModule.Operation",
            "id": 5100,
            "members": [
              {
                "id": 5090,
                "name": "Deposit",
                "nodeType": "EnumValue",
                "src": "108:7:11"
              },
              {
                "id": 5091,
                "name": "Withdraw",
                "nodeType": "EnumValue",
                "src": "125:8:11"
              },
              {
                "id": 5092,
                "name": "CreateDebtProposal",
                "nodeType": "EnumValue",
                "src": "165:18:11"
              },
              {
                "id": 5093,
                "name": "AddPledge",
                "nodeType": "EnumValue",
                "src": "193:9:11"
              },
              {
                "id": 5094,
                "name": "WithdrawPledge",
                "nodeType": "EnumValue",
                "src": "212:14:11"
              },
              {
                "id": 5095,
                "name": "CancelDebtProposal",
                "nodeType": "EnumValue",
                "src": "236:18:11"
              },
              {
                "id": 5096,
                "name": "ExecuteDebtProposal",
                "nodeType": "EnumValue",
                "src": "264:19:11"
              },
              {
                "id": 5097,
                "name": "Repay",
                "nodeType": "EnumValue",
                "src": "293:5:11"
              },
              {
                "id": 5098,
                "name": "ExecuteDebtDefault",
                "nodeType": "EnumValue",
                "src": "308:18:11"
              },
              {
                "id": 5099,
                "name": "WithdrawUnlockedPledge",
                "nodeType": "EnumValue",
                "src": "336:22:11"
              }
            ],
            "name": "Operation",
            "nodeType": "EnumDefinition",
            "src": "56:308:11"
          },
          {
            "body": null,
            "documentation": "@notice Check if operation is allowed\n@param operation Requested operation\n@param sender Sender of transaction",
            "id": 5109,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isOperationAllowed",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5102,
                  "name": "operation",
                  "nodeType": "VariableDeclaration",
                  "scope": 5109,
                  "src": "550:19:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Operation_$5100",
                    "typeString": "enum IAccessModule.Operation"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 5101,
                    "name": "Operation",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5100,
                    "src": "550:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Operation_$5100",
                      "typeString": "enum IAccessModule.Operation"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5104,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 5109,
                  "src": "571:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5103,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "571:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "549:37:11"
            },
            "returnParameters": {
              "id": 5108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5107,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5109,
                  "src": "609:4:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5106,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "609:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "608:6:11"
            },
            "scope": 5110,
            "src": "522:93:11",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 5111,
        "src": "26:591:11"
      }
    ],
    "src": "0:617:11"
  },
  "legacyAST": {
    "absolutePath": "/Users/ilya/Documents/Akropolis/dca-strategy-bot/contracts/interfaces/access/IAccessModule.sol",
    "exportedSymbols": {
      "IAccessModule": [
        5110
      ]
    },
    "id": 5111,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5089,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:11"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 5110,
        "linearizedBaseContracts": [
          5110
        ],
        "name": "IAccessModule",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "IAccessModule.Operation",
            "id": 5100,
            "members": [
              {
                "id": 5090,
                "name": "Deposit",
                "nodeType": "EnumValue",
                "src": "108:7:11"
              },
              {
                "id": 5091,
                "name": "Withdraw",
                "nodeType": "EnumValue",
                "src": "125:8:11"
              },
              {
                "id": 5092,
                "name": "CreateDebtProposal",
                "nodeType": "EnumValue",
                "src": "165:18:11"
              },
              {
                "id": 5093,
                "name": "AddPledge",
                "nodeType": "EnumValue",
                "src": "193:9:11"
              },
              {
                "id": 5094,
                "name": "WithdrawPledge",
                "nodeType": "EnumValue",
                "src": "212:14:11"
              },
              {
                "id": 5095,
                "name": "CancelDebtProposal",
                "nodeType": "EnumValue",
                "src": "236:18:11"
              },
              {
                "id": 5096,
                "name": "ExecuteDebtProposal",
                "nodeType": "EnumValue",
                "src": "264:19:11"
              },
              {
                "id": 5097,
                "name": "Repay",
                "nodeType": "EnumValue",
                "src": "293:5:11"
              },
              {
                "id": 5098,
                "name": "ExecuteDebtDefault",
                "nodeType": "EnumValue",
                "src": "308:18:11"
              },
              {
                "id": 5099,
                "name": "WithdrawUnlockedPledge",
                "nodeType": "EnumValue",
                "src": "336:22:11"
              }
            ],
            "name": "Operation",
            "nodeType": "EnumDefinition",
            "src": "56:308:11"
          },
          {
            "body": null,
            "documentation": "@notice Check if operation is allowed\n@param operation Requested operation\n@param sender Sender of transaction",
            "id": 5109,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isOperationAllowed",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5102,
                  "name": "operation",
                  "nodeType": "VariableDeclaration",
                  "scope": 5109,
                  "src": "550:19:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Operation_$5100",
                    "typeString": "enum IAccessModule.Operation"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 5101,
                    "name": "Operation",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5100,
                    "src": "550:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Operation_$5100",
                      "typeString": "enum IAccessModule.Operation"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5104,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 5109,
                  "src": "571:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5103,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "571:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "549:37:11"
            },
            "returnParameters": {
              "id": 5108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5107,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5109,
                  "src": "609:4:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5106,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "609:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "608:6:11"
            },
            "scope": 5110,
            "src": "522:93:11",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 5111,
        "src": "26:591:11"
      }
    ],
    "src": "0:617:11"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-08-07T09:48:49.875Z",
  "devdoc": {
    "methods": {
      "isOperationAllowed(uint8,address)": {
        "params": {
          "operation": "Requested operation",
          "sender": "Sender of transaction"
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "isOperationAllowed(uint8,address)": {
        "notice": "Check if operation is allowed"
      }
    }
  }
}