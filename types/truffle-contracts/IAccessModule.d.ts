/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import BN from "bn.js";
import { EventData, PastEventOptions } from "web3-eth-contract";

export interface IAccessModuleContract
  extends Truffle.Contract<IAccessModuleInstance> {
  "new"(meta?: Truffle.TransactionDetails): Promise<IAccessModuleInstance>;
}

type AllEvents = never;

export interface IAccessModuleInstance extends Truffle.ContractInstance {
  /**
   * Check if operation is allowed
   * @param operation Requested operation
   * @param sender Sender of transaction
   */
  isOperationAllowed(
    operation: number | BN | string,
    sender: string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<boolean>;

  methods: {
    /**
     * Check if operation is allowed
     * @param operation Requested operation
     * @param sender Sender of transaction
     */
    isOperationAllowed(
      operation: number | BN | string,
      sender: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<boolean>;
  };

  getPastEvents(event: string): Promise<EventData[]>;
  getPastEvents(
    event: string,
    options: PastEventOptions,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
  getPastEvents(event: string, options: PastEventOptions): Promise<EventData[]>;
  getPastEvents(
    event: string,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
}
